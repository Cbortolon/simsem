
R version 2.15.0 (2012-03-30)
Copyright (C) 2012 The R Foundation for Statistical Computing
ISBN 3-900051-07-0
Platform: i386-pc-mingw32/i386 (32-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> pkgname <- "simsem"
> source(file.path(R.home("share"), "R", "examples-header.R"))
> options(warn = 1)
> options(pager = "console")
> library('simsem')
Loading required package: lavaan
This is lavaan 0.4-14
lavaan is BETA software! Please report any bugs.
Loading required package: MASS
 
###############################################################################################
This is simsem 0.2-4
simsem is BETA software! Please report any bugs.
simsem was developed at the University of Kansas Center for Research Methods and Data Analysis.
###############################################################################################
> 
> assign(".oldSearch", search(), pos = 'CheckExEnv')
> cleanEx()
> nameEx("MatrixSet-class")
> ### * MatrixSet-class
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: MatrixSet-class
> ### Title: Class '"MatrixSet"'
> ### Aliases: MatrixSet-class MisspecSet-class summary,MatrixSet-method
> ###   summary,MisspecSet-method
> 
> ### ** Examples
> 
> showClass("SimSet")
Class "SimSet" [package "simsem"]

Slots:
                                                                            
Name:  modelType        LY        TE       RTE       VTE        PS       RPS
Class: character SimMatrix SymMatrix SymMatrix SimVector SymMatrix SymMatrix
                                                                            
Name:        VPS        BE        TY        AL        ME        MY        VE
Class: SimVector SimMatrix SimVector SimVector SimVector SimVector SimVector
                                                                            
Name:         VY        LX        TD       RTD       VTD        PH       RPH
Class: SimVector SimMatrix SymMatrix SymMatrix SimVector SymMatrix SymMatrix
                                                                            
Name:        VPH        GA        TX        KA        MX        VX        TH
Class: SimVector SimMatrix SimVector SimVector SimVector SimVector SimMatrix
                
Name:        RTH
Class: SimMatrix

Known Subclasses: 
Class "NullSimSet", directly
Class "SimMisspec", directly
Class "NullSimMisspec", by class "SimMisspec", distance 2
> 
> loading <- matrix(0, 6, 2)
> loading[1:3, 1] <- NA
> loading[4:6, 2] <- NA
> loadingValues <- matrix(0, 6, 2)
> loadingValues[1:3, 1] <- 0.7
> loadingValues[4:6, 2] <- 0.7
> LX <- simMatrix(loading, loadingValues)
> latent.cor <- matrix(NA, 2, 2)
> diag(latent.cor) <- 1
> RPH <- symMatrix(latent.cor, 0.5)
> error.cor <- matrix(0, 6, 6)
> diag(error.cor) <- 1
> RTD <- symMatrix(error.cor)
> CFA.Model <- simSetCFA(LX = LX, RPH = RPH, RTD = RTD)
> MatrixSet <- run(CFA.Model)
> summary(MatrixSet)
RANDOM NUMBERS OF MODEL MATRICES
Model Type
[1] "CFA"
-- Endogeneous Variable --

LY: Loading of Indicator.Y on Factor.ETA 
     [,1] [,2]
[1,]  0.7  0.0
[2,]  0.7  0.0
[3,]  0.7  0.0
[4,]  0.0  0.7
[5,]  0.0  0.7
[6,]  0.0  0.7

TE: Covariance of Measurement.Error.EPSILON 
     [,1] [,2] [,3] [,4] [,5] [,6]
[1,] 0.51 0.00 0.00 0.00 0.00 0.00
[2,] 0.00 0.51 0.00 0.00 0.00 0.00
[3,] 0.00 0.00 0.51 0.00 0.00 0.00
[4,] 0.00 0.00 0.00 0.51 0.00 0.00
[5,] 0.00 0.00 0.00 0.00 0.51 0.00
[6,] 0.00 0.00 0.00 0.00 0.00 0.51

VTE: Variance of Measurement.Error.EPSILON 
[1] 0.51 0.51 0.51 0.51 0.51 0.51

RTE: Correlation of Measurement.Error.EPSILON 
     [,1] [,2] [,3] [,4] [,5] [,6]
[1,]    1    0    0    0    0    0
[2,]    0    1    0    0    0    0
[3,]    0    0    1    0    0    0
[4,]    0    0    0    1    0    0
[5,]    0    0    0    0    1    0
[6,]    0    0    0    0    0    1

VY: Variance of Indicator.Y 
[1] 1 1 1 1 1 1

TY: Measurement Intercept of Indicator.Y 
[1] 0 0 0 0 0 0

MY: mean of Indicator.Y 
[1] 0 0 0 0 0 0

PS: Covariance of Regression.Residual.PSI 
     [,1] [,2]
[1,]  1.0  0.5
[2,]  0.5  1.0

VPS: Variance of Regression.Residual.PSI 
[1] 1 1

RPS: Correlation of Regression.Residual.PSI 
     [,1] [,2]
[1,]  1.0  0.5
[2,]  0.5  1.0

VE: Variance of Factor.ETA 
[1] 1 1

AL: Regression Intercept of Factor.ETA 
[1] 0 0

ME: mean of Factor.ETA 
[1] 0 0
------------------------------------------------- 
> 
> 
> 
> cleanEx()
> nameEx("Null-class")
> ### * Null-class
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: Nullclass
> ### Title: Null Objects
> ### Aliases: NullDataFrame-class NullVector-class NullMatrix-class
> ###   NullSimMatrix-class NullSymMatrix-class NullSimVector-class
> ###   NullSimSet-class NullSimEqualCon-class NullSimREqualCon-class
> ###   NullRSet-class NullSimMisspec-class NullSimDataDist-class
> ###   NullSimMissing-class NullSimFunction-class
> ### Keywords: classes
> 
> ### ** Examples
> 
> # No example
> 
> 
> 
> cleanEx()
> nameEx("SimData-class")
> ### * SimData-class
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: SimData-class
> ### Title: Class '"SimData"'
> ### Aliases: SimData-class run,SimData-method summary,SimData-method
> ### Keywords: classes
> 
> ### ** Examples
> 
> showClass("SimData")
Class "SimData" [package "simsem"]

Slots:
                                                                              
Name:    modelType           n       param     misspec    equalCon     maxDraw
Class:   character     numeric      SimSet  SimMisspec SimEqualCon     numeric
                                                                              
Name:   sequential     facDist   errorDist     indDist      indLab   modelBoot
Class:     logical SimDataDist SimDataDist SimDataDist      vector     logical
                  
Name:     realData
Class:  data.frame
> loading <- matrix(0, 6, 2)
> loading[1:3, 1] <- NA
> loading[4:6, 2] <- NA
> loadingValues <- matrix(0, 6, 2)
> loadingValues[1:3, 1] <- 0.7
> loadingValues[4:6, 2] <- 0.7
> LX <- simMatrix(loading, loadingValues)
> latent.cor <- matrix(NA, 2, 2)
> diag(latent.cor) <- 1
> RPH <- symMatrix(latent.cor, 0.5)
> error.cor <- matrix(0, 6, 6)
> diag(error.cor) <- 1
> RTD <- symMatrix(error.cor)
> CFA.Model <- simSetCFA(LY = LX, RPS = RPH, RTE = RTD)
> SimData <- simData(CFA.Model, 200)
> summary(SimData)
DATA OBJECT
Model Type
[1] "CFA"
Sample Size
[1] 200
========= Parameters Set ============
SET OF MODEL MATRICES
Model Type
[1] "CFA"
-- Endogeneous Variable --

LY: Loading of Indicator.Y on Factor.ETA 
     [,1]     [,2]    
[1,] "NA:0.7" "0"     
[2,] "NA:0.7" "0"     
[3,] "NA:0.7" "0"     
[4,] "0"      "NA:0.7"
[5,] "0"      "NA:0.7"
[6,] "0"      "NA:0.7"

RTE: Correlation of Measurement.Error.EPSILON 
     [,1] [,2] [,3] [,4] [,5] [,6]
[1,] "1"  "0"  "0"  "0"  "0"  "0" 
[2,] "0"  "1"  "0"  "0"  "0"  "0" 
[3,] "0"  "0"  "1"  "0"  "0"  "0" 
[4,] "0"  "0"  "0"  "1"  "0"  "0" 
[5,] "0"  "0"  "0"  "0"  "1"  "0" 
[6,] "0"  "0"  "0"  "0"  "0"  "1" 

VY: Variance of Indicator.Y 
[1] "NA:1" "NA:1" "NA:1" "NA:1" "NA:1" "NA:1"

TY: Measurement Intercept of Indicator.Y 
[1] "NA:0" "NA:0" "NA:0" "NA:0" "NA:0" "NA:0"

VPS: Variance of Regression.Residual.PSI 
[1] "1" "1"

RPS: Correlation of Regression.Residual.PSI 
     [,1]     [,2]    
[1,] "1"      "NA:0.5"
[2,] "NA:0.5" "1"     

VE: Variance of Factor.ETA 
[1] "1" "1"

AL: Regression Intercept of Factor.ETA 
[1] "0" "0"

ME: mean of Factor.ETA 
[1] "0" "0"
-------------------------- 
Number of free parameters =  19 
=====================================
Adding Misspecification?
[1] "No"
Adding Constraint?
[1] "No"
Maximum Random Sampling Parameters
[1] 100
> run(SimData)
               y1          y2           y3           y4           y5
1   -0.8045405678 -1.07615375  0.057008974 -0.902462922 -0.420303205
2    0.1846928903 -1.52519893 -0.596848908 -0.360271862  0.655075424
3   -0.9818489653 -1.00020156 -1.872460732  0.547424678  0.455643551
4    1.5595324860  0.98242927  1.129591494  1.133175506  0.771936669
5    1.1845695532  1.29080775  1.312506730 -0.614798923 -1.246842377
6   -2.4256570718 -0.52391592 -2.119384992  0.801634881  0.447980202
7   -0.8026409861 -0.01211317  0.886817943  0.874982013  0.264254397
8    0.0563541774  1.26607638 -0.572218116  0.960753031  1.193425123
9    1.4677564715  0.51392041 -0.801413687 -0.485506296  1.285396956
10  -0.2799641994 -0.93132978 -0.102089434  0.318816637 -1.065786453
11   1.1792430190  1.32162096  0.774606605  1.177173143  0.997041766
12   0.2512034453  0.06410751 -0.103496897  0.112998515  1.030275697
13  -0.5563709849  0.67445625 -0.824812638 -1.216554530  0.178167961
14  -1.7843904375  0.36259070 -1.175083029 -1.812722455 -3.445337824
15   1.8844962672 -0.52205666 -0.442225197  1.403045471  0.909652448
16  -0.9452810102 -0.62387834 -0.598349054  0.507410773  1.772555524
17  -0.0831099570  0.47046975  0.001881615 -0.684020271  0.600954470
18   0.0667599058  2.43207667  1.118568015  0.128168047 -0.759673520
19   0.0624300206  0.98647272 -0.269307069  1.547295847 -0.375973318
20   0.3418543450 -0.62490267  1.542665030 -0.535117264  1.106608185
21   1.1985632899  1.64210058  1.382428213 -1.009453441  0.262620519
22  -0.4294336414  0.51578927  1.489116211  1.073752569  0.686141945
23   1.4200746408 -0.52870595  0.120453095 -0.224536426 -0.155962968
24  -0.0705158002 -2.01187265 -1.466254278 -0.516334770 -2.101005185
25   1.3465994213  0.60673251  0.878034808 -0.444133582  0.161716811
26  -1.6017729664  0.05337596 -1.028983927 -0.120399156  1.479385138
27   0.4261412395  0.47207405 -0.760103948  0.564006789 -1.367508121
28  -0.2861057055 -0.70022762  0.212329374 -1.088102173 -0.935558478
29  -0.6774881190  0.42716566 -0.984082865  0.031142318 -1.051034032
30   0.9965878126 -0.44682030 -0.065989857  0.757599491  0.133966644
31   0.6690459148  1.98420225  1.435822722  1.633619512 -0.474452981
32   0.9584993506  1.49351309  1.288455423 -1.539705118 -0.355642036
33   0.1559852255  1.10912317  0.392489723  0.935602005 -0.058764218
34  -0.3086738117 -0.15275306 -0.426789831  0.194940236 -0.036323861
35  -1.7789568229 -0.98729507  0.068901395 -1.217656769 -0.696235716
36  -0.5865292974 -0.35461815  0.237837966 -0.099006066  0.126147956
37  -0.0900499230 -0.68642407 -0.785618330 -0.397217992  1.353802246
38   0.8217290574 -0.08617487  0.766121687 -0.546177050 -0.488701706
39  -0.2473621503 -0.33824834  1.306692499  1.598719049  0.448719261
40   0.7983910651  0.42456011  0.324473731  0.051228612  0.280284611
41  -1.7603689925 -0.17502680  0.636793969  0.686794776  0.965569964
42  -0.9235552750 -0.61617026 -0.384744863 -0.851671459 -0.058583975
43   0.8035345795  0.56088663 -0.263319249  0.754475137  2.033251767
44   0.3159403170  1.43200531  0.576236087 -0.529733049  0.192023403
45  -0.9343279406 -1.97436664 -0.070511142 -0.052742647 -0.164001262
46  -0.3556720991  0.37385555  1.287415951  0.427171005 -2.407145230
47   1.0826342292 -0.14211513  0.539715172  0.835172718 -0.077930462
48  -0.4128817647  0.99913523  1.314070137  0.728565750  0.382448273
49  -0.2157477195 -0.08399579  0.300039152 -0.405477056 -1.002169861
50   0.0619598370  0.10797140  0.213652275  2.446380196  0.397848746
51   0.2265662511  0.14138723  0.249285474 -0.196041332  0.872641544
52  -1.0308668478 -0.53998194 -0.220668169  0.198722579 -0.142478281
53   1.2684252196  0.39667291 -0.881515883  0.486765092 -0.492598325
54  -1.3671094745 -1.43683369  0.863288621 -0.054377978 -2.633850400
55   0.8681587718  0.18662850  0.886601631  2.102684710  0.585945042
56  -0.9306844795  1.71026113  1.650561104  1.847472340  1.439959863
57   0.8775331332  0.24194873  1.423436446 -1.670377316 -1.577584671
58  -0.6623350406 -0.70034460 -1.527115423  0.678702769 -1.585447109
59  -0.3114747365 -0.39640737  1.345515884  1.168227022 -0.064305301
60   0.4693003554  0.14868310 -0.309373532 -0.644550315 -0.222430918
61   1.2892242893  2.28783246 -0.030108233  2.319081697  2.371326500
62   0.7473376784 -0.86750928  0.572901489 -1.397225560  0.947577450
63   0.1075219190  0.23528599  1.437672545 -0.395683617  0.343749379
64  -0.9973491594  0.28584536 -0.403692843  0.063307132  0.507613256
65  -2.3728066858 -0.12220489 -1.354928719  0.340955897  0.515665189
66  -0.2500954183  0.98076769 -0.718728765  0.167447035  1.083731310
67  -1.7929149185 -0.54390514 -0.728723259 -0.963357244 -1.668881689
68   1.7769347604  2.40088430  0.404735210 -0.086789607 -0.039117880
69   0.2179779459  0.64516450 -0.101492435 -0.901905282  0.614526647
70   3.1339534228  1.26386491  1.270944654  0.330862280  1.352746038
71  -0.1259520428  0.19267403  1.246725188  0.845079971  0.699984832
72   0.0405485247 -0.52290120 -1.489294968  0.610526395 -0.661020996
73   0.4754008366  1.02404482  0.897144876  0.058166975 -0.300577340
74  -2.6895868084 -1.59264220 -1.223079580  0.344187484  0.512318372
75  -0.5459615881 -1.94432565 -0.252799729 -1.579852478 -0.616204573
76  -1.1562860290  0.53758634 -0.337650835  1.517225228  0.379865088
77   0.0461554357  1.83816492  0.349334111 -1.529994006 -1.058638868
78  -0.8395362886  0.77015046 -0.941009799  0.261897908  0.930996729
79   0.7735181418  0.28267314  0.892567365 -1.215600937 -0.010304868
80  -1.4055208647 -0.52048203 -0.520647633  0.044516709 -0.157260934
81   0.0877875454 -1.18856748 -0.590889118 -0.082663679 -0.797156263
82  -0.5602149639  0.44049776  0.403835171  0.466589138 -0.377065078
83   0.3477175853 -0.06490563  0.284933429  1.689456383  1.168282918
84  -0.5967279049 -0.86522915 -0.654388508 -1.123550593 -1.395703886
85   0.0067799214  0.84708257  1.138194028 -1.112129607  1.463993425
86   0.3721907535  1.01516030  0.652587552 -1.520379797  1.463838250
87   0.6847116122  0.56301423  1.810765506  0.481769335 -0.151947621
88  -0.0312676297 -0.72967448 -1.144571021  0.905538519  0.648209062
89   1.0223588579 -0.62933490 -0.238992060  1.486648564 -0.672133513
90  -0.8816612780 -0.12459415  0.171656989  0.394706171  0.930677659
91   0.4776656414 -1.35812046  0.318748265  0.100394651 -0.901169766
92   0.5619667249  0.28464579  1.076582903 -0.342022673  1.617624464
93  -0.4304015712  1.27001996  1.168457444  1.558340293  1.243160740
94   0.6634143823  1.34224632  1.356474398 -0.264195189 -0.447691467
95   0.4262455962  0.15540357  0.190310662 -0.295421796  3.519532872
96   0.3247077982  1.38678797 -0.768177285  1.039855697  0.143230420
97  -2.5688579778 -1.45764532  0.404043730 -0.647108311 -0.921581685
98  -0.3711483431 -1.57481049 -0.516172155  0.770821178  0.179842312
99  -0.5181913491 -0.46087164 -1.423157350 -1.225169114 -1.659354417
100 -0.3241931735 -0.27499555  0.061762260  0.026207235 -1.025488759
101 -1.2608123820 -0.70465244 -0.507725421 -0.134951402 -0.713208467
102  1.6045847696  0.60919145 -0.697583513 -0.344886746 -0.403963584
103 -1.4485685714 -2.27845518 -0.805216609  1.013183871 -0.074574886
104  0.2339305241  0.46845124  0.140785418 -0.155752781 -0.573181480
105 -1.8487178826 -1.05105968 -0.681699931 -0.175699031  0.950311805
106 -0.3282497066  0.65716891  1.171006577  0.934752511  1.930606581
107 -0.4343939862  1.31928628  0.448076578  1.392597949  0.391587472
108  0.0674125565  1.01929513 -0.025080675  1.028205339  0.944496848
109  1.4957467584  0.37478111  0.304887067 -0.873472484  0.533807642
110  2.0396040925  0.30108835  0.612602853  1.809915796  0.430701475
111  0.0836251337 -1.31710167 -1.475631644  1.465978243 -0.789000308
112  0.4471490248 -1.01867806 -0.495487362  0.212428221 -0.837182507
113  1.0422762097  1.12828005  1.340459378  1.226758030 -0.279993309
114 -0.8191229322 -0.13248823  0.534646102 -0.705367653 -0.677337795
115 -0.3305742687  0.61397339 -0.652812183  0.189087390  0.593848304
116 -2.1377059370 -0.48465132  0.368575054  0.132528125 -0.035314889
117 -0.2090894150  0.51027631 -0.285563244 -0.207521468 -0.639311014
118  0.8119503946 -0.33094260 -0.878902424 -0.472169073  0.233768693
119  1.0037904106  0.94540176  0.816627915 -0.048920330 -0.362574437
120  0.2201993071  0.15363391 -1.407204502 -0.508200123  1.504739911
121 -0.6192998951 -1.03481872 -1.154258093  0.715174505  0.347166193
122 -0.2059414972  0.53231605  0.338132464  1.596363103  2.785334795
123  0.4925457037 -0.57747645 -1.461444127  0.694848527  0.118499613
124  0.6252206657  1.09499760  0.472616815 -1.177192123 -1.401456154
125 -0.7788719599 -0.72244028  0.640398289  0.259634607  0.270596332
126  0.2753483074  0.97121188 -0.431707474  1.574931372 -0.270360531
127 -0.7992852453  0.64738850  0.486385041 -0.151085350 -0.722390099
128  0.2360446187  0.98780741 -1.532784374 -0.708819152  0.493995339
129  0.1946726104  0.11794660 -0.507478459 -1.207877217 -0.147378071
130 -0.7543560973 -0.19358829 -0.634660190  0.036005974  0.323987148
131  0.0364199431 -0.53394647  1.065937731  0.676364897 -0.219239440
132  0.8016260454  0.54404162 -0.389829562 -1.768305517 -0.230229594
133 -0.1410602527  1.25318139  0.462606717  0.153329550  0.176545122
134 -2.3269769264 -0.54785558 -2.053942030 -0.294801011 -1.610932747
135  0.5857480462  0.11162428  0.378092033 -0.850793701  0.988828103
136 -1.4985027092 -1.96261898 -0.640851643 -0.072579774 -0.014489374
137 -0.1646307300 -0.23488959 -1.501433465  0.009095024  0.420191131
138 -0.5618487081 -0.02751099 -0.482743297 -1.187932677 -0.517261379
139  0.4574846794 -1.27755036 -0.014418680 -0.990067363 -0.621959638
140  0.4427581879  0.48773647 -0.321451474 -0.193359071 -0.787832290
141 -2.8811023589 -1.42864914 -0.564206074 -0.628869108 -1.153407685
142  0.5270371745  1.36502363  1.935619345  0.197721738  0.723895619
143 -0.5481022617 -0.90491534 -2.243432508 -1.306192600 -0.361475697
144  0.2865956512 -1.00185782  0.175457323 -0.441685344 -0.383632346
145 -0.2988841089  0.13693426  1.005093026 -2.565371307 -1.796977620
146 -0.6471168107  0.68646757  0.370749527 -1.016599170 -0.771521601
147  1.5920708177  1.14827500  0.219847298  2.271895307  2.249293223
148 -0.3537815508  0.39353090  0.256750895 -0.209955942  1.175782254
149 -0.0951342086 -2.06625826 -1.532156850  0.693221919 -1.530572183
150 -0.9645588686 -2.12716027 -2.798450984 -0.503440256  0.143875513
151 -1.2920054024  0.91615740 -0.729809290  0.787663374  1.787693060
152 -0.8148269475 -0.03079735 -0.117361701  0.443020711  0.168357382
153 -1.0294529925 -0.50403937  0.372372788  0.693288619 -0.225272356
154 -0.1924206082 -0.09913424 -1.320466904 -0.509336732 -0.694754938
155 -2.5265702502 -1.27944370 -1.352037582 -1.148718189  0.204044661
156 -2.2110491362  0.14570621 -0.919234698  0.036490939 -0.579347648
157  2.4735564571  0.61652626  0.531788231  1.488814554 -0.226698058
158  0.2162123854 -0.54914264 -0.708117382 -0.964431035 -0.007118478
159  0.4181098432 -0.21523175 -0.374396776 -1.574864931 -2.193600951
160  0.8921263490  1.94720865  1.199808905  1.320595024 -0.023451999
161  1.4403901104  1.88825753  1.071807815 -0.258173610 -1.654814358
162 -0.3559374303 -1.36924575 -0.552086500  0.443121082  0.381188528
163  0.1852145141  1.37703245  1.442328834 -0.113670391 -0.510448063
164  0.7791536668  0.81928588  0.777994066  0.893991156  1.232566848
165 -0.4164688586  1.38355608 -1.985362180 -0.301342496 -1.245670312
166  2.0643736589  1.50892036  0.042081009  0.974514474  1.669113883
167 -0.0288257864 -1.10816814 -0.304657714  0.372368640  0.694684849
168 -0.5407691203 -1.21291136 -1.897155155 -0.806299057 -1.751715398
169  0.2195516909  0.73376002 -0.462299695  0.031618946 -0.174979246
170  0.0600798631  1.27659313  0.945174591 -0.996394346 -0.309409682
171  1.5526031710  1.99516318  1.641048935  1.986685756  1.257980323
172 -1.0491658530  0.57119059  0.311701320 -0.186224123  0.922032974
173  1.2005481525  0.23320060  0.613288649 -0.621743377 -0.253861583
174  0.8738445025 -1.13335374  0.197886868  0.115849461 -0.643024436
175  0.2261905333 -0.05979957  0.755267281 -1.436909836 -1.901562877
176 -0.5761764146 -0.39440018  0.911852765 -0.612949986 -0.191230765
177  1.0775405715  0.35572783 -0.019866615  0.242001452  0.983951606
178  1.5401987455  0.94737101  1.899713702  0.202911743  2.230571411
179  0.5955688479  1.29250324  0.409245640  1.887993553  0.920794012
180  0.6880648895 -0.19001521 -0.470446371  2.255087920  1.249070024
181 -1.4568256022 -2.15306330  0.082900476  0.404880890 -0.849702160
182  0.8180751554 -0.12494065 -0.226433199  1.039108508  1.264534294
183  0.0085438960  0.95015610  0.746740187 -1.199500750  0.065679066
184 -0.8940668214 -0.89639078 -1.395100746 -1.851574470  0.049340769
185  0.3770063973 -0.82598548 -0.077718026  0.609599278  1.228258471
186 -0.7713336559 -0.87279879  1.400998933 -0.555717355  0.131552517
187  2.1916399164  1.67997412  1.993896837  0.036039639 -0.433074625
188 -0.7644027282 -0.50832439 -0.744513922 -0.632456117 -0.201423058
189  1.0818416884 -0.71917476  1.372392496 -1.310306184 -0.758836981
190 -0.7123867784  0.32291498 -0.370940781 -0.492459708 -0.908119073
191 -0.7189526528 -1.27177778 -0.176011101  0.640347511  0.103736091
192  0.7583885763 -0.09557949 -0.692839578  0.531354179  0.215634518
193 -0.9704287286 -0.52589547 -1.472212149 -0.786149409  0.777841368
194  1.0111685017 -0.46876166  0.714326936  1.362278118  0.769143961
195 -0.9182525115  0.24633169 -1.615503809  0.346701771 -1.458981555
196 -0.9252375184  0.14194143 -0.068448638 -1.563162896 -0.991772639
197  0.2406860576  0.28524346  0.205569334  2.106344888  1.000259344
198 -1.4337577825 -0.14697860 -0.530798010 -0.407106864 -0.991733735
199 -1.0447500775  2.16919283  0.684209652 -0.615469883 -0.351618750
200  0.0003911315 -0.56261685 -1.389186009  0.482855829 -0.419598035
               y6
1    0.6180292594
2    2.3837518591
3   -0.5212269270
4    0.8620270188
5   -0.5963206302
6    0.5078609421
7    0.7560059736
8    0.0755523079
9    0.3437498957
10   0.8277790695
11   0.6519951487
12   0.2183530296
13  -0.7622672194
14  -1.0837788485
15   1.3074069668
16  -0.2938138623
17  -0.3715209234
18   0.8235061437
19   1.3636021679
20   0.5659299001
21   0.2328136550
22  -0.1785960274
23  -0.3303716169
24  -1.8632142568
25  -0.0472791943
26   0.9918544612
27   0.0365857421
28  -3.1384202905
29   0.3244417113
30   0.3115047955
31   0.2355117511
32  -2.2599809462
33  -0.9697594710
34   0.5124384949
35  -0.9466894918
36  -0.9987866543
37  -0.9858805748
38  -0.7061911584
39   1.6712780213
40   1.2013057555
41  -1.0177945028
42   1.8121359903
43  -1.0758238986
44   0.2602691534
45   0.4160715843
46  -2.1811373349
47  -0.7659919354
48   0.0905282800
49   0.9539121615
50   0.3284151719
51   0.3129508912
52  -0.7349192375
53   0.5990398139
54   0.0706749722
55   1.1537899816
56   2.2754967491
57  -0.7770942330
58  -0.4176790163
59   0.5578826036
60   0.0132791538
61   1.4557820236
62  -0.1614578505
63   1.0553020077
64   0.6572954141
65  -0.0065962895
66  -0.5011396666
67  -1.5871881961
68   1.4584604520
69   0.1442724592
70   1.4164788765
71  -0.9393140531
72  -0.8432634726
73   0.3107646599
74   0.8787032268
75  -0.1206297159
76   0.2355626325
77  -1.4341862530
78  -0.1780377153
79  -0.4228047777
80   0.1800367947
81   0.2762923915
82  -0.9192347075
83   1.3293771747
84  -1.5136484447
85   0.0532982808
86  -0.6395803272
87   0.9024505935
88  -0.8759472927
89   0.5248812368
90   0.5872486206
91  -0.8271764917
92   1.6762625941
93  -0.1260907029
94   0.1758749166
95   2.4085273170
96   0.1276953164
97   0.0387120748
98  -0.8022817056
99   0.3441005526
100 -0.3739782644
101  0.8174960980
102 -0.5973590354
103 -0.0829278468
104  0.5235849919
105  0.1649040059
106  2.7676406794
107 -0.2244604105
108  0.6392133680
109 -0.2851444833
110  1.5954968076
111 -0.5337575235
112 -0.1714677143
113  1.3230356725
114 -0.8265967191
115 -1.2505294045
116  0.5711619042
117 -0.4603102987
118 -0.4902306235
119 -0.3597381126
120 -0.6788897951
121 -0.2960524307
122  0.3744169193
123 -0.1330344756
124 -0.3388926172
125 -0.0736955572
126  0.7569598115
127  0.2420747996
128  0.3718613643
129 -1.2011266096
130 -0.0861716439
131 -0.7827238749
132 -1.3341324966
133  0.2405624650
134  0.7061373572
135  0.0237955037
136 -2.0122030071
137  0.2569017365
138  0.6451132878
139 -0.1854000475
140  0.1425078194
141 -1.0702872302
142 -0.0005046481
143 -1.3558555533
144 -0.5057265862
145 -0.9847451137
146 -1.6523504906
147  0.9426045614
148 -1.1921163188
149 -0.6607215400
150 -0.3718921579
151  0.3472952580
152  0.2766987981
153 -0.5906483904
154 -0.9348732590
155  0.0992055180
156 -0.8121355435
157 -0.8477839774
158 -0.4948894153
159 -1.6476829367
160  2.2083330530
161 -0.7717252908
162  0.4897595541
163  1.8916725586
164 -0.9253124870
165  0.0659688199
166  2.6450185696
167 -0.6547131876
168  0.4594654416
169 -0.9304610979
170 -0.1384007199
171  0.8817207466
172 -0.1425073228
173  0.6730545945
174  0.2774013733
175  1.0687579388
176  0.7227473027
177  0.5396272999
178  1.5551032352
179 -0.9594598042
180  1.3434623849
181 -0.9979190227
182  1.2007442189
183  0.3160171841
184 -0.9341570305
185  0.7917325900
186  0.0265509200
187  0.4427262353
188 -0.2408535448
189 -1.4022884237
190 -1.5768673396
191  0.7078508957
192  0.9055963979
193  0.0234449447
194 -0.0366973321
195 -1.4762230728
196 -0.8230762289
197  1.9785351080
198 -0.5896739751
199  0.8212020981
200  0.3500977547
> 
> 
> 
> cleanEx()
> nameEx("SimDataDist-class")
> ### * SimDataDist-class
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: SimDataDist-class
> ### Title: Class '"SimDataDist"'
> ### Aliases: SimDataDist-class summary,SimDataDist-method
> ###   run,SimDataDist-method plotDist,SimDataDist-method
> ###   extract,SimDataDist-method
> ### Keywords: classes
> 
> ### ** Examples
> 
> showClass("SimDataDist")
Class "SimDataDist" [package "simsem"]

Slots:
                                              
Name:          p      dist keepScale   reverse
Class:   numeric      list    vector    vector

Known Subclasses: "NullSimDataDist"
> 
> chisq3 <- simChisq(3)
> chisq8 <- simChisq(8)
> dist <- simDataDist(chisq3, chisq8)
> dist2 <- extract(dist, 2)
> 
> m <- c(0, 0)
> cm <- matrix(c(1, 0.5, 0.5, 1), 2, 2)
> n <- 20
> dat <- run(dist, n, m, cm)
Loading required package: pspline
> 
> plotDist(dist, r=0.2)
> 
> 
> 
> 
> cleanEx()

detaching 'package:copula', 'package:pspline'

> nameEx("SimDataOut-class")
> ### * SimDataOut-class
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: SimDataOut-class
> ### Title: Class '"SimDataOut"'
> ### Aliases: SimDataOut-class summary,SimDataOut-method
> ###   createImpliedMACS,SimDataOut-method
> ###   summaryPopulation,SimDataOut-method getPopulation,SimDataOut-method
> ### Keywords: classes
> 
> ### ** Examples
> 
> showClass("SimDataOut")
Class "SimDataOut" [package "simsem"]

Slots:
                                                                              
Name:    modelType        data       param    paramOut  misspecOut    equalCon
Class:   character  data.frame    SimParam     SimRSet     SimRSet SimEqualCon
                  
Name:            n
Class:     numeric
> loading <- matrix(0, 6, 1)
> loading[1:6, 1] <- NA
> LX <- simMatrix(loading, 0.7)
> RPH <- symMatrix(diag(1))
> RTD <- symMatrix(diag(6))
> CFA.Model <- simSetCFA(LY = LX, RPS = RPH, RTE = RTD)
> SimData <- simData(CFA.Model, 500)
> SimModel <- simModel(CFA.Model)
> Data <- run(SimData, dataOnly=FALSE)
> Result <- run(SimModel, Data)
> summary(Data)
DATA RESULT OBJECT
Model Type
[1] "CFA"
Sample Size
[1] 500
Data Summary       y1                  y2                 y3                  y4          
 Min.   :-2.828607   Min.   :-3.37032   Min.   :-2.475905   Min.   :-2.75821  
 1st Qu.:-0.625083   1st Qu.:-0.66606   1st Qu.:-0.716538   1st Qu.:-0.64799  
 Median :-0.018824   Median : 0.04373   Median :-0.077007   Median : 0.06414  
 Mean   : 0.002646   Mean   : 0.01874   Mean   :-0.009583   Mean   : 0.03211  
 3rd Qu.: 0.623182   3rd Qu.: 0.66428   3rd Qu.: 0.793210   3rd Qu.: 0.64480  
 Max.   : 3.523274   Max.   : 2.76574   Max.   : 3.186076   Max.   : 3.85754  
       y5                 y6          
 Min.   :-3.06740   Min.   :-2.64395  
 1st Qu.:-0.65420   1st Qu.:-0.63098  
 Median : 0.03630   Median :-0.01769  
 Mean   : 0.04269   Mean   : 0.01642  
 3rd Qu.: 0.76295   3rd Qu.: 0.71683  
 Max.   : 2.90336   Max.   : 2.95779  
============Parameter Values================
RANDOM NUMBERS OF MODEL MATRICES
Model Type
[1] "CFA"
-- Endogeneous Variable --

LY: Loading of Indicator.Y on Factor.ETA 
     [,1]
[1,]  0.7
[2,]  0.7
[3,]  0.7
[4,]  0.7
[5,]  0.7
[6,]  0.7

TE: Covariance of Measurement.Error.EPSILON 
     [,1] [,2] [,3] [,4] [,5] [,6]
[1,] 0.51 0.00 0.00 0.00 0.00 0.00
[2,] 0.00 0.51 0.00 0.00 0.00 0.00
[3,] 0.00 0.00 0.51 0.00 0.00 0.00
[4,] 0.00 0.00 0.00 0.51 0.00 0.00
[5,] 0.00 0.00 0.00 0.00 0.51 0.00
[6,] 0.00 0.00 0.00 0.00 0.00 0.51

TY: Measurement Intercept of Indicator.Y 
[1] 0 0 0 0 0 0

PS: Covariance of Regression.Residual.PSI 
     [,1]
[1,]    1

AL: Regression Intercept of Factor.ETA 
[1] 0
------------------------------------------------- 
============================================
> summaryPopulation(Data)
======== Real Parameters =========
RANDOM NUMBERS OF MODEL MATRICES
Model Type
[1] "CFA"
-- Endogeneous Variable --

LY: Loading of Indicator.Y on Factor.ETA 
     [,1]
[1,]  0.7
[2,]  0.7
[3,]  0.7
[4,]  0.7
[5,]  0.7
[6,]  0.7

TE: Covariance of Measurement.Error.EPSILON 
     [,1] [,2] [,3] [,4] [,5] [,6]
[1,] 0.51 0.00 0.00 0.00 0.00 0.00
[2,] 0.00 0.51 0.00 0.00 0.00 0.00
[3,] 0.00 0.00 0.51 0.00 0.00 0.00
[4,] 0.00 0.00 0.00 0.51 0.00 0.00
[5,] 0.00 0.00 0.00 0.00 0.51 0.00
[6,] 0.00 0.00 0.00 0.00 0.00 0.51

TY: Measurement Intercept of Indicator.Y 
[1] 0 0 0 0 0 0

PS: Covariance of Regression.Residual.PSI 
     [,1]
[1,]    1

AL: Regression Intercept of Factor.ETA 
[1] 0
------------------------------------------------- 
> mis <- getPopulation(Data, misspec=TRUE)
> 
> 
> 
> cleanEx()
> nameEx("SimEqualCon-class")
> ### * SimEqualCon-class
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: SimEqualCon-class
> ### Title: Class '"SimEqualCon"'
> ### Aliases: SimEqualCon-class summary,SimEqualCon-method
> ### Keywords: classes
> 
> ### ** Examples
> 
> showClass("SimEqualCon")
Class "SimEqualCon" [package "simsem"]

Slots:
                                                
Name:            con     modelType conBeforeFill
Class:          list     character       logical

Known Subclasses: "NullSimEqualCon"
> constraint1 <- matrix(1, 3, 2)
> constraint1[,1] <- 1:3
> rownames(constraint1) <- rep("LY", 3)
> constraint2 <- matrix(2, 3, 2)
> constraint2[,1] <- 4:6
> rownames(constraint2) <- rep("LY", 3)
> constraint3 <- matrix(3, 2, 2)
> constraint3[,1] <- 7:8
> rownames(constraint3) <- rep("LY", 2)
> equal.loading <- simEqualCon(constraint1, constraint2, constraint3, modelType="SEM")
> summary(equal.loading)
CONSTRAINT OBJECT
Model Type
[1] "SEM"
-------------Constraint----------------
1.
   Group Row Column
LY    NA   1      1
LY    NA   2      1
LY    NA   3      1
---------------------------------------
2.
   Group Row Column
LY    NA   4      2
LY    NA   5      2
LY    NA   6      2
---------------------------------------
3.
   Group Row Column
LY    NA   7      3
LY    NA   8      3
---------------------------------------
> 
> 
> 
> cleanEx()
> nameEx("SimFunction-class")
> ### * SimFunction-class
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: SimFunction-class
> ### Title: Class '"SimFunction"'
> ### Aliases: SimFunction-class summary,SimFunction-method
> ###   run,SimFunction-method
> ### Keywords: classes
> 
> ### ** Examples
> 
> showClass("SimFunction")
Class "SimFunction" [package "simsem"]

Slots:
                                    
Name:        fun attribute   callfun
Class:  function      list      call

Known Subclasses: "NullSimFunction"
> 
> n65 <- simNorm(0.6, 0.05)
> u35 <- simUnif(0.3, 0.5)
> u68 <- simUnif(0.6, 0.8)
> u2 <- simUnif(-0.2, 0.2)
> n1 <- simNorm(0, 0.1)
> 
> loading <- matrix(0, 9, 3)
> loading[1:3, 1] <- NA
> loading[4:6, 2] <- NA
> loading[7:9, 3] <- NA
> loading.start <- matrix("", 9, 3)
> loading.start[1:3, 1] <- 0.7
> loading.start[4:6, 2] <- 0.7
> loading.start[7:9, 3] <- "u68"
> LY <- simMatrix(loading, loading.start)
> 
> RTE <- symMatrix(diag(9))
> 
> factor.cor <- diag(3)
> factor.cor[1, 2] <- factor.cor[2, 1] <- NA
> RPS <- symMatrix(factor.cor, 0.5)
> 
> path <- matrix(0, 3, 3)
> path[3, 1:2] <- NA
> path.start <- matrix(0, 3, 3)
> path.start[3, 1] <- "n65"
> path.start[3, 2] <- "u35"
> BE <- simMatrix(path, path.start)
> 
> datGen <- simSetSEM(BE=BE, LY=LY, RPS=RPS, RTE=RTE)
> 
> loading.trivial <- matrix(NA, 9, 3)
> loading.trivial[is.na(loading)] <- 0
> LY.trivial <- simMatrix(loading.trivial, "u2")
> 
> error.cor.trivial <- matrix(NA, 9, 9)
> diag(error.cor.trivial) <- 0
> RTE.trivial <- symMatrix(error.cor.trivial, "n1")
> 
> misGen <- simMisspecSEM(LY = LY.trivial, RTE = RTE.trivial)
> 
> Data.Mis <- simData(datGen, 300, misspec=misGen)
> 
> loading <- matrix(0, 12, 4)
> loading[1:3, 1] <- NA
> loading[4:6, 2] <- NA
> loading[7:9, 4] <- NA
> loading[10:12, 3] <- NA
> 
> path <- matrix(0, 4, 4)
> path[4, 1:3] <- NA
> 
> analysis <- simParamSEM(BE=path, LY=loading)
> 
> Model <- simModel(analysis)
> 
> fun <- simFunction(indProd, var1=paste("y", 1:3, sep=""), var2=paste("y", 4:6, sep=""), namesProd=paste("y", 10:12, sep=""))
> 
> # Real simulation will need more than just 10 replications
> Output <- simResult(10, Data.Mis, Model, objFunction=fun)
Error in solve.default(E) : 
  system is computationally singular: reciprocal condition number = 3.63803e-24
Warning in estimateVCOV(lavaanModel, samplestats = lavaanSampleStats, options = lavaanOptions,  :
  lavaan WARNING: could not compute standard errors!

> summary(Output)
RESULT OBJECT
Model Type
[1] "SEM"
========= Fit Indices Cutoffs ============
Error in round(sapply(alpha, getCutoff, object = cleanObj, usedFit = usedFit),  : 
  Non-numeric argument to mathematical function
Calls: summary ... .local -> print -> summaryFit -> summaryFit -> .local
Execution halted
