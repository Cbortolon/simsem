
R version 2.14.1 (2011-12-22)
Copyright (C) 2011 The R Foundation for Statistical Computing
ISBN 3-900051-07-0
Platform: i386-pc-mingw32/i386 (32-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> pkgname <- "simsem"
> source(file.path(R.home("share"), "R", "examples-header.R"))
> options(warn = 1)
> options(pager = "console")
> library('simsem')
Loading required package: lavaan
This is lavaan 0.4-12
lavaan is BETA software! Please report any bugs.
Loading required package: MASS
#######################################################################################################
This is simsem 0.0-6
simsem is BETA software! Please report any bugs.
simsem was developed at the University of Kansas Center for Research Methods and Data Analysis.
#######################################################################################################
> 
> assign(".oldSearch", search(), pos = 'CheckExEnv')
> cleanEx()
> nameEx("SimData-class")
> ### * SimData-class
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: SimData-class
> ### Title: Class '"SimData"'
> ### Aliases: SimData-class run,SimData-method summary,SimData-method
> ### Keywords: classes
> 
> ### ** Examples
> 
> showClass("SimData")
Class "SimData" [package "simsem"]

Slots:
                                                                       
Name:     modelType            n        param      misspec     equalCon
Class:    character      numeric       SimSet   SimMisspec  SimEqualCon
                                             
Name:  conBeforeMis  misfitBound      maxDraw
Class:      logical       vector      numeric
> loading <- matrix(0, 6, 2)
> loading[1:3, 1] <- NA
> loading[4:6, 2] <- NA
> loadingValues <- matrix(0, 6, 2)
> loadingValues[1:3, 1] <- 0.7
> loadingValues[4:6, 2] <- 0.7
> LX <- simMatrix(loading, loadingValues)
> latent.cor <- matrix(NA, 2, 2)
> diag(latent.cor) <- 1
> PH <- symMatrix(latent.cor, 0.5)
> error.cor <- matrix(0, 6, 6)
> diag(error.cor) <- 1
> TD <- symMatrix(error.cor)
> CFA.Model <- simSetCFA(LY = LX, PS = PH, TE = TD)
> SimData <- simData(200, CFA.Model)
> summary(SimData)
DATA OBJECT
Model Type
[1] "CFA"
Sample Size
[1] 200
========= Parameters Set ============
Number of free parameters =  48 
=====================================
Adding Misspecification?
[1] "No"
Adding Constraint?
[1] "No"
Maximum Random Sampling Parameters
[1] 100
> run(SimData)
               y1          y2           y3           y4           y5
1   -0.8046111752 -1.07631426  0.057240091 -0.902034704 -0.420696312
2    0.1845661447 -1.52544257 -0.596478518 -0.359547670  0.653999999
3   -0.9817757401 -1.00005564 -1.872679879  0.547026083  0.455882380
4    1.5595220347  0.98242830  1.129602919  1.133219607  0.772021261
5    1.1845054563  1.29072791  1.312650672 -0.614537216 -1.246834410
6   -2.4256861989 -0.52392194 -2.119349836  0.801628661  0.447938098
7   -0.8026802073 -0.01219081  0.886934803  0.875174982  0.264578196
8    0.0564317783  1.26623289 -0.572452230  0.960278147  1.193499939
9    1.4678439134  0.51404715 -0.801627869 -0.485880803  1.284678377
10  -0.2801358104 -0.93156744 -0.101680165  0.319593667 -1.065874756
11   1.1792641445  1.32167608  0.774530358  1.177029449  0.997148254
12   0.2512832851  0.06420740 -0.103676627  0.112671948  1.030177610
13  -0.5562904822  0.67456460 -0.825001496 -1.216956251  0.177777654
14  -1.7846349002  0.36228793 -1.174535795 -1.811801024 -3.445755945
15   1.8844565665 -0.52207420 -0.442167956  1.403236121  0.909469669
16  -0.9450853050 -0.62362148 -0.598801614  0.506571666  1.772916583
17  -0.0830153404  0.47058001  0.001676739 -0.684422114  0.600780179
18   0.0665950754  2.43186233  1.118947182  0.128773188 -0.760007378
19   0.0622396276  0.98627135 -0.268915311  1.547982009 -0.376082232
20   0.3419481062 -0.62487103  1.542539632 -0.535314198  1.106542087
21   1.1985782264  1.64208105  1.382432812 -1.009471874  0.262105365
22  -0.4293510968  0.51589042  1.488932512  1.073395543  0.686955393
23   1.4200986282 -0.52866733  0.120390484 -0.224580141 -0.155971454
24  -0.0705491629 -2.01186143 -1.466232141 -0.516212641 -2.100533772
25   1.3466283454  0.60675665  0.877981746 -0.444207704  0.161542306
26  -1.6017242717  0.05340869 -1.029065346 -0.120621102  1.478862439
27   0.4259802426  0.47192914 -0.759798041  0.564568197 -1.367560169
28  -0.2859007992 -0.69993528  0.211832132 -1.088983714 -0.934571001
29  -0.6776384472  0.42699962 -0.983766494  0.031678502 -1.051352021
30   0.9965694076 -0.44682106 -0.065970695  0.757690575  0.134087170
31   0.6689516258  1.98413121  1.435988048  1.633887657 -0.473877154
32   0.9586771234  1.49374938  1.288041369 -1.540482364 -0.355343010
33   0.1560436176  1.10926142  0.392293079  0.935218649 -0.058056466
34  -0.3087277895 -0.15282272 -0.426666197  0.195158955 -0.036496714
35  -1.7789156572 -0.98729223  0.068857396 -1.217763027 -0.696035136
36  -0.5864213022 -0.35447832  0.237590139 -0.099461109  0.126664453
37  -0.0898260271 -0.68612524 -0.786141050 -0.398156801  1.353958806
38   0.8217591672 -0.08614542  0.766062129 -0.546250077 -0.488540376
39  -0.2474624326 -0.33841511  1.306959552  1.599221517  0.449041771
40   0.7983124231  0.42443623  0.324676254  0.051605190  0.279760722
41  -1.7601828800 -0.17478985  0.636370911  0.685977001  0.966594210
42  -0.9237056523 -0.61644578 -0.384318965 -0.850917714 -0.059579365
43   0.8038108019  0.56130305 -0.264011888  0.753217636  2.033786377
44   0.3159326754  1.43198066  0.576268373 -0.529722808  0.191627241
45  -0.9343564190 -1.97445459 -0.070394714 -0.052486983 -0.163876606
46  -0.3557151440  0.37385211  1.287462437  0.427256978 -2.405817849
47   1.0826913708 -0.14199912  0.539542024  0.834912411 -0.077255382
48  -0.4128566850  0.99915976  1.314020529  0.728431705  0.382915479
49  -0.2159206218 -0.08425936  0.300475629 -0.404686197 -1.002621819
50   0.0619421753  0.10801341  0.213627927  2.446351686  0.398732807
51   0.2266293618  0.14144549  0.249164102 -0.196265932  0.872450831
52  -1.0308154924 -0.53990520 -0.220796272  0.198478361 -0.141982148
53   1.2683024818  0.39656652 -0.881286761  0.487211392 -0.493010313
54  -1.3673482061 -1.43718724  0.863880904 -0.053273932 -2.633403079
55   0.8680994051  0.18657616  0.886713345  2.102925503  0.586414579
56  -0.9307629249  1.71012216  1.650778523  1.847777398  1.440036193
57   0.8774790752  0.24183113  1.423608111 -1.670040644 -1.577749788
58  -0.6624745357 -0.70045557 -1.526864957  0.679171384 -1.585188619
59  -0.3115225525 -0.39649198  1.345648313  1.168487087 -0.063684947
60   0.4692793488  0.14865334 -0.309322773 -0.644453020 -0.222829112
61   1.2892761705  2.28797282 -0.030300470  2.318689073  2.371266377
62   0.7474805718 -0.86739494  0.572644252 -1.397647415  0.947232979
63   0.1074837636  0.23516007  1.437836622 -0.395392082  0.343439154
64  -0.9973652349  0.28581016 -0.403641569  0.063348932  0.507349406
65  -2.3727742064 -0.12214896 -1.355017126  0.340711700  0.515758889
66  -0.2499670986  0.98097458 -0.719063975  0.166783796  1.083750981
67  -1.7929329060 -0.54391751 -0.728692900 -0.963340483 -1.668545907
68   1.7767803978  2.40069567  0.405078207 -0.086200536 -0.040118010
69   0.2180282342  0.64520721 -0.101585430 -0.902103698  0.613982299
70   3.1339604178  1.26386190  1.270940677  0.330911216  1.352122921
71  -0.1257981004  0.19288365  1.246361634  0.844417864  0.700968703
72   0.0405369879 -0.52283621 -1.489348413  0.610455173 -0.660701068
73   0.4753416652  1.02396214  0.897286731  0.058406799 -0.300652676
74  -2.6896121089 -1.59271306 -1.222983423  0.344323800  0.512292304
75  -0.5459721996 -1.94441311 -0.252701665 -1.579627336 -0.616562516
76  -1.1562980910  0.53761509 -0.337667527  1.517142044  0.380359620
77   0.0461756079  1.83820458  0.349274278 -1.530174328 -1.058826095
78  -0.8394525634  0.77029198 -0.941235045  0.261422316  0.930959116
79   0.7735762697  0.28270783  0.892474553 -1.215758812 -0.010540536
80  -1.4055526947 -0.52053557 -0.520562254  0.044642182 -0.157227791
81   0.0876926804 -1.18869383 -0.590667903 -0.082211472 -0.797296923
82  -0.5601784912  0.44057418  0.403722279  0.466357336 -0.376413513
83   0.3477014913 -0.06491811  0.284962012  1.689528038  1.168464251
84  -0.5967183670 -0.86520775 -0.654419440 -1.123594100 -1.395526630
85   0.0069378021  0.84721822  1.137900497 -1.112708601  1.463669222
86   0.3724059029  1.01539418  0.652138527 -1.521239258  1.463466079
87   0.6846273936  0.56286702  1.810996943  0.482202529 -0.151856036
88  -0.0311431505 -0.72944827 -1.144921717  0.904928981  0.648768719
89   1.0222330491 -0.62944675 -0.238754397  1.487154193 -0.671822888
90  -0.8816211801 -0.12456913  0.171591870  0.394559407  0.930739885
91   0.4776675677 -1.35811178  0.318737663  0.100454326 -0.900609424
92   0.5619952735  0.28459860  1.076601552 -0.341991755  1.616954519
93  -0.4302874145  1.27019273  1.168170512  1.557765290  1.243988142
94   0.6633580217  1.34215570  1.356621377 -0.263951372 -0.447798728
95   0.4263893431  0.15549424  0.190076245 -0.295866896  3.518420142
96   0.3246717250  1.38681851 -0.768171745  1.039826748  0.143232267
97  -2.5689220583 -1.45780834  0.404270832 -0.646725550 -0.921340265
98  -0.3710570294 -1.57466459 -0.516409377  0.770443426  0.180590691
99  -0.5183829432 -0.46112702 -1.422710376 -1.224364080 -1.660193778
100 -0.3242586072 -0.27507165  0.061903789  0.026471359 -1.025248110
101 -1.2609503126 -0.70486111 -0.507378816 -0.134338565 -0.713494841
102  1.6045848173  0.60924706 -0.697639180 -0.344958469 -0.404246901
103 -1.4485630206 -2.27844364 -0.805233695  1.013196987 -0.073891149
104  0.2338258937  0.46830952  0.141031764 -0.155313724 -0.573504474
105 -1.8486311941 -1.05098556 -0.681860735 -0.176024577  0.950334139
106 -0.3283041153  0.65701945  1.171210441  0.935081261  1.930076202
107 -0.4343632529  1.31937642  0.447955703  1.392323333  0.392224341
108  0.0674252899  1.01933937 -0.025137643  1.028065609  0.944519645
109  1.4958343848  0.37488399  0.304696561 -0.873789913  0.533442943
110  2.0394896364  0.30096984  0.612835814  1.810409246  0.430684020
111  0.0835734175 -1.31707959 -1.475602012  1.466097582 -0.788365606
112  0.4470846579 -1.01873984 -0.495361215  0.212717517 -0.837058048
113  1.0421208295  1.12808265  1.340812154  1.227405799 -0.279976857
114 -0.8191013853 -0.13248490  0.534621218 -0.705433497 -0.677074351
115 -0.3304242784  0.61422254 -0.653211318  0.188324563  0.594246093
116 -2.1377502962 -0.48476208  0.368730176  0.132756757 -0.035140871
117 -0.2091200503  0.51026003 -0.285516322 -0.207461500 -0.639311797
118  0.8120153139 -0.33083480 -0.879075141 -0.472450058  0.233542202
119  1.0037847512  0.94540893  0.816626405 -0.048919084 -0.362482798
120  0.2203948484  0.15391842 -1.407684549 -0.509088729  1.504459686
121 -0.6192498466 -1.03471810 -1.154408762  0.714918955  0.347507468
122 -0.2057194149  0.53261884  0.337607591  1.595378589  2.785859126
123  0.4925496963 -0.57740847 -1.461516102  0.694755988  0.118534216
124  0.6251177511  1.09485804  0.472859291 -1.176771049 -1.401884671
125 -0.7788250912 -0.72241080  0.640321939  0.259500704  0.271035423
126  0.2752190803  0.97111113 -0.431477492  1.575331722 -0.270268057
127 -0.7993781735  0.64725055  0.486615927 -0.150713967 -0.722440477
128  0.2360389602  0.98782555 -1.532796860 -0.708888654  0.493080439
129  0.1947696306  0.11808138 -0.507710259 -1.208304904 -0.147525746
130 -0.7543222810 -0.19353856 -0.634743741  0.035831357  0.323995464
131  0.0364777409 -0.53386704  1.065800505  0.676150961 -0.218355513
132  0.8017294700  0.54418123 -0.390072598 -1.768752540 -0.230635681
133 -0.1410752497  1.25316483  0.462638265  0.153334836  0.176475025
134 -2.3272132666 -0.54815346 -2.053407810 -0.293892859 -1.611490462
135  0.5858578121  0.11172781  0.377878733 -0.851176588  0.988485624
136 -1.4983117909 -1.96235749 -0.641304054 -0.073375972 -0.013461864
137 -0.1646270615 -0.23485781 -1.501468913  0.009024364  0.419806255
138 -0.5619473342 -0.02768205 -0.482473615 -1.187471159 -0.518049014
139  0.4574666681 -1.27761038 -0.014340647 -0.989863927 -0.622180301
140  0.4426599681  0.48762869 -0.321245469 -0.192987122 -0.788140838
141 -2.8811053614 -1.42868009 -0.564172127 -0.628849626 -1.152895413
142  0.5271137018  1.36509652  1.935469929  0.197421149  0.724183949
143 -0.5480205931 -0.90477457 -2.243654952 -1.306595998 -0.361784707
144  0.2866214528 -1.00184073  0.175414431 -0.441713697 -0.383476342
145 -0.2989347840  0.13679441  1.005283550 -2.565044314 -1.797382918
146 -0.6470409833  0.68657133  0.370569944 -1.016973036 -0.771201489
147  1.5921729145  1.14847073  0.219549473  2.271368349  2.249582797
148 -0.3535601070  0.39382370  0.256236655 -0.210922889  1.176223128
149 -0.0952305565 -2.06632217 -1.531996599  0.693599814 -1.530103270
150 -0.9645143145 -2.12707819 -2.798577619 -0.503637358  0.143559577
151 -1.2918879747  0.91633051 -0.730099825  0.787046794  1.787729292
152 -0.8148407921 -0.03081609 -0.117329110  0.443054460  0.168483546
153 -1.0294216102 -0.50399120  0.372293237  0.693138139 -0.224508980
154 -0.1924169740 -0.09908451 -1.320520269 -0.509440363 -0.694841427
155 -2.5265454879 -1.27946648 -1.352039565 -1.148775994  0.203648034
156 -2.2110494521  0.14573249 -0.919260670  0.036363087 -0.579003968
157  2.4735885421  0.61666372  0.531618686  1.488585591 -0.225956474
158  0.2162645870 -0.54908073 -0.708231494 -0.964619393 -0.007419292
159  0.4180527879 -0.21528624 -0.374285226 -1.574637226 -2.193669201
160  0.8919064146  1.94692248  1.200315010  1.321480918 -0.023869545
161  1.4402861272  1.88816481  1.072004515 -0.257825877 -1.654741053
162 -0.3559376051 -1.36925712 -0.552074949  0.443181009  0.381248197
163  0.1850013016  1.37669548  1.442879015 -0.112713577 -0.511125692
164  0.7793452058  0.81957506  0.777513351  0.893118059  1.233296932
165 -0.4166360034  1.38341189 -1.985050845 -0.300849248 -1.246378362
166  2.0642791182  1.50880012  0.042295782  0.974909540  1.668061906
167 -0.0286944756 -1.10798577 -0.304971388  0.371839892  0.695168802
168 -0.5409816332 -1.21318100 -1.896672999 -0.805399936 -1.752443502
169  0.2196002599  0.73387505 -0.462463298  0.031301880 -0.174801555
170  0.0600692946  1.27654738  0.945230913 -0.996341490 -0.309708381
171  1.5526226918  1.99522573  1.640966864  1.986526514  1.258393330
172 -1.0490627965  0.57130075  0.311488098 -0.186675402  0.922119138
173  1.2004765891  0.23307498  0.613485831 -0.621354992 -0.254397663
174  0.8737714320 -1.13345846  0.198064656  0.116251992 -0.642997079
175  0.2259362154 -0.06020410  0.755926128 -1.435701850 -1.902425090
176 -0.5762347990 -0.39455036  0.912061332 -0.612576865 -0.191466199
177  1.0775836982  0.35578953 -0.019971448  0.241829138  0.983677144
178  1.5402940210  0.94742488  1.899564555  0.202650437  2.230174463
179  0.5957099263  1.29277865  0.408829149  1.887220723  0.921820500
180  0.6880409335 -0.18999702 -0.470440600  2.255135472  1.249289936
181 -1.4568005312 -2.15304083  0.082852937  0.404839140 -0.848713961
182  0.8180822063 -0.12492291 -0.226457986  1.039093890  1.264353013
183  0.0085350487  0.95009161  0.746813527 -1.199411785  0.065115291
184 -0.8939641011 -0.89628217 -1.395312079 -1.851973973  0.048860077
185  0.3770611506 -0.82593063 -0.077827629  0.609440949  1.228229304
186 -0.7712881725 -0.87282257  1.400977232 -0.555748453  0.131805493
187  2.1915617773  1.67986476  1.994084339  0.036401333 -0.433220880
188 -0.7643969337 -0.50832649 -0.744517622 -0.632476173 -0.201607745
189  1.0819301482 -0.71909962  1.372228899 -1.310534937 -0.758520258
190 -0.7123421364  0.32300913 -0.371079576 -0.492745933 -0.907730046
191 -0.7189983465 -1.27185795 -0.175885231  0.640603288  0.103894240
192  0.7583172892 -0.09565068 -0.692697098  0.531640957  0.215267582
193 -0.9703555701 -0.52581251 -1.472368273 -0.786463793  0.777350569
194  1.0112459653 -0.46863794  0.714125751  1.361975581  0.769821816
195 -0.9182959293  0.24637287 -1.615501570  0.346672013 -1.458537023
196 -0.9252478103  0.14189828 -0.068395199 -1.563108628 -0.992011965
197  0.2405863856  0.28512879  0.205783681  2.106739348  1.000298173
198 -1.4338046383 -0.14703480 -0.530694953 -0.406961890 -0.991616177
199 -1.0448672138  2.16900693  0.684512689 -0.615041648 -0.352205730
200  0.0003029223 -0.56268985 -1.389024800  0.483170167 -0.419781339
               y6
1    0.6179941475
2    2.3841030920
3   -0.5210671610
4    0.8618983254
5   -0.5965903054
6    0.5079092666
7    0.7554892060
8    0.0759523755
9    0.3448429821
10   0.8270903426
11   0.6520323544
12   0.2187776835
13  -0.7614751918
14  -1.0842821589
15   1.3073990960
16  -0.2933358142
17  -0.3709447897
18   0.8232348603
19   1.3630249192
20   0.5661929320
21   0.2333472427
22  -0.1790524497
23  -0.3303194155
24  -1.8638077984
25  -0.0470305668
26   0.9925991065
27   0.0360763824
28  -3.1385262267
29   0.3242235161
30   0.3112931851
31   0.2346677795
32  -2.2595027268
33  -0.9700838668
34   0.5123926294
35  -0.9467838132
36  -0.9988481086
37  -0.9850983251
38  -0.7062794614
39   1.6704530438
40   1.2014530657
41  -1.0180009746
42   1.8123776350
43  -1.0751010066
44   0.2606550759
45   0.4156912640
46  -2.1825506882
47  -0.7664067085
48   0.0901951194
49   0.9535732595
50   0.3275596205
51   0.3133662035
52  -0.7351711529
53   0.5990055014
54   0.0691236038
55   1.1530796520
56   2.2751153608
57  -0.7772657885
58  -0.4184061207
59   0.5570021844
60   0.0135800519
61   1.4562347698
62  -0.1606915241
63   1.0553206971
64   0.6575174650
65  -0.0064457931
66  -0.5004960987
67  -1.5875407391
68   1.4588715114
69   0.1450152233
70   1.4170530566
71  -0.9396358177
72  -0.8435121790
73   0.3106001720
74   0.8785929780
75  -0.1204969159
76   0.2351512846
77  -1.4338187045
78  -0.1775245098
79  -0.4224112349
80   0.1798781788
81   0.2759808441
82  -0.9196544711
83   1.3291241867
84  -1.5137821934
85   0.0542014781
86  -0.6383486949
87   0.9019258152
88  -0.8758974120
89   0.5240649829
90   0.5873331583
91  -0.8277965079
92   1.6769016214
93  -0.1263431034
94   0.1757383613
95   2.4100851469
96   0.1277224182
97   0.0380878951
98  -0.8026523328
99   0.3441348793
100 -0.3744830375
101  0.8171696350
102 -0.5970039946
103 -0.0836246991
104  0.5234689281
105  0.1652072182
106  2.7678423082
107 -0.2248226632
108  0.6393303014
109 -0.2844623559
110  1.5950208131
111 -0.5345115647
112 -0.1718814698
113  1.3223714503
114 -0.8267943193
115 -1.2501643665
116  0.5707592534
117 -0.4603694843
118 -0.4897231475
119 -0.3598309982
120 -0.6777209643
121 -0.2961381560
122  0.3748771023
123 -0.1329765395
124 -0.3388851746
125 -0.0740007446
126  0.7564669876
127  0.2417537936
128  0.3728457658
129 -1.2005512461
130 -0.0860053439
131 -0.7833938660
132 -1.3332793865
133  0.2406272761
134  0.7057869198
135  0.0245208704
136 -2.0124343197
137  0.2573572724
138  0.6454394047
139 -0.1853828197
140  0.1424444177
141 -1.0708189839
142 -0.0004923891
143 -1.3551431460
144 -0.5058542361
145 -0.9846668092
146 -1.6522967359
147  0.9428419453
148 -1.1915902455
149 -0.6615683484
150 -0.3713791201
151  0.3478756064
152  0.2765388848
153 -0.5912612861
154 -0.9346831386
155  0.0996599492
156 -0.8123513719
157 -0.8482965984
158 -0.4944002434
159 -1.6478423913
160  2.2078647051
161 -0.7721463282
162  0.4896399583
163  1.8913933741
164 -0.9251694736
165  0.0661836225
166  2.6456754802
167 -0.6546683930
168  0.4592944235
169 -0.9303217232
170 -0.1381548765
171  0.8814669819
172 -0.1421422073
173  0.6732022888
174  0.2769714851
175  1.0684121652
176  0.7226096161
177  0.5400740761
178  1.5557614885
179 -0.9597134621
180  1.3431949204
181 -0.9988654731
182  1.2009401176
183  0.3164919950
184 -0.9332768354
185  0.7919200863
186  0.0263290420
187  0.4425107961
188 -0.2406488019
189 -1.4023763935
190 -1.5769701417
191  0.7074369687
192  0.9056765564
193  0.0242501277
194 -0.0370726502
195 -1.4766378477
196 -0.8228911709
197  1.9781018188
198 -0.5899365055
199  0.8213608428
200  0.3499667201
> 
> 
> 
> cleanEx()
> nameEx("SimDataOut-class")
> ### * SimDataOut-class
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: SimDataOut-class
> ### Title: Class '"SimDataOut"'
> ### Aliases: SimDataOut-class summary,SimDataOut-method
> ### Keywords: classes
> 
> ### ** Examples
> 
> showClass("SimDataOut")
Class "SimDataOut" [package "simsem"]

Slots:
                                                                       
Name:     modelType         data        param     paramOut   misspecOut
Class:    character   data.frame SimFreeParam      SimRSet      SimRSet
                   
Name:      equalCon
Class:  SimEqualCon
> loading <- matrix(0, 6, 1)
> loading[1:6, 1] <- NA
> LX <- simMatrix(loading, 0.7)
> PH <- symMatrix(diag(1))
> TD <- symMatrix(diag(6))
> CFA.Model <- simSetCFA(LY = LX, PS = PH, TE = TD)
> SimData <- simData(500, CFA.Model)
> SimModel <- simModel(CFA.Model)
> Data <- run(SimData, dataOnly=FALSE)
> Result <- run(SimModel, Data)
> summary(Data)
DATA RESULT OBJECT
Model Type
[1] "CFA"
Sample Size
[1] 500
Data Summary       y1                  y2                 y3                  y4          
 Min.   :-2.828607   Min.   :-3.37032   Min.   :-2.475905   Min.   :-2.75821  
 1st Qu.:-0.625083   1st Qu.:-0.66606   1st Qu.:-0.716538   1st Qu.:-0.64799  
 Median :-0.018824   Median : 0.04373   Median :-0.077007   Median : 0.06414  
 Mean   : 0.002646   Mean   : 0.01874   Mean   :-0.009583   Mean   : 0.03211  
 3rd Qu.: 0.623182   3rd Qu.: 0.66428   3rd Qu.: 0.793210   3rd Qu.: 0.64480  
 Max.   : 3.523274   Max.   : 2.76574   Max.   : 3.186076   Max.   : 3.85754  
       y5                 y6          
 Min.   :-3.06740   Min.   :-2.64395  
 1st Qu.:-0.65420   1st Qu.:-0.63098  
 Median : 0.03630   Median :-0.01769  
 Mean   : 0.04269   Mean   : 0.01642  
 3rd Qu.: 0.76295   3rd Qu.: 0.71683  
 Max.   : 2.90336   Max.   : 2.95779  
============Parameter Values================
============================================
> 
> 
> 
> cleanEx()
> nameEx("SimEqualCon-class")
> ### * SimEqualCon-class
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: SimEqualCon-class
> ### Title: Class '"SimEqualCon"'
> ### Aliases: SimEqualCon-class summary,SimEqualCon-method
> ### Keywords: classes
> 
> ### ** Examples
> 
> showClass("SimEqualCon")
Class "SimEqualCon" [package "simsem"]

Slots:
                          
Name:        con modelType
Class:      list character

Known Subclasses: "NullSimEqualCon"
> constraint1 <- matrix(1, 3, 2)
> constraint1[,1] <- 1:3
> rownames(constraint1) <- rep("LY", 3)
> constraint2 <- matrix(2, 3, 2)
> constraint2[,1] <- 4:6
> rownames(constraint2) <- rep("LY", 3)
> constraint3 <- matrix(3, 2, 2)
> constraint3[,1] <- 7:8
> rownames(constraint3) <- rep("LY", 2)
> equal.loading <- simEqualCon(constraint1, constraint2, constraint3, modelType="SEM")
> summary(equal.loading)
CONSTRAINT OBJECT
Model Type
[1] "SEM"
-------------Constraint----------------
1.
   Group Row Column
LY    NA   1      1
LY    NA   2      1
LY    NA   3      1
---------------------------------------
2.
   Group Row Column
LY    NA   4      2
LY    NA   5      2
LY    NA   6      2
---------------------------------------
3.
   Group Row Column
LY    NA   7      3
LY    NA   8      3
---------------------------------------
> 
> 
> 
> cleanEx()
> nameEx("SimMatrix-class")
> ### * SimMatrix-class
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: SimMatrix-class
> ### Title: Class '"SimMatrix"' (Random parameters matrix)
> ### Aliases: SimMatrix-class run,SimMatrix-method
> ###   summaryShort,SimMatrix-method summary,SimMatrix-method
> ### Keywords: classes
> 
> ### ** Examples
> 
> showClass("SimMatrix")
Class "SimMatrix" [package "simsem"]

Slots:
                    
Name:    free  param
Class: matrix matrix

Known Subclasses: 
Class "SymMatrix", directly
Class "NullSimMatrix", directly
Class "NullSymMatrix", by class "SymMatrix", distance 2
> 
> loading <- matrix(0, 6, 2)
> loading[1:3, 1] <- NA
> loading[4:6, 2] <- NA
> loadingValues <- matrix(0, 6, 2)
> loadingValues[1:3, 1] <- 0.7
> loadingValues[4:6, 2] <- 0.7
> LX <- simMatrix(loading, loadingValues)
> summary(LX)
[1] "Random Full Matrix Object."
[1] "Free/Fixed Parameters:"
     [,1] [,2]
[1,]   NA    0
[2,]   NA    0
[3,]   NA    0
[4,]    0   NA
[5,]    0   NA
[6,]    0   NA
[1] "Parameter/Starting Values:"
     [,1]  [,2] 
[1,] "0.7" ""   
[2,] "0.7" ""   
[3,] "0.7" ""   
[4,] ""    "0.7"
[5,] ""    "0.7"
[6,] ""    "0.7"
> run(LX)
     [,1] [,2]
[1,]  0.7  0.0
[2,]  0.7  0.0
[3,]  0.7  0.0
[4,]  0.0  0.7
[5,]  0.0  0.7
[6,]  0.0  0.7
> 
> n65 <- simNorm(0.6, 0.05)
> LY <- simMatrix(loading, "n65")
> summary(LY)
[1] "Random Full Matrix Object."
[1] "Free/Fixed Parameters:"
     [,1] [,2]
[1,]   NA    0
[2,]   NA    0
[3,]   NA    0
[4,]    0   NA
[5,]    0   NA
[6,]    0   NA
[1] "Parameter/Starting Values:"
     [,1]  [,2] 
[1,] "n65" ""   
[2,] "n65" ""   
[3,] "n65" ""   
[4,] ""    "n65"
[5,] ""    "n65"
[6,] ""    "n65"
> run(LY)
          [,1]      [,2]
[1,] 0.5686773 0.0000000
[2,] 0.6091822 0.0000000
[3,] 0.5582186 0.0000000
[4,] 0.0000000 0.6797640
[5,] 0.0000000 0.6164754
[6,] 0.0000000 0.5589766
> 
> u34 <- simUnif(0.3, 0.4)
> LY <- adjust(LY, "u34", c(2, 1))
> summary(LY)
[1] "Random Full Matrix Object."
[1] "Free/Fixed Parameters:"
     [,1] [,2]
[1,]   NA    0
[2,]   NA    0
[3,]   NA    0
[4,]    0   NA
[5,]    0   NA
[6,]    0   NA
[1] "Parameter/Starting Values:"
     [,1]  [,2] 
[1,] "n65" ""   
[2,] "u34" ""   
[3,] "n65" ""   
[4,] ""    "n65"
[5,] ""    "n65"
[6,] ""    "n65"
> run(LY)
          [,1]      [,2]
[1,] 0.6243715 0.0000000
[2,] 0.3769841 0.0000000
[3,] 0.5997116 0.0000000
[4,] 0.0000000 0.7202327
[5,] 0.0000000 0.6381797
[6,] 0.0000000 0.5600495
> summaryShort(LY)
     [,1]     [,2]    
[1,] "NA:n65" "0"     
[2,] "NA:u34" "0"     
[3,] "NA:n65" "0"     
[4,] "0"      "NA:n65"
[5,] "0"      "NA:n65"
[6,] "0"      "NA:n65"
> 
> 
> 
> cleanEx()
> nameEx("SimMissing-class")
> ### * SimMissing-class
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: SimMissing-class
> ### Title: Class '"SimMissing"'
> ### Aliases: SimMissing-class summary,SimMissing-method
> ###   run,SimMissing-method
> ### Keywords: classes
> 
> ### ** Examples
> 
> # No Example
> 
> 
> 
> cleanEx()
> nameEx("SimMisspec-class")
> ### * SimMisspec-class
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: SimMisspec-class
> ### Title: Class '"SimMisspec"'
> ### Aliases: SimMisspec-class run,SimMisspec-method
> ### Keywords: classes
> 
> ### ** Examples
> 
> showClass("SimMisspec")
Class "SimMisspec" [package "simsem"]

Slots:
                                                                            
Name:  modelType        LY        TE       VTE        PS       VPS        BE
Class: character SimMatrix SymMatrix SimVector SymMatrix SimVector SimMatrix
                                                                            
Name:         TY        AL        ME        MY        VE        VY        LX
Class: SimVector SimVector SimVector SimVector SimVector SimVector SimMatrix
                                                                            
Name:         TD       VTD        PH        GA        TX        KA        MX
Class: SymMatrix SimVector SymMatrix SimMatrix SimVector SimVector SimVector
                                    
Name:        VPH        VX        TH
Class: SimVector SimVector SimMatrix

Extends: "SimSet"

Known Subclasses: "NullSimMisspec"
> n01 <- simNorm(0, 0.1)
> error.cor.Mis <- matrix(NA, 6, 6)
> diag(error.cor.Mis) <- 1
> TD.Mis <- symMatrix(error.cor.Mis, "n01")
> CFA.Model.Mis <- simMisspecCFA(TD=TD.Mis)
> 
> 
> 
> cleanEx()
> nameEx("SimModel-class")
> ### * SimModel-class
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: SimModel-class
> ### Title: Class '"SimModel"'
> ### Aliases: SimModel-class run,SimModel-method summary,SimModel-method
> ### Keywords: classes
> 
> ### ** Examples
> 
> showClass("SimModel")
Class "SimModel" [package "simsem"]

Slots:
                                                                       
Name:     modelType        param        start     equalCon      package
Class:    character SimFreeParam      SimRSet  SimEqualCon    character
> loading <- matrix(0, 6, 2)
> loading[1:3, 1] <- NA
> loading[4:6, 2] <- NA
> loadingValues <- matrix(0, 6, 2)
> loadingValues[1:3, 1] <- 0.7
> loadingValues[4:6, 2] <- 0.7
> LX <- simMatrix(loading, loadingValues)
> latent.cor <- matrix(NA, 2, 2)
> diag(latent.cor) <- 1
> PH <- symMatrix(latent.cor, 0.5)
> error.cor <- matrix(0, 6, 6)
> diag(error.cor) <- 1
> TD <- symMatrix(error.cor)
> CFA.Model <- simSetCFA(LX = LX, PH = PH, TD = TD)
> SimModel <- simModel(CFA.Model)
> summary(SimModel)
MODEL OBJECT
Model Type
[1] "CFA"
========= Parameters Set ============
Number of free parameters =  27 
=====================================
Adding Constraint?
[1] "No"
Analysis Package
[1] "lavaan"
> 
> 
> 
> cleanEx()
> nameEx("SimModelMIOut-class")
> ### * SimModelMIOut-class
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: SimModelMIOut-class
> ### Title: Class '"SimModelMIOut"'
> ### Aliases: SimModelMIOut-class
> ### Keywords: classes
> 
> ### ** Examples
> 
> showClass("SimModelMIOut")
Class "SimModelMIOut" [package "simsem"]

Slots:
                                                                       
Name:          FMI1         FMI2        param        start     equalCon
Class:      SimRSet      SimRSet SimFreeParam      SimRSet  SimEqualCon
                                                                       
Name:       package         coef          fit           se    converged
Class:    character      SimRSet       vector      SimRSet      logical
                   
Name:    paramValue
Class:      SimRSet

Extends: "SimModelOut"
> 
> 
> 
> cleanEx()
> nameEx("SimModelOut-class")
> ### * SimModelOut-class
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: SimModelOut-class
> ### Title: Class '"SimModelOut"'
> ### Aliases: SimModelOut-class summary,SimModelOut-method
> ### Keywords: classes
> 
> ### ** Examples
> 
> showClass("SimResult")
Class "SimResult" [package "simsem"]

Slots:
                                                                        
Name:   modelType       nRep       coef         se        fit  converged
Class:  character    numeric data.frame data.frame data.frame     vector
                                                             
Name:  paramValue       FMI1       FMI2    stdCoef       seed
Class: data.frame data.frame data.frame data.frame    numeric
> loading <- matrix(0, 6, 1)
> loading[1:6, 1] <- NA
> LX <- simMatrix(loading, 0.7)
> PH <- symMatrix(diag(1))
> TD <- symMatrix(diag(6))
> CFA.Model <- simSetCFA(LY = LX, PS = PH, TE = TD)
> SimData <- simData(500, CFA.Model)
> SimModel <- simModel(CFA.Model)
> Data <- run(SimData)
> Result <- run(SimModel, Data)
> summary(Result)
MODEL ANALYSIS RESULT OBJECT
Fit Indices
            Chi              df          pvalue    baseline.Chi     baseline.df 
          4.178           9.000           0.899        1007.154          15.000 
baseline.pvalue             CFI             TLI             AIC             BIC 
          0.000           1.000           1.008        7677.530        7753.393 
          RMSEA  RMSEA.ci.lower  RMSEA.ci.upper            SRMR 
          0.000           0.000           0.022           0.009 
========= Parameter Estimates and Standard Errors ============
      Estimate    SE      z     p      Std Est
LY1_1    0.716 0.041 17.426 0.000  0.724666685
LY2_1    0.693 0.044 15.901 0.000  0.675881269
LY3_1    0.739 0.045 16.404 0.000  0.692385420
LY4_1    0.705 0.043 16.232 0.000  0.686536799
LY5_1    0.727 0.044 16.394 0.000  0.691962134
LY6_1    0.646 0.042 15.439 0.000  0.660677441
TE1_1    0.463 0.037 12.530 0.000  0.474858196
TE2_2    0.570 0.043 13.324 0.000  0.543184510
TE3_3    0.594 0.045 13.079 0.000  0.520602430
TE4_4    0.557 0.042 13.181 0.000  0.528667224
TE5_5    0.576 0.044 13.091 0.000  0.521188406
TE6_6    0.538 0.040 13.518 0.000  0.563505319
TY1      0.003 0.044  0.060 0.952  0.002680210
TY2      0.019 0.046  0.409 0.683  0.018282260
TY3     -0.010 0.048 -0.201 0.841 -0.008973401
TY4      0.032 0.046  0.699 0.484  0.031269038
TY5      0.043 0.047  0.908 0.364  0.040613303
TY6      0.016 0.044  0.376 0.707  0.016807132
Converged
[1] TRUE
> 
> 
> 
> cleanEx()
> nameEx("SimNorm-class")
> ### * SimNorm-class
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: SimNorm-class
> ### Title: Class "SimNorm"
> ### Aliases: SimNorm-class run,SimNorm-method summary,SimNorm-method
> ### Keywords: classes
> 
> ### ** Examples
> 
> showClass("SimNorm")
Class "SimNorm" [package "simsem"]

Slots:
                      
Name:     mean      sd
Class: numeric numeric

Extends: "VirtualDist"
> n2 <- simNorm(0, 0.2)
> run(n2)
[1] -0.1252908
> summary(n2)
[1] "Random Normal Distribution Object."
[1] "Mean is 0."
[1] "Standard deviation is 0.2."
> 
> 
> 
> cleanEx()
> nameEx("SimResult-class")
> ### * SimResult-class
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: SimResult-class
> ### Title: Class '"SimResult"'
> ### Aliases: SimResult-class summary,SimResult-method
> ### Keywords: classes
> 
> ### ** Examples
> 
> showClass("SimResult")
Class "SimResult" [package "simsem"]

Slots:
                                                                        
Name:   modelType       nRep       coef         se        fit  converged
Class:  character    numeric data.frame data.frame data.frame     vector
                                                             
Name:  paramValue       FMI1       FMI2    stdCoef       seed
Class: data.frame data.frame data.frame data.frame    numeric
> loading <- matrix(0, 6, 1)
> loading[1:6, 1] <- NA
> LX <- simMatrix(loading, 0.7)
> PH <- symMatrix(diag(1))
> TD <- symMatrix(diag(6))
> CFA.Model <- simSetCFA(LY = LX, PS = PH, TE = TD)
> SimData <- simData(500, CFA.Model)
> SimModel <- simModel(CFA.Model)
> # We make the examples running only 50 replications to save time.
> # In reality, more replications are needed.
> Output <- simResult(50, SimData, SimModel)
> summary(Output)
RESULT OBJECT
Model Type
[1] "CFA"
========= Fit Indices Cutoffs ============
           Alpha
Fit Indices      0.1     0.05     0.01    0.001
      Chi     13.471   16.189   20.871   21.811
      AIC   7558.228 7589.376 7619.413 7640.132
      BIC   7634.091 7665.239 7695.275 7715.994
      RMSEA    0.032    0.040    0.051    0.053
      CFI      0.996    0.994    0.990    0.989
      TLI      0.993    0.989    0.983    0.982
      SRMR     0.016    0.017    0.019    0.019
========= Parameter Estimates and Standard Errors ============
      Estimate.Average Estimate.SD Average.SE Power..Not.equal.0. Std.Est
LY1_1            0.699       0.037      0.042                1.00   0.700
LY2_1            0.699       0.039      0.041                1.00   0.704
LY3_1            0.691       0.039      0.042                1.00   0.697
LY4_1            0.700       0.045      0.042                1.00   0.702
LY5_1            0.687       0.046      0.042                1.00   0.692
LY6_1            0.700       0.038      0.042                1.00   0.701
TE1_1            0.506       0.036      0.039                1.00   0.509
TE2_2            0.497       0.041      0.038                1.00   0.504
TE3_3            0.505       0.041      0.038                1.00   0.514
TE4_4            0.502       0.042      0.038                1.00   0.506
TE5_5            0.513       0.050      0.039                1.00   0.520
TE6_6            0.505       0.043      0.039                1.00   0.508
TY1              0.001       0.044      0.045                0.08   0.002
TY2             -0.002       0.044      0.044                0.06  -0.002
TY3             -0.001       0.038      0.044                0.04  -0.001
TY4              0.001       0.047      0.045                0.04   0.000
TY5              0.000       0.035      0.044                0.02   0.000
TY6              0.002       0.044      0.045                0.02   0.002
      Std.Est.SD Average.Param Average.Bias Coverage
LY1_1      0.024          0.70       -0.001     0.98
LY2_1      0.026          0.70       -0.001     0.98
LY3_1      0.028          0.70       -0.009     0.96
LY4_1      0.029          0.70        0.000     0.94
LY5_1      0.035          0.70       -0.013     0.92
LY6_1      0.028          0.70        0.000     0.98
TE1_1      0.033          0.51       -0.004     0.96
TE2_2      0.037          0.51       -0.013     0.92
TE3_3      0.039          0.51       -0.005     0.94
TE4_4      0.040          0.51       -0.008     0.94
TE5_5      0.049          0.51        0.003     0.90
TE6_6      0.039          0.51       -0.005     0.94
TY1        0.044          0.00        0.001     0.92
TY2        0.044          0.00       -0.002     0.94
TY3        0.038          0.00       -0.001     0.96
TY4        0.047          0.00        0.001     0.96
TY5        0.036          0.00        0.000     0.98
TY6        0.045          0.00        0.002     0.98
Number of Replications
[1] 50
Number of Converged Replications
[1] 50
> getCutoff(Output, 0.05)
         Chi          AIC          BIC        RMSEA          CFI          TLI 
1.618917e+01 7.589376e+03 7.665239e+03 3.979597e-02 9.935072e-01 9.891787e-01 
        SRMR 
1.744357e-02 
> 
> 
> 
> cleanEx()
> nameEx("SimSet-class")
> ### * SimSet-class
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: SimSet-class
> ### Title: Class '"SimSet"'
> ### Aliases: SimSet-class run,SimSet-method summary,SimSet-method
> 
> ### ** Examples
> 
> showClass("SimSet")
Class "SimSet" [package "simsem"]

Slots:
                                                                            
Name:  modelType        LY        TE       VTE        PS       VPS        BE
Class: character SimMatrix SymMatrix SimVector SymMatrix SimVector SimMatrix
                                                                            
Name:         TY        AL        ME        MY        VE        VY        LX
Class: SimVector SimVector SimVector SimVector SimVector SimVector SimMatrix
                                                                            
Name:         TD       VTD        PH        GA        TX        KA        MX
Class: SymMatrix SimVector SymMatrix SimMatrix SimVector SimVector SimVector
                                    
Name:        VPH        VX        TH
Class: SimVector SimVector SimMatrix

Known Subclasses: 
Class "NullSimSet", directly
Class "SimMisspec", directly
Class "NullSimMisspec", by class "SimMisspec", distance 2
> 
> loading <- matrix(0, 6, 2)
> loading[1:3, 1] <- NA
> loading[4:6, 2] <- NA
> loadingValues <- matrix(0, 6, 2)
> loadingValues[1:3, 1] <- 0.7
> loadingValues[4:6, 2] <- 0.7
> LX <- simMatrix(loading, loadingValues)
> summary(LX)
[1] "Random Full Matrix Object."
[1] "Free/Fixed Parameters:"
     [,1] [,2]
[1,]   NA    0
[2,]   NA    0
[3,]   NA    0
[4,]    0   NA
[5,]    0   NA
[6,]    0   NA
[1] "Parameter/Starting Values:"
     [,1]  [,2] 
[1,] "0.7" ""   
[2,] "0.7" ""   
[3,] "0.7" ""   
[4,] ""    "0.7"
[5,] ""    "0.7"
[6,] ""    "0.7"
> 
> latent.cor <- matrix(NA, 2, 2)
> diag(latent.cor) <- 1
> PH <- symMatrix(latent.cor, 0.5)
> 
> # Error Correlation Object
> error.cor <- matrix(0, 6, 6)
> diag(error.cor) <- 1
> TD <- symMatrix(error.cor)
> 
> CFA.Model <- simSetCFA(LX = LX, PH = PH, TD = TD)
> summary(CFA.Model)
SET OF MODEL MATRICES
Model Type
[1] "CFA"
-- Endogeneous Variable --

LY: Loading of Indicator.Y on Factor.ETA 
     [,1]     [,2]    
[1,] "NA:0.7" "0"     
[2,] "NA:0.7" "0"     
[3,] "NA:0.7" "0"     
[4,] "0"      "NA:0.7"
[5,] "0"      "NA:0.7"
[6,] "0"      "NA:0.7"

TE: Correlation of Measurement.Error.EPSILON 
     [,1] [,2] [,3] [,4] [,5] [,6]
[1,] "1"  "0"  "0"  "0"  "0"  "0" 
[2,] "0"  "1"  "0"  "0"  "0"  "0" 
[3,] "0"  "0"  "1"  "0"  "0"  "0" 
[4,] "0"  "0"  "0"  "1"  "0"  "0" 
[5,] "0"  "0"  "0"  "0"  "1"  "0" 
[6,] "0"  "0"  "0"  "0"  "0"  "1" 

VY: Variance of Indicator.Y 
[1] "NA:1" "NA:1" "NA:1" "NA:1" "NA:1" "NA:1"

TY: Measurement Intercept of Indicator.Y 
[1] "NA:0" "NA:0" "NA:0" "NA:0" "NA:0" "NA:0"

VPS: Variance of Regression.Residual.PSI 
[1] "1" "1"

PS: Correlation of Regression.Residual.PSI 
     [,1]     [,2]    
[1,] "1"      "NA:0.5"
[2,] "NA:0.5" "1"     

VE: Variance of Factor.ETA 
[1] "1" "1"

AL: Regression Intercept of Factor.ETA 
[1] "0" "0"

ME: mean of Factor.ETA 
[1] "0" "0"
-------------------------- 
> #run(CFA.Model)
> 
> 
> 
> cleanEx()
> nameEx("SimUnif-class")
> ### * SimUnif-class
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: SimUnif-class
> ### Title: Class "SimUnif"
> ### Aliases: SimUnif-class run,SimUnif-method summary,SimUnif-method
> ### Keywords: classes
> 
> ### ** Examples
> 
> showClass("SimUnif")
Class "SimUnif" [package "simsem"]

Slots:
                      
Name:      min     max
Class: numeric numeric

Extends: "VirtualDist"
> u1 <- simUnif(-0.1, 0.1)
> run(u1)
[1] -0.04689827
> summary(u1)
[1] "Random Uniform Distribution Object."
[1] "Minimum is -0.1."
[1] "Maximum is 0.1."
> 
> 
> 
> cleanEx()
> nameEx("SimVector-class")
> ### * SimVector-class
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: SimVector-class
> ### Title: Class '"SimVector"' (Random parameters vector)
> ### Aliases: SimVector-class run,SimVector-method
> ###   summaryShort,SimVector-method summary,SimVector-method
> ### Keywords: classes
> 
> ### ** Examples
> 
> showClass("SimVector")
Class "SimVector" [package "simsem"]

Slots:
                    
Name:    free  param
Class: vector vector

Known Subclasses: "NullSimVector"
> 
> factor.mean <- rep(NA, 2)
> factor.mean.starting <- c(5, 2)
> AL <- simVector(factor.mean, factor.mean.starting)
> run(AL)
[1] 5 2
> summary(AL)
[1] "Random Vector Object."
[1] "Free/Fixed Parameters:"
[1] NA NA
[1] "Parameter/Starting Values:"
[1] "5" "2"
> summaryShort(AL)
[1] "NA:5" "NA:2"
> 
> n01 <- simNorm(0, 1)
> AL <- adjust(AL, "n01", 2)
> run(AL)
[1]  5.0000000 -0.6264538
> summary(AL)
[1] "Random Vector Object."
[1] "Free/Fixed Parameters:"
[1] NA NA
[1] "Parameter/Starting Values:"
[1] "5"   "n01"
> 
> 
> 
> cleanEx()
> nameEx("SymMatrix-class")
> ### * SymMatrix-class
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: SymMatrix-class
> ### Title: Class '"SymMatrix"' (Random parameters symmetric matrix)
> ### Aliases: SymMatrix-class run,SymMatrix-method summary,SymMatrix-method
> ### Keywords: classes
> 
> ### ** Examples
> 
> showClass("SymMatrix")
Class "SymMatrix" [package "simsem"]

Slots:
                    
Name:    free  param
Class: matrix matrix

Extends: "SimMatrix"

Known Subclasses: "NullSymMatrix"
> 
> latent.cor <- matrix(NA, 3, 3)
> diag(latent.cor) <- 1
> PH <- symMatrix(latent.cor, 0.5)
> 
> u46 <- simUnif(0.4, 0.6)
> PH <- adjust(PH, "u46", c(3,2))
> summary(PH)
[1] "Random Symmetric Matrix Object."
[1] "Free/Fixed Parameters:"
     [,1] [,2] [,3]
[1,]    1   NA   NA
[2,]   NA    1   NA
[3,]   NA   NA    1
[1] "Parameter/Starting Values:"
     [,1]  [,2]  [,3] 
[1,] ""    "0.5" "0.5"
[2,] "0.5" ""    "u46"
[3,] "0.5" "u46" ""   
> summaryShort(PH)
     [,1]     [,2]     [,3]    
[1,] "1"      "NA:0.5" "NA:0.5"
[2,] "NA:0.5" "1"      "NA:u46"
[3,] "NA:0.5" "NA:u46" "1"     
> run(PH)
     [,1]      [,2]      [,3]
[1,]  1.0 0.5000000 0.5000000
[2,]  0.5 1.0000000 0.4531017
[3,]  0.5 0.4531017 1.0000000
> 
> 
> 
> cleanEx()
> nameEx("VirtualDist-class")
> ### * VirtualDist-class
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: VirtualDist-class
> ### Title: Class "VirtualDist"
> ### Aliases: VirtualDist-class
> ### Keywords: classes
> 
> ### ** Examples
> 
> showClass("VirtualDist")
Virtual Class "VirtualDist" [package "simsem"]

No Slots, prototype of class "NULL"

Known Subclasses: "SimUnif", "SimNorm"
> 
> 
> 
> cleanEx()
> nameEx("adjust")
> ### * adjust
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: adjust
> ### Title: Change an element in 'SimMatrix', 'SymMatrix', or 'SimVector'.
> ### Aliases: adjust adjust-methods adjust,ANY-method
> ###   adjust,SimMatrix-method adjust,SymMatrix-method
> ###   adjust,SimVector-method
> 
> ### ** Examples
> 
> loading <- matrix(0, 6, 2)
> loading[1:3, 1] <- NA
> loading[4:6, 2] <- NA
> LX <- simMatrix(loading, 0.7)
> summary(LX)
[1] "Random Full Matrix Object."
[1] "Free/Fixed Parameters:"
     [,1] [,2]
[1,]   NA    0
[2,]   NA    0
[3,]   NA    0
[4,]    0   NA
[5,]    0   NA
[6,]    0   NA
[1] "Parameter/Starting Values:"
     [,1]  [,2] 
[1,] "0.7" ""   
[2,] "0.7" ""   
[3,] "0.7" ""   
[4,] ""    "0.7"
[5,] ""    "0.7"
[6,] ""    "0.7"
> run(LX)
     [,1] [,2]
[1,]  0.7  0.0
[2,]  0.7  0.0
[3,]  0.7  0.0
[4,]  0.0  0.7
[5,]  0.0  0.7
[6,]  0.0  0.7
> 
> u34 <- simUnif(0.3, 0.4)
> LX <- adjust(LX, "u34", c(2, 1))
> summary(LX)
[1] "Random Full Matrix Object."
[1] "Free/Fixed Parameters:"
     [,1] [,2]
[1,]   NA    0
[2,]   NA    0
[3,]   NA    0
[4,]    0   NA
[5,]    0   NA
[6,]    0   NA
[1] "Parameter/Starting Values:"
     [,1]  [,2] 
[1,] "0.7" ""   
[2,] "u34" ""   
[3,] "0.7" ""   
[4,] ""    "0.7"
[5,] ""    "0.7"
[6,] ""    "0.7"
> run(LX)
          [,1] [,2]
[1,] 0.7000000  0.0
[2,] 0.3265509  0.0
[3,] 0.7000000  0.0
[4,] 0.0000000  0.7
[5,] 0.0000000  0.7
[6,] 0.0000000  0.7
> 
> LX <- adjust(LX, 0, c(2,1))
> LX <- adjust(LX, 0.5, c(2,2), FALSE)
> summary(LX)
[1] "Random Full Matrix Object."
[1] "Free/Fixed Parameters:"
     [,1] [,2]
[1,]   NA    0
[2,]    0   NA
[3,]   NA    0
[4,]    0   NA
[5,]    0   NA
[6,]    0   NA
[1] "Parameter/Starting Values:"
     [,1]  [,2] 
[1,] "0.7" ""   
[2,] ""    "0.5"
[3,] "0.7" ""   
[4,] ""    "0.7"
[5,] ""    "0.7"
[6,] ""    "0.7"
> run(LX)
     [,1] [,2]
[1,]  0.7  0.0
[2,]  0.0  0.5
[3,]  0.7  0.0
[4,]  0.0  0.7
[5,]  0.0  0.7
[6,]  0.0  0.7
> 
> factor.mean <- rep(NA, 2)
> factor.mean.starting <- c(5, 2)
> AL <- simVector(factor.mean, factor.mean.starting)
> run(AL)
[1] 5 2
> summary(AL)
[1] "Random Vector Object."
[1] "Free/Fixed Parameters:"
[1] NA NA
[1] "Parameter/Starting Values:"
[1] "5" "2"
> 
> n01 <- simNorm(0, 1)
> AL <- adjust(AL, "n01", 2)
> run(AL)
[1]  5.0000000 -0.3262334
> summary(AL)
[1] "Random Vector Object."
[1] "Free/Fixed Parameters:"
[1] NA NA
[1] "Parameter/Starting Values:"
[1] "5"   "n01"
> 
> 
> 
> cleanEx()
> nameEx("getCutoff")
> ### * getCutoff
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: getCutoff
> ### Title: Find cutoff given a priori alpha level
> ### Aliases: getCutoff getCutoff-methods getCutoff,data.frame-method
> ###   getCutoff,matrix-method getCutoff,SimResult-method
> 
> ### ** Examples
> 
> loading <- matrix(0, 6, 2)
> loading[1:3, 1] <- NA
> loading[4:6, 2] <- NA
> loadingValues <- matrix(0, 6, 2)
> loadingValues[1:3, 1] <- 0.7
> loadingValues[4:6, 2] <- 0.7
> LX <- simMatrix(loading, loadingValues)
> latent.cor <- matrix(NA, 2, 2)
> diag(latent.cor) <- 1
> PH <- symMatrix(latent.cor, 0.5)
> error.cor <- matrix(0, 6, 6)
> diag(error.cor) <- 1
> TD <- symMatrix(error.cor)
> CFA.Model <- simSetCFA(LY = LX, PS = PH, TE = TD)
> SimData <- simData(200, CFA.Model)
> SimModel <- simModel(CFA.Model)
> # We make the examples running only 50 replications to save time.
> # In reality, more replications are needed.
> Output <- simResult(50, SimData, SimModel)
> getCutoff(Output, 0.05)
         Chi          AIC          BIC        RMSEA          CFI          TLI 
1.439665e+01 3.222851e+03 3.285519e+03 6.322095e-02 9.784151e-01 9.595283e-01 
        SRMR 
3.892624e-02 
> 
> 
> 
> cleanEx()
> nameEx("getPower")
> ### * getPower
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: getPower
> ### Title: Find power in rejecting alternative models based on fit indices
> ###   criteria
> ### Aliases: getPower getPower-methods getPower,data.frame-method
> ###   getPower,matrix-method getPower,SimResult-method
> 
> ### ** Examples
> 
> loading.null <- matrix(0, 6, 1)
> loading.null[1:6, 1] <- NA
> LX.NULL <- simMatrix(loading.null, 0.7)
> PH.NULL <- symMatrix(diag(1))
> TD <- symMatrix(diag(6))
> CFA.Model.NULL <- simSetCFA(LY = LX.NULL, PS = PH.NULL, TE = TD)
> SimData.NULL <- simData(500, CFA.Model.NULL)
> SimModel <- simModel(CFA.Model.NULL)
> # We make the examples running only 50 replications to save time.
> # In reality, more replications are needed.
> Output.NULL <- simResult(50, SimData.NULL, SimModel)
> Cut.NULL <- getCutoff(Output.NULL, 0.95)
> 
> u79 <- simUnif(0.7, 0.9)
> loading.alt <- matrix(0, 6, 2)
> loading.alt[1:3, 1] <- NA
> loading.alt[4:6, 2] <- NA
> LX.ALT <- simMatrix(loading.alt, 0.7)
> latent.cor.alt <- matrix(NA, 2, 2)
> diag(latent.cor.alt) <- 1
> PH.ALT <- symMatrix(latent.cor.alt, "u79")
> CFA.Model.ALT <- simSetCFA(LY = LX.ALT, PS = PH.ALT, TE = TD)
> SimData.ALT <- simData(500, CFA.Model.ALT)
> Output.ALT <- simResult(50, SimData.ALT, SimModel)
> getPower(Output.ALT, Cut.NULL)
  Chi   CFI   TLI   AIC   BIC RMSEA  SRMR 
    1     1     1     1     1     1     1 
> Rule.of.thumb <- c(RMSEA=0.05, CFI=0.95, TLI=0.95, SRMR=0.06)
> getPower(Output.ALT, Rule.of.thumb, usedFit=c("RMSEA", "CFI", "TLI", "SRMR"))
  CFI   TLI RMSEA  SRMR 
 0.42  0.64  0.88  0.02 
> 
> 
> 
> cleanEx()
> nameEx("imposeMissing")
> ### * imposeMissing
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: imposeMissing
> ### Title: Impose MAR, MCAR, and planned missingness on a data set
> ### Aliases: imposeMissing
> 
> ### ** Examples
> 
>   data <- matrix(rep(rnorm(10,1,1),19),ncol=19)
>   datac <- cbind(data,rnorm(10,0,1),rnorm(10,5,5))
> 
>   ##################### Got some problems here ###########################
>   
>   # Imposing Missing with the following arguments produces no missing values
>   imposeMissing(data)
           [,1]      [,2]      [,3]      [,4]      [,5]      [,6]      [,7]
 [1,] 0.3735462 0.3735462 0.3735462 0.3735462 0.3735462 0.3735462 0.3735462
 [2,] 1.1836433 1.1836433 1.1836433 1.1836433 1.1836433 1.1836433 1.1836433
 [3,] 0.1643714 0.1643714 0.1643714 0.1643714 0.1643714 0.1643714 0.1643714
 [4,] 2.5952808 2.5952808 2.5952808 2.5952808 2.5952808 2.5952808 2.5952808
 [5,] 1.3295078 1.3295078 1.3295078 1.3295078 1.3295078 1.3295078 1.3295078
 [6,] 0.1795316 0.1795316 0.1795316 0.1795316 0.1795316 0.1795316 0.1795316
 [7,] 1.4874291 1.4874291 1.4874291 1.4874291 1.4874291 1.4874291 1.4874291
 [8,] 1.7383247 1.7383247 1.7383247 1.7383247 1.7383247 1.7383247 1.7383247
 [9,] 1.5757814 1.5757814 1.5757814 1.5757814 1.5757814 1.5757814 1.5757814
[10,] 0.6946116 0.6946116 0.6946116 0.6946116 0.6946116 0.6946116 0.6946116
           [,8]      [,9]     [,10]     [,11]     [,12]     [,13]     [,14]
 [1,] 0.3735462 0.3735462 0.3735462 0.3735462 0.3735462 0.3735462 0.3735462
 [2,] 1.1836433 1.1836433 1.1836433 1.1836433 1.1836433 1.1836433 1.1836433
 [3,] 0.1643714 0.1643714 0.1643714 0.1643714 0.1643714 0.1643714 0.1643714
 [4,] 2.5952808 2.5952808 2.5952808 2.5952808 2.5952808 2.5952808 2.5952808
 [5,] 1.3295078 1.3295078 1.3295078 1.3295078 1.3295078 1.3295078 1.3295078
 [6,] 0.1795316 0.1795316 0.1795316 0.1795316 0.1795316 0.1795316 0.1795316
 [7,] 1.4874291 1.4874291 1.4874291 1.4874291 1.4874291 1.4874291 1.4874291
 [8,] 1.7383247 1.7383247 1.7383247 1.7383247 1.7383247 1.7383247 1.7383247
 [9,] 1.5757814 1.5757814 1.5757814 1.5757814 1.5757814 1.5757814 1.5757814
[10,] 0.6946116 0.6946116 0.6946116 0.6946116 0.6946116 0.6946116 0.6946116
          [,15]     [,16]     [,17]     [,18]     [,19]
 [1,] 0.3735462 0.3735462 0.3735462 0.3735462 0.3735462
 [2,] 1.1836433 1.1836433 1.1836433 1.1836433 1.1836433
 [3,] 0.1643714 0.1643714 0.1643714 0.1643714 0.1643714
 [4,] 2.5952808 2.5952808 2.5952808 2.5952808 2.5952808
 [5,] 1.3295078 1.3295078 1.3295078 1.3295078 1.3295078
 [6,] 0.1795316 0.1795316 0.1795316 0.1795316 0.1795316
 [7,] 1.4874291 1.4874291 1.4874291 1.4874291 1.4874291
 [8,] 1.7383247 1.7383247 1.7383247 1.7383247 1.7383247
 [9,] 1.5757814 1.5757814 1.5757814 1.5757814 1.5757814
[10,] 0.6946116 0.6946116 0.6946116 0.6946116 0.6946116
>   imposeMissing(data,covs=c(1,2))
           [,1]      [,2]      [,3]      [,4]      [,5]      [,6]      [,7]
 [1,] 0.3735462 0.3735462 0.3735462 0.3735462 0.3735462 0.3735462 0.3735462
 [2,] 1.1836433 1.1836433 1.1836433 1.1836433 1.1836433 1.1836433 1.1836433
 [3,] 0.1643714 0.1643714 0.1643714 0.1643714 0.1643714 0.1643714 0.1643714
 [4,] 2.5952808 2.5952808 2.5952808 2.5952808 2.5952808 2.5952808 2.5952808
 [5,] 1.3295078 1.3295078 1.3295078 1.3295078 1.3295078 1.3295078 1.3295078
 [6,] 0.1795316 0.1795316 0.1795316 0.1795316 0.1795316 0.1795316 0.1795316
 [7,] 1.4874291 1.4874291 1.4874291 1.4874291 1.4874291 1.4874291 1.4874291
 [8,] 1.7383247 1.7383247 1.7383247 1.7383247 1.7383247 1.7383247 1.7383247
 [9,] 1.5757814 1.5757814 1.5757814 1.5757814 1.5757814 1.5757814 1.5757814
[10,] 0.6946116 0.6946116 0.6946116 0.6946116 0.6946116 0.6946116 0.6946116
           [,8]      [,9]     [,10]     [,11]     [,12]     [,13]     [,14]
 [1,] 0.3735462 0.3735462 0.3735462 0.3735462 0.3735462 0.3735462 0.3735462
 [2,] 1.1836433 1.1836433 1.1836433 1.1836433 1.1836433 1.1836433 1.1836433
 [3,] 0.1643714 0.1643714 0.1643714 0.1643714 0.1643714 0.1643714 0.1643714
 [4,] 2.5952808 2.5952808 2.5952808 2.5952808 2.5952808 2.5952808 2.5952808
 [5,] 1.3295078 1.3295078 1.3295078 1.3295078 1.3295078 1.3295078 1.3295078
 [6,] 0.1795316 0.1795316 0.1795316 0.1795316 0.1795316 0.1795316 0.1795316
 [7,] 1.4874291 1.4874291 1.4874291 1.4874291 1.4874291 1.4874291 1.4874291
 [8,] 1.7383247 1.7383247 1.7383247 1.7383247 1.7383247 1.7383247 1.7383247
 [9,] 1.5757814 1.5757814 1.5757814 1.5757814 1.5757814 1.5757814 1.5757814
[10,] 0.6946116 0.6946116 0.6946116 0.6946116 0.6946116 0.6946116 0.6946116
          [,15]     [,16]     [,17]     [,18]     [,19]
 [1,] 0.3735462 0.3735462 0.3735462 0.3735462 0.3735462
 [2,] 1.1836433 1.1836433 1.1836433 1.1836433 1.1836433
 [3,] 0.1643714 0.1643714 0.1643714 0.1643714 0.1643714
 [4,] 2.5952808 2.5952808 2.5952808 2.5952808 2.5952808
 [5,] 1.3295078 1.3295078 1.3295078 1.3295078 1.3295078
 [6,] 0.1795316 0.1795316 0.1795316 0.1795316 0.1795316
 [7,] 1.4874291 1.4874291 1.4874291 1.4874291 1.4874291
 [8,] 1.7383247 1.7383247 1.7383247 1.7383247 1.7383247
 [9,] 1.5757814 1.5757814 1.5757814 1.5757814 1.5757814
[10,] 0.6946116 0.6946116 0.6946116 0.6946116 0.6946116
>   imposeMissing(data,pmMCAR=0)
           [,1]      [,2]      [,3]      [,4]      [,5]      [,6]      [,7]
 [1,] 0.3735462 0.3735462 0.3735462 0.3735462 0.3735462 0.3735462 0.3735462
 [2,] 1.1836433 1.1836433 1.1836433 1.1836433 1.1836433 1.1836433 1.1836433
 [3,] 0.1643714 0.1643714 0.1643714 0.1643714 0.1643714 0.1643714 0.1643714
 [4,] 2.5952808 2.5952808 2.5952808 2.5952808 2.5952808 2.5952808 2.5952808
 [5,] 1.3295078 1.3295078 1.3295078 1.3295078 1.3295078 1.3295078 1.3295078
 [6,] 0.1795316 0.1795316 0.1795316 0.1795316 0.1795316 0.1795316 0.1795316
 [7,] 1.4874291 1.4874291 1.4874291 1.4874291 1.4874291 1.4874291 1.4874291
 [8,] 1.7383247 1.7383247 1.7383247 1.7383247 1.7383247 1.7383247 1.7383247
 [9,] 1.5757814 1.5757814 1.5757814 1.5757814 1.5757814 1.5757814 1.5757814
[10,] 0.6946116 0.6946116 0.6946116 0.6946116 0.6946116 0.6946116 0.6946116
           [,8]      [,9]     [,10]     [,11]     [,12]     [,13]     [,14]
 [1,] 0.3735462 0.3735462 0.3735462 0.3735462 0.3735462 0.3735462 0.3735462
 [2,] 1.1836433 1.1836433 1.1836433 1.1836433 1.1836433 1.1836433 1.1836433
 [3,] 0.1643714 0.1643714 0.1643714 0.1643714 0.1643714 0.1643714 0.1643714
 [4,] 2.5952808 2.5952808 2.5952808 2.5952808 2.5952808 2.5952808 2.5952808
 [5,] 1.3295078 1.3295078 1.3295078 1.3295078 1.3295078 1.3295078 1.3295078
 [6,] 0.1795316 0.1795316 0.1795316 0.1795316 0.1795316 0.1795316 0.1795316
 [7,] 1.4874291 1.4874291 1.4874291 1.4874291 1.4874291 1.4874291 1.4874291
 [8,] 1.7383247 1.7383247 1.7383247 1.7383247 1.7383247 1.7383247 1.7383247
 [9,] 1.5757814 1.5757814 1.5757814 1.5757814 1.5757814 1.5757814 1.5757814
[10,] 0.6946116 0.6946116 0.6946116 0.6946116 0.6946116 0.6946116 0.6946116
          [,15]     [,16]     [,17]     [,18]     [,19]
 [1,] 0.3735462 0.3735462 0.3735462 0.3735462 0.3735462
 [2,] 1.1836433 1.1836433 1.1836433 1.1836433 1.1836433
 [3,] 0.1643714 0.1643714 0.1643714 0.1643714 0.1643714
 [4,] 2.5952808 2.5952808 2.5952808 2.5952808 2.5952808
 [5,] 1.3295078 1.3295078 1.3295078 1.3295078 1.3295078
 [6,] 0.1795316 0.1795316 0.1795316 0.1795316 0.1795316
 [7,] 1.4874291 1.4874291 1.4874291 1.4874291 1.4874291
 [8,] 1.7383247 1.7383247 1.7383247 1.7383247 1.7383247
 [9,] 1.5757814 1.5757814 1.5757814 1.5757814 1.5757814
[10,] 0.6946116 0.6946116 0.6946116 0.6946116 0.6946116
>   imposeMissing(data,pmMAR=0)
           [,1]      [,2]      [,3]      [,4]      [,5]      [,6]      [,7]
 [1,] 0.3735462 0.3735462 0.3735462 0.3735462 0.3735462 0.3735462 0.3735462
 [2,] 1.1836433 1.1836433 1.1836433 1.1836433 1.1836433 1.1836433 1.1836433
 [3,] 0.1643714 0.1643714 0.1643714 0.1643714 0.1643714 0.1643714 0.1643714
 [4,] 2.5952808 2.5952808 2.5952808 2.5952808 2.5952808 2.5952808 2.5952808
 [5,] 1.3295078 1.3295078 1.3295078 1.3295078 1.3295078 1.3295078 1.3295078
 [6,] 0.1795316 0.1795316 0.1795316 0.1795316 0.1795316 0.1795316 0.1795316
 [7,] 1.4874291 1.4874291 1.4874291 1.4874291 1.4874291 1.4874291 1.4874291
 [8,] 1.7383247 1.7383247 1.7383247 1.7383247 1.7383247 1.7383247 1.7383247
 [9,] 1.5757814 1.5757814 1.5757814 1.5757814 1.5757814 1.5757814 1.5757814
[10,] 0.6946116 0.6946116 0.6946116 0.6946116 0.6946116 0.6946116 0.6946116
           [,8]      [,9]     [,10]     [,11]     [,12]     [,13]     [,14]
 [1,] 0.3735462 0.3735462 0.3735462 0.3735462 0.3735462 0.3735462 0.3735462
 [2,] 1.1836433 1.1836433 1.1836433 1.1836433 1.1836433 1.1836433 1.1836433
 [3,] 0.1643714 0.1643714 0.1643714 0.1643714 0.1643714 0.1643714 0.1643714
 [4,] 2.5952808 2.5952808 2.5952808 2.5952808 2.5952808 2.5952808 2.5952808
 [5,] 1.3295078 1.3295078 1.3295078 1.3295078 1.3295078 1.3295078 1.3295078
 [6,] 0.1795316 0.1795316 0.1795316 0.1795316 0.1795316 0.1795316 0.1795316
 [7,] 1.4874291 1.4874291 1.4874291 1.4874291 1.4874291 1.4874291 1.4874291
 [8,] 1.7383247 1.7383247 1.7383247 1.7383247 1.7383247 1.7383247 1.7383247
 [9,] 1.5757814 1.5757814 1.5757814 1.5757814 1.5757814 1.5757814 1.5757814
[10,] 0.6946116 0.6946116 0.6946116 0.6946116 0.6946116 0.6946116 0.6946116
          [,15]     [,16]     [,17]     [,18]     [,19]
 [1,] 0.3735462 0.3735462 0.3735462 0.3735462 0.3735462
 [2,] 1.1836433 1.1836433 1.1836433 1.1836433 1.1836433
 [3,] 0.1643714 0.1643714 0.1643714 0.1643714 0.1643714
 [4,] 2.5952808 2.5952808 2.5952808 2.5952808 2.5952808
 [5,] 1.3295078 1.3295078 1.3295078 1.3295078 1.3295078
 [6,] 0.1795316 0.1795316 0.1795316 0.1795316 0.1795316
 [7,] 1.4874291 1.4874291 1.4874291 1.4874291 1.4874291
 [8,] 1.7383247 1.7383247 1.7383247 1.7383247 1.7383247
 [9,] 1.5757814 1.5757814 1.5757814 1.5757814 1.5757814
[10,] 0.6946116 0.6946116 0.6946116 0.6946116 0.6946116
>   imposeMissing(data,nforms=0)
           [,1]      [,2]      [,3]      [,4]      [,5]      [,6]      [,7]
 [1,] 0.3735462 0.3735462 0.3735462 0.3735462 0.3735462 0.3735462 0.3735462
 [2,] 1.1836433 1.1836433 1.1836433 1.1836433 1.1836433 1.1836433 1.1836433
 [3,] 0.1643714 0.1643714 0.1643714 0.1643714 0.1643714 0.1643714 0.1643714
 [4,] 2.5952808 2.5952808 2.5952808 2.5952808 2.5952808 2.5952808 2.5952808
 [5,] 1.3295078 1.3295078 1.3295078 1.3295078 1.3295078 1.3295078 1.3295078
 [6,] 0.1795316 0.1795316 0.1795316 0.1795316 0.1795316 0.1795316 0.1795316
 [7,] 1.4874291 1.4874291 1.4874291 1.4874291 1.4874291 1.4874291 1.4874291
 [8,] 1.7383247 1.7383247 1.7383247 1.7383247 1.7383247 1.7383247 1.7383247
 [9,] 1.5757814 1.5757814 1.5757814 1.5757814 1.5757814 1.5757814 1.5757814
[10,] 0.6946116 0.6946116 0.6946116 0.6946116 0.6946116 0.6946116 0.6946116
           [,8]      [,9]     [,10]     [,11]     [,12]     [,13]     [,14]
 [1,] 0.3735462 0.3735462 0.3735462 0.3735462 0.3735462 0.3735462 0.3735462
 [2,] 1.1836433 1.1836433 1.1836433 1.1836433 1.1836433 1.1836433 1.1836433
 [3,] 0.1643714 0.1643714 0.1643714 0.1643714 0.1643714 0.1643714 0.1643714
 [4,] 2.5952808 2.5952808 2.5952808 2.5952808 2.5952808 2.5952808 2.5952808
 [5,] 1.3295078 1.3295078 1.3295078 1.3295078 1.3295078 1.3295078 1.3295078
 [6,] 0.1795316 0.1795316 0.1795316 0.1795316 0.1795316 0.1795316 0.1795316
 [7,] 1.4874291 1.4874291 1.4874291 1.4874291 1.4874291 1.4874291 1.4874291
 [8,] 1.7383247 1.7383247 1.7383247 1.7383247 1.7383247 1.7383247 1.7383247
 [9,] 1.5757814 1.5757814 1.5757814 1.5757814 1.5757814 1.5757814 1.5757814
[10,] 0.6946116 0.6946116 0.6946116 0.6946116 0.6946116 0.6946116 0.6946116
          [,15]     [,16]     [,17]     [,18]     [,19]
 [1,] 0.3735462 0.3735462 0.3735462 0.3735462 0.3735462
 [2,] 1.1836433 1.1836433 1.1836433 1.1836433 1.1836433
 [3,] 0.1643714 0.1643714 0.1643714 0.1643714 0.1643714
 [4,] 2.5952808 2.5952808 2.5952808 2.5952808 2.5952808
 [5,] 1.3295078 1.3295078 1.3295078 1.3295078 1.3295078
 [6,] 0.1795316 0.1795316 0.1795316 0.1795316 0.1795316
 [7,] 1.4874291 1.4874291 1.4874291 1.4874291 1.4874291
 [8,] 1.7383247 1.7383247 1.7383247 1.7383247 1.7383247
 [9,] 1.5757814 1.5757814 1.5757814 1.5757814 1.5757814
[10,] 0.6946116 0.6946116 0.6946116 0.6946116 0.6946116
> 
>   #Some more usage examples
>   imposeMissing(data,covs=c(1,2),pmMCAR=.1)
           [,1]      [,2]      [,3]      [,4]      [,5]      [,6]      [,7]
 [1,] 0.3735462 0.3735462 0.3735462 0.3735462 0.3735462 0.3735462 0.3735462
 [2,] 1.1836433 1.1836433 1.1836433 1.1836433 1.1836433 1.1836433 1.1836433
 [3,] 0.1643714 0.1643714 0.1643714 0.1643714 0.1643714        NA 0.1643714
 [4,] 2.5952808 2.5952808 2.5952808        NA 2.5952808 2.5952808 2.5952808
 [5,] 1.3295078 1.3295078        NA 1.3295078 1.3295078 1.3295078 1.3295078
 [6,] 0.1795316 0.1795316 0.1795316 0.1795316 0.1795316 0.1795316 0.1795316
 [7,] 1.4874291 1.4874291 1.4874291 1.4874291 1.4874291        NA 1.4874291
 [8,] 1.7383247 1.7383247 1.7383247 1.7383247 1.7383247 1.7383247 1.7383247
 [9,] 1.5757814 1.5757814 1.5757814 1.5757814 1.5757814        NA        NA
[10,] 0.6946116 0.6946116 0.6946116 0.6946116 0.6946116 0.6946116 0.6946116
           [,8]      [,9]     [,10]     [,11]     [,12]     [,13]     [,14]
 [1,] 0.3735462 0.3735462 0.3735462 0.3735462 0.3735462 0.3735462 0.3735462
 [2,] 1.1836433 1.1836433 1.1836433 1.1836433 1.1836433 1.1836433 1.1836433
 [3,] 0.1643714 0.1643714 0.1643714        NA 0.1643714        NA 0.1643714
 [4,] 2.5952808 2.5952808 2.5952808 2.5952808 2.5952808 2.5952808 2.5952808
 [5,] 1.3295078 1.3295078 1.3295078 1.3295078 1.3295078 1.3295078 1.3295078
 [6,] 0.1795316 0.1795316 0.1795316 0.1795316 0.1795316 0.1795316 0.1795316
 [7,] 1.4874291 1.4874291 1.4874291 1.4874291 1.4874291 1.4874291 1.4874291
 [8,] 1.7383247 1.7383247 1.7383247 1.7383247 1.7383247 1.7383247 1.7383247
 [9,] 1.5757814 1.5757814 1.5757814 1.5757814 1.5757814        NA 1.5757814
[10,] 0.6946116 0.6946116 0.6946116 0.6946116        NA 0.6946116 0.6946116
          [,15]     [,16]     [,17]     [,18]     [,19]
 [1,] 0.3735462 0.3735462 0.3735462 0.3735462 0.3735462
 [2,] 1.1836433 1.1836433 1.1836433 1.1836433 1.1836433
 [3,] 0.1643714 0.1643714 0.1643714 0.1643714 0.1643714
 [4,] 2.5952808 2.5952808 2.5952808        NA 2.5952808
 [5,] 1.3295078 1.3295078 1.3295078 1.3295078 1.3295078
 [6,] 0.1795316 0.1795316 0.1795316 0.1795316 0.1795316
 [7,]        NA 1.4874291 1.4874291 1.4874291 1.4874291
 [8,] 1.7383247 1.7383247 1.7383247        NA 1.7383247
 [9,] 1.5757814 1.5757814 1.5757814 1.5757814 1.5757814
[10,] 0.6946116 0.6946116 0.6946116 0.6946116        NA
>   imposeMissing(datac,covs=c(20,21),pmMAR=.2)
           [,1]      [,2]      [,3]      [,4]      [,5]      [,6]      [,7]
 [1,] 0.3735462 0.3735462 0.3735462 0.3735462 0.3735462 0.3735462 0.3735462
 [2,] 1.1836433 1.1836433 1.1836433 1.1836433 1.1836433 1.1836433 1.1836433
 [3,] 0.1643714        NA 0.1643714 0.1643714 0.1643714        NA        NA
 [4,]        NA        NA        NA        NA        NA        NA        NA
 [5,] 1.3295078 1.3295078 1.3295078 1.3295078 1.3295078 1.3295078 1.3295078
 [6,] 0.1795316 0.1795316 0.1795316 0.1795316 0.1795316 0.1795316 0.1795316
 [7,] 1.4874291 1.4874291 1.4874291 1.4874291 1.4874291 1.4874291 1.4874291
 [8,] 1.7383247 1.7383247 1.7383247 1.7383247 1.7383247 1.7383247 1.7383247
 [9,] 1.5757814 1.5757814 1.5757814 1.5757814 1.5757814 1.5757814 1.5757814
[10,] 0.6946116 0.6946116 0.6946116 0.6946116 0.6946116 0.6946116 0.6946116
           [,8]      [,9]     [,10]     [,11]     [,12]     [,13]     [,14]
 [1,] 0.3735462 0.3735462 0.3735462 0.3735462 0.3735462 0.3735462 0.3735462
 [2,] 1.1836433 1.1836433 1.1836433 1.1836433 1.1836433 1.1836433 1.1836433
 [3,] 0.1643714        NA 0.1643714 0.1643714 0.1643714 0.1643714 0.1643714
 [4,]        NA        NA        NA        NA        NA        NA        NA
 [5,] 1.3295078 1.3295078 1.3295078 1.3295078 1.3295078 1.3295078 1.3295078
 [6,] 0.1795316 0.1795316 0.1795316 0.1795316 0.1795316 0.1795316 0.1795316
 [7,] 1.4874291 1.4874291 1.4874291 1.4874291 1.4874291 1.4874291 1.4874291
 [8,] 1.7383247 1.7383247        NA        NA        NA        NA        NA
 [9,] 1.5757814 1.5757814 1.5757814 1.5757814 1.5757814 1.5757814 1.5757814
[10,] 0.6946116 0.6946116 0.6946116 0.6946116 0.6946116 0.6946116 0.6946116
          [,15]     [,16]     [,17]     [,18]     [,19]       [,20]     [,21]
 [1,] 0.3735462 0.3735462 0.3735462 0.3735462 0.3735462  1.51178117  9.594887
 [2,] 1.1836433 1.1836433 1.1836433 1.1836433 1.1836433  0.38984324  8.910682
 [3,] 0.1643714 0.1643714 0.1643714 0.1643714 0.1643714 -0.62124058  5.372825
 [4,]        NA        NA        NA        NA        NA -2.21469989 -4.946758
 [5,] 1.3295078 1.3295078 1.3295078 1.3295078 1.3295078  1.12493092  8.099129
 [6,] 0.1795316 0.1795316 0.1795316 0.1795316 0.1795316 -0.04493361  4.719356
 [7,] 1.4874291 1.4874291 1.4874291 1.4874291 1.4874291 -0.01619026  4.221022
 [8,]        NA        NA        NA        NA        NA  0.94383621 -2.353762
 [9,] 1.5757814 1.5757814 1.5757814 1.5757814 1.5757814  0.82122120  2.609250
[10,] 0.6946116 0.6946116 0.6946116 0.6946116 0.6946116  0.59390132  7.089708
>   imposeMissing(data,nforms=3)
           [,1]      [,2]      [,3]      [,4]      [,5]      [,6]      [,7]
 [1,] 0.3735462 0.3735462 0.3735462 0.3735462        NA        NA        NA
 [2,] 1.1836433 1.1836433 1.1836433 1.1836433        NA        NA        NA
 [3,] 0.1643714 0.1643714 0.1643714 0.1643714        NA        NA        NA
 [4,] 2.5952808 2.5952808 2.5952808 2.5952808 2.5952808 2.5952808 2.5952808
 [5,] 1.3295078 1.3295078 1.3295078 1.3295078 1.3295078 1.3295078 1.3295078
 [6,] 0.1795316 0.1795316 0.1795316 0.1795316 0.1795316 0.1795316 0.1795316
 [7,] 1.4874291 1.4874291 1.4874291 1.4874291 1.4874291 1.4874291 1.4874291
 [8,] 1.7383247 1.7383247 1.7383247 1.7383247 1.7383247 1.7383247 1.7383247
 [9,] 1.5757814 1.5757814 1.5757814 1.5757814 1.5757814 1.5757814 1.5757814
[10,] 0.6946116 0.6946116 0.6946116 0.6946116 0.6946116 0.6946116 0.6946116
           [,8]      [,9]     [,10]     [,11]     [,12]     [,13]     [,14]
 [1,]        NA        NA 0.3735462 0.3735462 0.3735462 0.3735462 0.3735462
 [2,]        NA        NA 1.1836433 1.1836433 1.1836433 1.1836433 1.1836433
 [3,]        NA        NA 0.1643714 0.1643714 0.1643714 0.1643714 0.1643714
 [4,] 2.5952808 2.5952808 2.5952808 2.5952808 2.5952808 2.5952808 2.5952808
 [5,] 1.3295078 1.3295078 1.3295078 1.3295078 1.3295078 1.3295078 1.3295078
 [6,] 0.1795316 0.1795316 0.1795316 0.1795316 0.1795316 0.1795316 0.1795316
 [7,] 1.4874291 1.4874291        NA        NA        NA        NA        NA
 [8,] 1.7383247 1.7383247        NA        NA        NA        NA        NA
 [9,] 1.5757814 1.5757814        NA        NA        NA        NA        NA
[10,] 0.6946116 0.6946116        NA        NA        NA        NA        NA
          [,15]     [,16]     [,17]     [,18]     [,19]
 [1,] 0.3735462 0.3735462 0.3735462 0.3735462 0.3735462
 [2,] 1.1836433 1.1836433 1.1836433 1.1836433 1.1836433
 [3,] 0.1643714 0.1643714 0.1643714 0.1643714 0.1643714
 [4,]        NA        NA        NA        NA        NA
 [5,]        NA        NA        NA        NA        NA
 [6,]        NA        NA        NA        NA        NA
 [7,] 1.4874291 1.4874291 1.4874291 1.4874291 1.4874291
 [8,] 1.7383247 1.7383247 1.7383247 1.7383247 1.7383247
 [9,] 1.5757814 1.5757814 1.5757814 1.5757814 1.5757814
[10,] 0.6946116 0.6946116 0.6946116 0.6946116 0.6946116
>   imposeMissing(data,nforms=3,itemGroups=list(c(1,2,3,4,5),c(6,7,8,9,10),c(11,12,13,14,15),c(16,17,18,19)))
           [,1]      [,2]      [,3]      [,4]      [,5]      [,6]      [,7]
 [1,] 0.3735462 0.3735462 0.3735462 0.3735462 0.3735462        NA        NA
 [2,] 1.1836433 1.1836433 1.1836433 1.1836433 1.1836433        NA        NA
 [3,] 0.1643714 0.1643714 0.1643714 0.1643714 0.1643714        NA        NA
 [4,] 2.5952808 2.5952808 2.5952808 2.5952808 2.5952808 2.5952808 2.5952808
 [5,] 1.3295078 1.3295078 1.3295078 1.3295078 1.3295078 1.3295078 1.3295078
 [6,] 0.1795316 0.1795316 0.1795316 0.1795316 0.1795316 0.1795316 0.1795316
 [7,] 1.4874291 1.4874291 1.4874291 1.4874291 1.4874291 1.4874291 1.4874291
 [8,] 1.7383247 1.7383247 1.7383247 1.7383247 1.7383247 1.7383247 1.7383247
 [9,] 1.5757814 1.5757814 1.5757814 1.5757814 1.5757814 1.5757814 1.5757814
[10,] 0.6946116 0.6946116 0.6946116 0.6946116 0.6946116 0.6946116 0.6946116
           [,8]      [,9]     [,10]     [,11]     [,12]     [,13]     [,14]
 [1,]        NA        NA        NA 0.3735462 0.3735462 0.3735462 0.3735462
 [2,]        NA        NA        NA 1.1836433 1.1836433 1.1836433 1.1836433
 [3,]        NA        NA        NA 0.1643714 0.1643714 0.1643714 0.1643714
 [4,] 2.5952808 2.5952808 2.5952808 2.5952808 2.5952808 2.5952808 2.5952808
 [5,] 1.3295078 1.3295078 1.3295078 1.3295078 1.3295078 1.3295078 1.3295078
 [6,] 0.1795316 0.1795316 0.1795316 0.1795316 0.1795316 0.1795316 0.1795316
 [7,] 1.4874291 1.4874291 1.4874291        NA        NA        NA        NA
 [8,] 1.7383247 1.7383247 1.7383247        NA        NA        NA        NA
 [9,] 1.5757814 1.5757814 1.5757814        NA        NA        NA        NA
[10,] 0.6946116 0.6946116 0.6946116        NA        NA        NA        NA
          [,15]     [,16]     [,17]     [,18]     [,19]
 [1,] 0.3735462 0.3735462 0.3735462 0.3735462 0.3735462
 [2,] 1.1836433 1.1836433 1.1836433 1.1836433 1.1836433
 [3,] 0.1643714 0.1643714 0.1643714 0.1643714 0.1643714
 [4,] 2.5952808        NA        NA        NA        NA
 [5,] 1.3295078        NA        NA        NA        NA
 [6,] 0.1795316        NA        NA        NA        NA
 [7,]        NA 1.4874291 1.4874291 1.4874291 1.4874291
 [8,]        NA 1.7383247 1.7383247 1.7383247 1.7383247
 [9,]        NA 1.5757814 1.5757814 1.5757814 1.5757814
[10,]        NA 0.6946116 0.6946116 0.6946116 0.6946116
>   imposeMissing(datac,covs=c(20,21),nforms=3)
           [,1]      [,2]      [,3]      [,4]      [,5]      [,6]      [,7]
 [1,] 0.3735462 0.3735462 0.3735462 0.3735462        NA        NA        NA
 [2,] 1.1836433 1.1836433 1.1836433 1.1836433        NA        NA        NA
 [3,] 0.1643714 0.1643714 0.1643714 0.1643714        NA        NA        NA
 [4,] 2.5952808 2.5952808 2.5952808 2.5952808 2.5952808 2.5952808 2.5952808
 [5,] 1.3295078 1.3295078 1.3295078 1.3295078 1.3295078 1.3295078 1.3295078
 [6,] 0.1795316 0.1795316 0.1795316 0.1795316 0.1795316 0.1795316 0.1795316
 [7,] 1.4874291 1.4874291 1.4874291 1.4874291 1.4874291 1.4874291 1.4874291
 [8,] 1.7383247 1.7383247 1.7383247 1.7383247 1.7383247 1.7383247 1.7383247
 [9,] 1.5757814 1.5757814 1.5757814 1.5757814 1.5757814 1.5757814 1.5757814
[10,] 0.6946116 0.6946116 0.6946116 0.6946116 0.6946116 0.6946116 0.6946116
           [,8]      [,9]     [,10]     [,11]     [,12]     [,13]     [,14]
 [1,]        NA        NA 0.3735462 0.3735462 0.3735462 0.3735462 0.3735462
 [2,]        NA        NA 1.1836433 1.1836433 1.1836433 1.1836433 1.1836433
 [3,]        NA        NA 0.1643714 0.1643714 0.1643714 0.1643714 0.1643714
 [4,] 2.5952808 2.5952808 2.5952808 2.5952808 2.5952808 2.5952808 2.5952808
 [5,] 1.3295078 1.3295078 1.3295078 1.3295078 1.3295078 1.3295078 1.3295078
 [6,] 0.1795316 0.1795316 0.1795316 0.1795316 0.1795316 0.1795316 0.1795316
 [7,] 1.4874291 1.4874291        NA        NA        NA        NA        NA
 [8,] 1.7383247 1.7383247        NA        NA        NA        NA        NA
 [9,] 1.5757814 1.5757814        NA        NA        NA        NA        NA
[10,] 0.6946116 0.6946116        NA        NA        NA        NA        NA
          [,15]     [,16]     [,17]     [,18]     [,19]       [,20]     [,21]
 [1,] 0.3735462 0.3735462 0.3735462 0.3735462 0.3735462  1.51178117  9.594887
 [2,] 1.1836433 1.1836433 1.1836433 1.1836433 1.1836433  0.38984324  8.910682
 [3,] 0.1643714 0.1643714 0.1643714 0.1643714 0.1643714 -0.62124058  5.372825
 [4,]        NA        NA        NA        NA        NA -2.21469989 -4.946758
 [5,]        NA        NA        NA        NA        NA  1.12493092  8.099129
 [6,]        NA        NA        NA        NA        NA -0.04493361  4.719356
 [7,] 1.4874291 1.4874291 1.4874291 1.4874291 1.4874291 -0.01619026  4.221022
 [8,] 1.7383247 1.7383247 1.7383247 1.7383247 1.7383247  0.94383621 -2.353762
 [9,] 1.5757814 1.5757814 1.5757814 1.5757814 1.5757814  0.82122120  2.609250
[10,] 0.6946116 0.6946116 0.6946116 0.6946116 0.6946116  0.59390132  7.089708
>   imposeMissing(data,twoMethod=c(19,.8))
           [,1]      [,2]      [,3]      [,4]      [,5]      [,6]      [,7]
 [1,] 0.3735462 0.3735462 0.3735462 0.3735462 0.3735462 0.3735462 0.3735462
 [2,] 1.1836433 1.1836433 1.1836433 1.1836433 1.1836433 1.1836433 1.1836433
 [3,] 0.1643714 0.1643714 0.1643714 0.1643714 0.1643714 0.1643714 0.1643714
 [4,] 2.5952808 2.5952808 2.5952808 2.5952808 2.5952808 2.5952808 2.5952808
 [5,] 1.3295078 1.3295078 1.3295078 1.3295078 1.3295078 1.3295078 1.3295078
 [6,] 0.1795316 0.1795316 0.1795316 0.1795316 0.1795316 0.1795316 0.1795316
 [7,] 1.4874291 1.4874291 1.4874291 1.4874291 1.4874291 1.4874291 1.4874291
 [8,] 1.7383247 1.7383247 1.7383247 1.7383247 1.7383247 1.7383247 1.7383247
 [9,] 1.5757814 1.5757814 1.5757814 1.5757814 1.5757814 1.5757814 1.5757814
[10,] 0.6946116 0.6946116 0.6946116 0.6946116 0.6946116 0.6946116 0.6946116
           [,8]      [,9]     [,10]     [,11]     [,12]     [,13]     [,14]
 [1,] 0.3735462 0.3735462 0.3735462 0.3735462 0.3735462 0.3735462 0.3735462
 [2,] 1.1836433 1.1836433 1.1836433 1.1836433 1.1836433 1.1836433 1.1836433
 [3,] 0.1643714 0.1643714 0.1643714 0.1643714 0.1643714 0.1643714 0.1643714
 [4,] 2.5952808 2.5952808 2.5952808 2.5952808 2.5952808 2.5952808 2.5952808
 [5,] 1.3295078 1.3295078 1.3295078 1.3295078 1.3295078 1.3295078 1.3295078
 [6,] 0.1795316 0.1795316 0.1795316 0.1795316 0.1795316 0.1795316 0.1795316
 [7,] 1.4874291 1.4874291 1.4874291 1.4874291 1.4874291 1.4874291 1.4874291
 [8,] 1.7383247 1.7383247 1.7383247 1.7383247 1.7383247 1.7383247 1.7383247
 [9,] 1.5757814 1.5757814 1.5757814 1.5757814 1.5757814 1.5757814 1.5757814
[10,] 0.6946116 0.6946116 0.6946116 0.6946116 0.6946116 0.6946116 0.6946116
          [,15]     [,16]     [,17]     [,18]     [,19]
 [1,] 0.3735462 0.3735462 0.3735462 0.3735462        NA
 [2,] 1.1836433 1.1836433 1.1836433 1.1836433        NA
 [3,] 0.1643714 0.1643714 0.1643714 0.1643714        NA
 [4,] 2.5952808 2.5952808 2.5952808 2.5952808        NA
 [5,] 1.3295078 1.3295078 1.3295078 1.3295078        NA
 [6,] 0.1795316 0.1795316 0.1795316 0.1795316        NA
 [7,] 1.4874291 1.4874291 1.4874291 1.4874291        NA
 [8,] 1.7383247 1.7383247 1.7383247 1.7383247        NA
 [9,] 1.5757814 1.5757814 1.5757814 1.5757814 1.5757814
[10,] 0.6946116 0.6946116 0.6946116 0.6946116 0.6946116
>   imposeMissing(datac,covs=c(20,21),pmMCAR=.1,pmMAR=.1,nforms=3)
           [,1]      [,2]      [,3]      [,4]      [,5]      [,6]      [,7]
 [1,] 0.3735462 0.3735462 0.3735462 0.3735462        NA        NA        NA
 [2,] 1.1836433 1.1836433 1.1836433        NA        NA        NA        NA
 [3,]        NA 0.1643714        NA 0.1643714        NA        NA        NA
 [4,]        NA        NA        NA        NA        NA        NA        NA
 [5,] 1.3295078 1.3295078 1.3295078 1.3295078 1.3295078 1.3295078 1.3295078
 [6,] 0.1795316 0.1795316 0.1795316        NA 0.1795316 0.1795316        NA
 [7,] 1.4874291 1.4874291        NA        NA 1.4874291 1.4874291 1.4874291
 [8,] 1.7383247 1.7383247        NA 1.7383247 1.7383247 1.7383247 1.7383247
 [9,] 1.5757814        NA 1.5757814 1.5757814 1.5757814 1.5757814 1.5757814
[10,] 0.6946116        NA 0.6946116 0.6946116 0.6946116 0.6946116 0.6946116
           [,8]      [,9]     [,10]     [,11]     [,12]     [,13]     [,14]
 [1,]        NA        NA 0.3735462 0.3735462        NA 0.3735462 0.3735462
 [2,]        NA        NA 1.1836433 1.1836433 1.1836433 1.1836433 1.1836433
 [3,]        NA        NA 0.1643714 0.1643714 0.1643714 0.1643714 0.1643714
 [4,]        NA        NA        NA        NA        NA        NA        NA
 [5,]        NA 1.3295078 1.3295078 1.3295078 1.3295078 1.3295078 1.3295078
 [6,] 0.1795316 0.1795316 0.1795316 0.1795316 0.1795316 0.1795316 0.1795316
 [7,] 1.4874291 1.4874291        NA        NA        NA        NA        NA
 [8,] 1.7383247 1.7383247        NA        NA        NA        NA        NA
 [9,] 1.5757814        NA        NA        NA        NA        NA        NA
[10,] 0.6946116 0.6946116        NA        NA        NA        NA        NA
          [,15]     [,16]     [,17]     [,18]     [,19]       [,20]     [,21]
 [1,] 0.3735462 0.3735462 0.3735462 0.3735462        NA  1.51178117  9.594887
 [2,] 1.1836433 1.1836433        NA 1.1836433 1.1836433  0.38984324  8.910682
 [3,] 0.1643714 0.1643714        NA        NA 0.1643714 -0.62124058  5.372825
 [4,]        NA        NA        NA        NA        NA -2.21469989 -4.946758
 [5,]        NA        NA        NA        NA        NA  1.12493092  8.099129
 [6,]        NA        NA        NA        NA        NA -0.04493361  4.719356
 [7,] 1.4874291 1.4874291 1.4874291 1.4874291 1.4874291 -0.01619026  4.221022
 [8,]        NA        NA        NA 1.7383247        NA  0.94383621 -2.353762
 [9,] 1.5757814 1.5757814        NA 1.5757814 1.5757814  0.82122120  2.609250
[10,] 0.6946116 0.6946116 0.6946116 0.6946116 0.6946116  0.59390132  7.089708
> 
> 
> 
> cleanEx()
> nameEx("loadingFromAlpha")
> ### * loadingFromAlpha
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: loadingFromAlpha
> ### Title: Find standardized factor loading from coefficient alpha
> ### Aliases: loadingFromAlpha
> 
> ### ** Examples
> 
>     loadingFromAlpha(0.8, 4)
[1] 0.7071068
> 
> 
> 
> cleanEx()
> nameEx("miPool")
> ### * miPool
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: miPool
> ### Title: Function to pool imputed results
> ### Aliases: miPool
> 
> ### ** Examples
> 
> # No Example
> 
> 
> 
> cleanEx()
> nameEx("plotCutoff")
> ### * plotCutoff
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: plotCutoff
> ### Title: Plot sampling distributions of fit indices
> ### Aliases: plotCutoff plotCutoff-methods plotCutoff,data.frame-method
> ###   plotCutoff,SimResult-method
> 
> ### ** Examples
> 
> loading <- matrix(0, 6, 2)
> loading[1:3, 1] <- NA
> loading[4:6, 2] <- NA
> loadingValues <- matrix(0, 6, 2)
> loadingValues[1:3, 1] <- 0.7
> loadingValues[4:6, 2] <- 0.7
> LX <- simMatrix(loading, loadingValues)
> latent.cor <- matrix(NA, 2, 2)
> diag(latent.cor) <- 1
> PH <- symMatrix(latent.cor, 0.5)
> error.cor <- matrix(0, 6, 6)
> diag(error.cor) <- 1
> TD <- symMatrix(error.cor)
> CFA.Model <- simSetCFA(LY = LX, PS = PH, TE = TD)
> SimData <- simData(200, CFA.Model)
> SimModel <- simModel(CFA.Model)
> # We make the examples running only 50 replications to save time.
> # In reality, more replications are needed.
> Output <- simResult(50, SimData, SimModel)
> plotCutoff(Output, 0.05, usedFit=c("RMSEA", "SRMR", "CFI", "TLI"))
> 
> 
> 
> cleanEx()
> nameEx("plotPower")
> ### * plotPower
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: plotPower
> ### Title: Plot sampling distributions of fit indices that visualize power
> ### Aliases: plotPower plotPower-methods
> ###   plotPower,data.frame,data.frame-method
> ###   plotPower,data.frame,vector-method
> ###   plotPower,SimResult,SimResult-method
> ###   plotPower,SimResult,vector-method
> 
> ### ** Examples
> 
> loading.null <- matrix(0, 6, 1)
> loading.null[1:6, 1] <- NA
> LX.NULL <- simMatrix(loading.null, 0.7)
> PH.NULL <- symMatrix(diag(1))
> TD <- symMatrix(diag(6))
> CFA.Model.NULL <- simSetCFA(LY = LX.NULL, PS = PH.NULL, TE = TD)
> SimData.NULL <- simData(500, CFA.Model.NULL)
> SimModel <- simModel(CFA.Model.NULL)
> # We make the examples running only 50 replications to save time.
> # In reality, more replications are needed.
> Output.NULL <- simResult(50, SimData.NULL, SimModel)
> Cut.NULL <- getCutoff(Output.NULL, 0.95)
> 
> u79 <- simUnif(0.7, 0.9)
> loading.alt <- matrix(0, 6, 2)
> loading.alt[1:3, 1] <- NA
> loading.alt[4:6, 2] <- NA
> LX.ALT <- simMatrix(loading.alt, 0.7)
> latent.cor.alt <- matrix(NA, 2, 2)
> diag(latent.cor.alt) <- 1
> PH.ALT <- symMatrix(latent.cor.alt, "u79")
> CFA.Model.ALT <- simSetCFA(LY = LX.ALT, PS = PH.ALT, TE = TD)
> SimData.ALT <- simData(500, CFA.Model.ALT)
> Output.ALT <- simResult(50, SimData.ALT, SimModel)
> getPower(Output.ALT, Cut.NULL)
  Chi   CFI   TLI   AIC   BIC RMSEA  SRMR 
    1     1     1     1     1     1     1 
> Rule.of.thumb <- c(RMSEA=0.05, CFI=0.95, TLI=0.95, SRMR=0.06)
> plotPower(Output.ALT, Output.NULL, alpha=0.05, usedFit=c("RMSEA", "CFI", "TLI", "SRMR"))
> 
> 
> 
> cleanEx()
> nameEx("run")
> ### * run
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: run
> ### Title: Run a particular object in 'simsem' package.
> ### Aliases: run run-methods run,ANY-method run,NullSimMatrix-method
> ###   run,NullSymMatrix-method run,NullSimVector-method
> ### Keywords: run
> 
> ### ** Examples
> 
> n02 <- simNorm(0, 0.2)
> run(n02)
[1] -0.1252908
> 
> 
> 
> cleanEx()
> nameEx("runMI")
> ### * runMI
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: runMI
> ### Title: Multiply impute and analyze data using lavaan
> ### Aliases: runMI
> 
> ### ** Examples
> 
> ##---- Should be DIRECTLY executable !! ----
> ##-- ==>  Define data, use random,
> ##--	or do  help(data=index)  for the standard data sets.
> 
> ## The function is currently defined as
> function(data.mat,data.model,imps) {
+   #Impute missing data
+   imputed.l<-imputeMissing(data.mat,imps)
+   
+   #Run models on each imputed data set
+   #Does this give results from each dataset in the list?
+   
+   imputed.results<-result.object(imputed.l[[1]],sim.data.model,10)
+ 
+   imputed.results <- lapply(imputed.l,result.object,data.model,1)
+   comb.results<-MIpool(imputed.results,imps)
+   
+   return(comb.results)
+ 
+   }
function (data.mat, data.model, imps) 
{
    imputed.l <- imputeMissing(data.mat, imps)
    imputed.results <- result.object(imputed.l[[1]], sim.data.model, 
        10)
    imputed.results <- lapply(imputed.l, result.object, data.model, 
        1)
    comb.results <- MIpool(imputed.results, imps)
    return(comb.results)
}
> 
> 
> 
> cleanEx()
> nameEx("simData")
> ### * simData
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: simData
> ### Title: Data object
> ### Aliases: simData
> 
> ### ** Examples
> 
> 
> loading <- matrix(0, 6, 2)
> loading[1:3, 1] <- NA
> loading[4:6, 2] <- NA
> loadingValues <- matrix(0, 6, 2)
> loadingValues[1:3, 1] <- 0.7
> loadingValues[4:6, 2] <- 0.7
> LX <- simMatrix(loading, loadingValues)
> latent.cor <- matrix(NA, 2, 2)
> diag(latent.cor) <- 1
> PH <- symMatrix(latent.cor, 0.5)
> error.cor <- matrix(0, 6, 6)
> diag(error.cor) <- 1
> TD <- symMatrix(error.cor)
> CFA.Model <- simSetCFA(LY = LX, PS = PH, TE = TD)
> SimData <- simData(200, CFA.Model)
> summary(SimData)
DATA OBJECT
Model Type
[1] "CFA"
Sample Size
[1] 200
========= Parameters Set ============
Number of free parameters =  48 
=====================================
Adding Misspecification?
[1] "No"
Adding Constraint?
[1] "No"
Maximum Random Sampling Parameters
[1] 100
> run(SimData)
               y1          y2           y3           y4           y5
1   -0.8046111752 -1.07631426  0.057240091 -0.902034704 -0.420696312
2    0.1845661447 -1.52544257 -0.596478518 -0.359547670  0.653999999
3   -0.9817757401 -1.00005564 -1.872679879  0.547026083  0.455882380
4    1.5595220347  0.98242830  1.129602919  1.133219607  0.772021261
5    1.1845054563  1.29072791  1.312650672 -0.614537216 -1.246834410
6   -2.4256861989 -0.52392194 -2.119349836  0.801628661  0.447938098
7   -0.8026802073 -0.01219081  0.886934803  0.875174982  0.264578196
8    0.0564317783  1.26623289 -0.572452230  0.960278147  1.193499939
9    1.4678439134  0.51404715 -0.801627869 -0.485880803  1.284678377
10  -0.2801358104 -0.93156744 -0.101680165  0.319593667 -1.065874756
11   1.1792641445  1.32167608  0.774530358  1.177029449  0.997148254
12   0.2512832851  0.06420740 -0.103676627  0.112671948  1.030177610
13  -0.5562904822  0.67456460 -0.825001496 -1.216956251  0.177777654
14  -1.7846349002  0.36228793 -1.174535795 -1.811801024 -3.445755945
15   1.8844565665 -0.52207420 -0.442167956  1.403236121  0.909469669
16  -0.9450853050 -0.62362148 -0.598801614  0.506571666  1.772916583
17  -0.0830153404  0.47058001  0.001676739 -0.684422114  0.600780179
18   0.0665950754  2.43186233  1.118947182  0.128773188 -0.760007378
19   0.0622396276  0.98627135 -0.268915311  1.547982009 -0.376082232
20   0.3419481062 -0.62487103  1.542539632 -0.535314198  1.106542087
21   1.1985782264  1.64208105  1.382432812 -1.009471874  0.262105365
22  -0.4293510968  0.51589042  1.488932512  1.073395543  0.686955393
23   1.4200986282 -0.52866733  0.120390484 -0.224580141 -0.155971454
24  -0.0705491629 -2.01186143 -1.466232141 -0.516212641 -2.100533772
25   1.3466283454  0.60675665  0.877981746 -0.444207704  0.161542306
26  -1.6017242717  0.05340869 -1.029065346 -0.120621102  1.478862439
27   0.4259802426  0.47192914 -0.759798041  0.564568197 -1.367560169
28  -0.2859007992 -0.69993528  0.211832132 -1.088983714 -0.934571001
29  -0.6776384472  0.42699962 -0.983766494  0.031678502 -1.051352021
30   0.9965694076 -0.44682106 -0.065970695  0.757690575  0.134087170
31   0.6689516258  1.98413121  1.435988048  1.633887657 -0.473877154
32   0.9586771234  1.49374938  1.288041369 -1.540482364 -0.355343010
33   0.1560436176  1.10926142  0.392293079  0.935218649 -0.058056466
34  -0.3087277895 -0.15282272 -0.426666197  0.195158955 -0.036496714
35  -1.7789156572 -0.98729223  0.068857396 -1.217763027 -0.696035136
36  -0.5864213022 -0.35447832  0.237590139 -0.099461109  0.126664453
37  -0.0898260271 -0.68612524 -0.786141050 -0.398156801  1.353958806
38   0.8217591672 -0.08614542  0.766062129 -0.546250077 -0.488540376
39  -0.2474624326 -0.33841511  1.306959552  1.599221517  0.449041771
40   0.7983124231  0.42443623  0.324676254  0.051605190  0.279760722
41  -1.7601828800 -0.17478985  0.636370911  0.685977001  0.966594210
42  -0.9237056523 -0.61644578 -0.384318965 -0.850917714 -0.059579365
43   0.8038108019  0.56130305 -0.264011888  0.753217636  2.033786377
44   0.3159326754  1.43198066  0.576268373 -0.529722808  0.191627241
45  -0.9343564190 -1.97445459 -0.070394714 -0.052486983 -0.163876606
46  -0.3557151440  0.37385211  1.287462437  0.427256978 -2.405817849
47   1.0826913708 -0.14199912  0.539542024  0.834912411 -0.077255382
48  -0.4128566850  0.99915976  1.314020529  0.728431705  0.382915479
49  -0.2159206218 -0.08425936  0.300475629 -0.404686197 -1.002621819
50   0.0619421753  0.10801341  0.213627927  2.446351686  0.398732807
51   0.2266293618  0.14144549  0.249164102 -0.196265932  0.872450831
52  -1.0308154924 -0.53990520 -0.220796272  0.198478361 -0.141982148
53   1.2683024818  0.39656652 -0.881286761  0.487211392 -0.493010313
54  -1.3673482061 -1.43718724  0.863880904 -0.053273932 -2.633403079
55   0.8680994051  0.18657616  0.886713345  2.102925503  0.586414579
56  -0.9307629249  1.71012216  1.650778523  1.847777398  1.440036193
57   0.8774790752  0.24183113  1.423608111 -1.670040644 -1.577749788
58  -0.6624745357 -0.70045557 -1.526864957  0.679171384 -1.585188619
59  -0.3115225525 -0.39649198  1.345648313  1.168487087 -0.063684947
60   0.4692793488  0.14865334 -0.309322773 -0.644453020 -0.222829112
61   1.2892761705  2.28797282 -0.030300470  2.318689073  2.371266377
62   0.7474805718 -0.86739494  0.572644252 -1.397647415  0.947232979
63   0.1074837636  0.23516007  1.437836622 -0.395392082  0.343439154
64  -0.9973652349  0.28581016 -0.403641569  0.063348932  0.507349406
65  -2.3727742064 -0.12214896 -1.355017126  0.340711700  0.515758889
66  -0.2499670986  0.98097458 -0.719063975  0.166783796  1.083750981
67  -1.7929329060 -0.54391751 -0.728692900 -0.963340483 -1.668545907
68   1.7767803978  2.40069567  0.405078207 -0.086200536 -0.040118010
69   0.2180282342  0.64520721 -0.101585430 -0.902103698  0.613982299
70   3.1339604178  1.26386190  1.270940677  0.330911216  1.352122921
71  -0.1257981004  0.19288365  1.246361634  0.844417864  0.700968703
72   0.0405369879 -0.52283621 -1.489348413  0.610455173 -0.660701068
73   0.4753416652  1.02396214  0.897286731  0.058406799 -0.300652676
74  -2.6896121089 -1.59271306 -1.222983423  0.344323800  0.512292304
75  -0.5459721996 -1.94441311 -0.252701665 -1.579627336 -0.616562516
76  -1.1562980910  0.53761509 -0.337667527  1.517142044  0.380359620
77   0.0461756079  1.83820458  0.349274278 -1.530174328 -1.058826095
78  -0.8394525634  0.77029198 -0.941235045  0.261422316  0.930959116
79   0.7735762697  0.28270783  0.892474553 -1.215758812 -0.010540536
80  -1.4055526947 -0.52053557 -0.520562254  0.044642182 -0.157227791
81   0.0876926804 -1.18869383 -0.590667903 -0.082211472 -0.797296923
82  -0.5601784912  0.44057418  0.403722279  0.466357336 -0.376413513
83   0.3477014913 -0.06491811  0.284962012  1.689528038  1.168464251
84  -0.5967183670 -0.86520775 -0.654419440 -1.123594100 -1.395526630
85   0.0069378021  0.84721822  1.137900497 -1.112708601  1.463669222
86   0.3724059029  1.01539418  0.652138527 -1.521239258  1.463466079
87   0.6846273936  0.56286702  1.810996943  0.482202529 -0.151856036
88  -0.0311431505 -0.72944827 -1.144921717  0.904928981  0.648768719
89   1.0222330491 -0.62944675 -0.238754397  1.487154193 -0.671822888
90  -0.8816211801 -0.12456913  0.171591870  0.394559407  0.930739885
91   0.4776675677 -1.35811178  0.318737663  0.100454326 -0.900609424
92   0.5619952735  0.28459860  1.076601552 -0.341991755  1.616954519
93  -0.4302874145  1.27019273  1.168170512  1.557765290  1.243988142
94   0.6633580217  1.34215570  1.356621377 -0.263951372 -0.447798728
95   0.4263893431  0.15549424  0.190076245 -0.295866896  3.518420142
96   0.3246717250  1.38681851 -0.768171745  1.039826748  0.143232267
97  -2.5689220583 -1.45780834  0.404270832 -0.646725550 -0.921340265
98  -0.3710570294 -1.57466459 -0.516409377  0.770443426  0.180590691
99  -0.5183829432 -0.46112702 -1.422710376 -1.224364080 -1.660193778
100 -0.3242586072 -0.27507165  0.061903789  0.026471359 -1.025248110
101 -1.2609503126 -0.70486111 -0.507378816 -0.134338565 -0.713494841
102  1.6045848173  0.60924706 -0.697639180 -0.344958469 -0.404246901
103 -1.4485630206 -2.27844364 -0.805233695  1.013196987 -0.073891149
104  0.2338258937  0.46830952  0.141031764 -0.155313724 -0.573504474
105 -1.8486311941 -1.05098556 -0.681860735 -0.176024577  0.950334139
106 -0.3283041153  0.65701945  1.171210441  0.935081261  1.930076202
107 -0.4343632529  1.31937642  0.447955703  1.392323333  0.392224341
108  0.0674252899  1.01933937 -0.025137643  1.028065609  0.944519645
109  1.4958343848  0.37488399  0.304696561 -0.873789913  0.533442943
110  2.0394896364  0.30096984  0.612835814  1.810409246  0.430684020
111  0.0835734175 -1.31707959 -1.475602012  1.466097582 -0.788365606
112  0.4470846579 -1.01873984 -0.495361215  0.212717517 -0.837058048
113  1.0421208295  1.12808265  1.340812154  1.227405799 -0.279976857
114 -0.8191013853 -0.13248490  0.534621218 -0.705433497 -0.677074351
115 -0.3304242784  0.61422254 -0.653211318  0.188324563  0.594246093
116 -2.1377502962 -0.48476208  0.368730176  0.132756757 -0.035140871
117 -0.2091200503  0.51026003 -0.285516322 -0.207461500 -0.639311797
118  0.8120153139 -0.33083480 -0.879075141 -0.472450058  0.233542202
119  1.0037847512  0.94540893  0.816626405 -0.048919084 -0.362482798
120  0.2203948484  0.15391842 -1.407684549 -0.509088729  1.504459686
121 -0.6192498466 -1.03471810 -1.154408762  0.714918955  0.347507468
122 -0.2057194149  0.53261884  0.337607591  1.595378589  2.785859126
123  0.4925496963 -0.57740847 -1.461516102  0.694755988  0.118534216
124  0.6251177511  1.09485804  0.472859291 -1.176771049 -1.401884671
125 -0.7788250912 -0.72241080  0.640321939  0.259500704  0.271035423
126  0.2752190803  0.97111113 -0.431477492  1.575331722 -0.270268057
127 -0.7993781735  0.64725055  0.486615927 -0.150713967 -0.722440477
128  0.2360389602  0.98782555 -1.532796860 -0.708888654  0.493080439
129  0.1947696306  0.11808138 -0.507710259 -1.208304904 -0.147525746
130 -0.7543222810 -0.19353856 -0.634743741  0.035831357  0.323995464
131  0.0364777409 -0.53386704  1.065800505  0.676150961 -0.218355513
132  0.8017294700  0.54418123 -0.390072598 -1.768752540 -0.230635681
133 -0.1410752497  1.25316483  0.462638265  0.153334836  0.176475025
134 -2.3272132666 -0.54815346 -2.053407810 -0.293892859 -1.611490462
135  0.5858578121  0.11172781  0.377878733 -0.851176588  0.988485624
136 -1.4983117909 -1.96235749 -0.641304054 -0.073375972 -0.013461864
137 -0.1646270615 -0.23485781 -1.501468913  0.009024364  0.419806255
138 -0.5619473342 -0.02768205 -0.482473615 -1.187471159 -0.518049014
139  0.4574666681 -1.27761038 -0.014340647 -0.989863927 -0.622180301
140  0.4426599681  0.48762869 -0.321245469 -0.192987122 -0.788140838
141 -2.8811053614 -1.42868009 -0.564172127 -0.628849626 -1.152895413
142  0.5271137018  1.36509652  1.935469929  0.197421149  0.724183949
143 -0.5480205931 -0.90477457 -2.243654952 -1.306595998 -0.361784707
144  0.2866214528 -1.00184073  0.175414431 -0.441713697 -0.383476342
145 -0.2989347840  0.13679441  1.005283550 -2.565044314 -1.797382918
146 -0.6470409833  0.68657133  0.370569944 -1.016973036 -0.771201489
147  1.5921729145  1.14847073  0.219549473  2.271368349  2.249582797
148 -0.3535601070  0.39382370  0.256236655 -0.210922889  1.176223128
149 -0.0952305565 -2.06632217 -1.531996599  0.693599814 -1.530103270
150 -0.9645143145 -2.12707819 -2.798577619 -0.503637358  0.143559577
151 -1.2918879747  0.91633051 -0.730099825  0.787046794  1.787729292
152 -0.8148407921 -0.03081609 -0.117329110  0.443054460  0.168483546
153 -1.0294216102 -0.50399120  0.372293237  0.693138139 -0.224508980
154 -0.1924169740 -0.09908451 -1.320520269 -0.509440363 -0.694841427
155 -2.5265454879 -1.27946648 -1.352039565 -1.148775994  0.203648034
156 -2.2110494521  0.14573249 -0.919260670  0.036363087 -0.579003968
157  2.4735885421  0.61666372  0.531618686  1.488585591 -0.225956474
158  0.2162645870 -0.54908073 -0.708231494 -0.964619393 -0.007419292
159  0.4180527879 -0.21528624 -0.374285226 -1.574637226 -2.193669201
160  0.8919064146  1.94692248  1.200315010  1.321480918 -0.023869545
161  1.4402861272  1.88816481  1.072004515 -0.257825877 -1.654741053
162 -0.3559376051 -1.36925712 -0.552074949  0.443181009  0.381248197
163  0.1850013016  1.37669548  1.442879015 -0.112713577 -0.511125692
164  0.7793452058  0.81957506  0.777513351  0.893118059  1.233296932
165 -0.4166360034  1.38341189 -1.985050845 -0.300849248 -1.246378362
166  2.0642791182  1.50880012  0.042295782  0.974909540  1.668061906
167 -0.0286944756 -1.10798577 -0.304971388  0.371839892  0.695168802
168 -0.5409816332 -1.21318100 -1.896672999 -0.805399936 -1.752443502
169  0.2196002599  0.73387505 -0.462463298  0.031301880 -0.174801555
170  0.0600692946  1.27654738  0.945230913 -0.996341490 -0.309708381
171  1.5526226918  1.99522573  1.640966864  1.986526514  1.258393330
172 -1.0490627965  0.57130075  0.311488098 -0.186675402  0.922119138
173  1.2004765891  0.23307498  0.613485831 -0.621354992 -0.254397663
174  0.8737714320 -1.13345846  0.198064656  0.116251992 -0.642997079
175  0.2259362154 -0.06020410  0.755926128 -1.435701850 -1.902425090
176 -0.5762347990 -0.39455036  0.912061332 -0.612576865 -0.191466199
177  1.0775836982  0.35578953 -0.019971448  0.241829138  0.983677144
178  1.5402940210  0.94742488  1.899564555  0.202650437  2.230174463
179  0.5957099263  1.29277865  0.408829149  1.887220723  0.921820500
180  0.6880409335 -0.18999702 -0.470440600  2.255135472  1.249289936
181 -1.4568005312 -2.15304083  0.082852937  0.404839140 -0.848713961
182  0.8180822063 -0.12492291 -0.226457986  1.039093890  1.264353013
183  0.0085350487  0.95009161  0.746813527 -1.199411785  0.065115291
184 -0.8939641011 -0.89628217 -1.395312079 -1.851973973  0.048860077
185  0.3770611506 -0.82593063 -0.077827629  0.609440949  1.228229304
186 -0.7712881725 -0.87282257  1.400977232 -0.555748453  0.131805493
187  2.1915617773  1.67986476  1.994084339  0.036401333 -0.433220880
188 -0.7643969337 -0.50832649 -0.744517622 -0.632476173 -0.201607745
189  1.0819301482 -0.71909962  1.372228899 -1.310534937 -0.758520258
190 -0.7123421364  0.32300913 -0.371079576 -0.492745933 -0.907730046
191 -0.7189983465 -1.27185795 -0.175885231  0.640603288  0.103894240
192  0.7583172892 -0.09565068 -0.692697098  0.531640957  0.215267582
193 -0.9703555701 -0.52581251 -1.472368273 -0.786463793  0.777350569
194  1.0112459653 -0.46863794  0.714125751  1.361975581  0.769821816
195 -0.9182959293  0.24637287 -1.615501570  0.346672013 -1.458537023
196 -0.9252478103  0.14189828 -0.068395199 -1.563108628 -0.992011965
197  0.2405863856  0.28512879  0.205783681  2.106739348  1.000298173
198 -1.4338046383 -0.14703480 -0.530694953 -0.406961890 -0.991616177
199 -1.0448672138  2.16900693  0.684512689 -0.615041648 -0.352205730
200  0.0003029223 -0.56268985 -1.389024800  0.483170167 -0.419781339
               y6
1    0.6179941475
2    2.3841030920
3   -0.5210671610
4    0.8618983254
5   -0.5965903054
6    0.5079092666
7    0.7554892060
8    0.0759523755
9    0.3448429821
10   0.8270903426
11   0.6520323544
12   0.2187776835
13  -0.7614751918
14  -1.0842821589
15   1.3073990960
16  -0.2933358142
17  -0.3709447897
18   0.8232348603
19   1.3630249192
20   0.5661929320
21   0.2333472427
22  -0.1790524497
23  -0.3303194155
24  -1.8638077984
25  -0.0470305668
26   0.9925991065
27   0.0360763824
28  -3.1385262267
29   0.3242235161
30   0.3112931851
31   0.2346677795
32  -2.2595027268
33  -0.9700838668
34   0.5123926294
35  -0.9467838132
36  -0.9988481086
37  -0.9850983251
38  -0.7062794614
39   1.6704530438
40   1.2014530657
41  -1.0180009746
42   1.8123776350
43  -1.0751010066
44   0.2606550759
45   0.4156912640
46  -2.1825506882
47  -0.7664067085
48   0.0901951194
49   0.9535732595
50   0.3275596205
51   0.3133662035
52  -0.7351711529
53   0.5990055014
54   0.0691236038
55   1.1530796520
56   2.2751153608
57  -0.7772657885
58  -0.4184061207
59   0.5570021844
60   0.0135800519
61   1.4562347698
62  -0.1606915241
63   1.0553206971
64   0.6575174650
65  -0.0064457931
66  -0.5004960987
67  -1.5875407391
68   1.4588715114
69   0.1450152233
70   1.4170530566
71  -0.9396358177
72  -0.8435121790
73   0.3106001720
74   0.8785929780
75  -0.1204969159
76   0.2351512846
77  -1.4338187045
78  -0.1775245098
79  -0.4224112349
80   0.1798781788
81   0.2759808441
82  -0.9196544711
83   1.3291241867
84  -1.5137821934
85   0.0542014781
86  -0.6383486949
87   0.9019258152
88  -0.8758974120
89   0.5240649829
90   0.5873331583
91  -0.8277965079
92   1.6769016214
93  -0.1263431034
94   0.1757383613
95   2.4100851469
96   0.1277224182
97   0.0380878951
98  -0.8026523328
99   0.3441348793
100 -0.3744830375
101  0.8171696350
102 -0.5970039946
103 -0.0836246991
104  0.5234689281
105  0.1652072182
106  2.7678423082
107 -0.2248226632
108  0.6393303014
109 -0.2844623559
110  1.5950208131
111 -0.5345115647
112 -0.1718814698
113  1.3223714503
114 -0.8267943193
115 -1.2501643665
116  0.5707592534
117 -0.4603694843
118 -0.4897231475
119 -0.3598309982
120 -0.6777209643
121 -0.2961381560
122  0.3748771023
123 -0.1329765395
124 -0.3388851746
125 -0.0740007446
126  0.7564669876
127  0.2417537936
128  0.3728457658
129 -1.2005512461
130 -0.0860053439
131 -0.7833938660
132 -1.3332793865
133  0.2406272761
134  0.7057869198
135  0.0245208704
136 -2.0124343197
137  0.2573572724
138  0.6454394047
139 -0.1853828197
140  0.1424444177
141 -1.0708189839
142 -0.0004923891
143 -1.3551431460
144 -0.5058542361
145 -0.9846668092
146 -1.6522967359
147  0.9428419453
148 -1.1915902455
149 -0.6615683484
150 -0.3713791201
151  0.3478756064
152  0.2765388848
153 -0.5912612861
154 -0.9346831386
155  0.0996599492
156 -0.8123513719
157 -0.8482965984
158 -0.4944002434
159 -1.6478423913
160  2.2078647051
161 -0.7721463282
162  0.4896399583
163  1.8913933741
164 -0.9251694736
165  0.0661836225
166  2.6456754802
167 -0.6546683930
168  0.4592944235
169 -0.9303217232
170 -0.1381548765
171  0.8814669819
172 -0.1421422073
173  0.6732022888
174  0.2769714851
175  1.0684121652
176  0.7226096161
177  0.5400740761
178  1.5557614885
179 -0.9597134621
180  1.3431949204
181 -0.9988654731
182  1.2009401176
183  0.3164919950
184 -0.9332768354
185  0.7919200863
186  0.0263290420
187  0.4425107961
188 -0.2406488019
189 -1.4023763935
190 -1.5769701417
191  0.7074369687
192  0.9056765564
193  0.0242501277
194 -0.0370726502
195 -1.4766378477
196 -0.8228911709
197  1.9781018188
198 -0.5899365055
199  0.8213608428
200  0.3499667201
> 
> # With Misspecification Model
> n01 <- simNorm(0, 0.1)
> error.cor.Mis <- matrix(NA, 6, 6)
> diag(error.cor.Mis) <- 1
> TD.Mis <- symMatrix(error.cor.Mis, "n01")
> CFA.Model.Mis <- simMisspecCFA(TD=TD.Mis)
> SimData <- simData(200, CFA.Model, misspec=CFA.Model.Mis)
> summary(SimData)
DATA OBJECT
Model Type
[1] "CFA"
Sample Size
[1] 200
========= Parameters Set ============
Number of free parameters =  48 
=====================================
Adding Misspecification?
[1] "Yes"
Adding Constraint?
[1] "No"
Misfit bound
[1] "No"
Maximum Random Sampling Parameters
[1] 100
> run(SimData)
              y1           y2            y3          y4            y5
1    0.310020825 -0.345899382  1.8123879306 -0.34326028  1.0658688701
2    0.335506346  1.318523686  0.8434819458  0.44801752  1.5461676121
3   -1.132483101  0.217147334 -1.0254883629 -0.15853308  0.7433163068
4   -0.419300107  0.134239695 -0.0447513423  1.12840822  1.0523633318
5   -0.028513223 -1.652978377  0.0750363919  1.65883057 -0.0926169753
6    0.006318933 -0.704186687 -1.8147112214  0.21886781  0.3215200833
7    1.135431363  0.946516333  0.7683064905  0.72878296  1.9804177373
8   -1.143169040 -0.038772706 -1.1061440089  0.27112284  1.3879963966
9   -0.984405564 -0.605474580 -1.4498906591  0.63892629  0.3163259710
10  -0.806225011 -0.441869768  0.3230280450  0.23400418  0.1452400548
11   0.064939093  1.459169471 -0.1873405497 -0.21831465  0.1654414922
12   0.624647070 -0.922153549  0.1992993077 -0.98803796 -0.4997015596
13   0.824110335  0.025799864 -1.3263230766 -0.56434188  0.4097367384
14   1.707908654  3.319916841  1.1284675124  1.41092753  1.6135782618
15  -0.510020221 -0.128291052  0.1570524387  0.67283472 -0.3897724573
16   0.417899513  0.225044632 -0.3907797890  0.15179286 -0.5613695593
17  -0.677631690  1.566427752 -0.4273748437  1.00158371  0.7982875014
18  -1.448297929 -1.427924286  0.3367410375  1.58999488  2.2737916019
19  -0.954369496 -0.017401046 -1.3185728288 -0.74733791 -0.0439828180
20  -1.546106084 -0.256509229 -1.1225857814  0.17634875 -1.7941212719
21   0.380444741  0.002802138  1.0886217239  0.06716056  0.4480224812
22  -1.022804130 -1.834722241 -0.3316122024  0.12112624  0.5800292571
23   0.545140977  0.759815240 -0.2036692683  0.27951375  1.0734314663
24  -1.105248773 -0.660164244 -0.7784816839 -0.01494612  0.9156364281
25  -2.454260384 -0.906499544 -1.8639188052 -0.06114785 -1.3447165032
26   0.553796141 -0.860783346 -0.0803869221 -1.43932926  0.8751117999
27   3.580683474  2.316965063  3.3156422945  1.01161425 -0.0786741743
28  -0.004594863 -1.047200913 -1.4244510069 -1.56031918 -1.1000025407
29  -0.229204737 -1.121323068 -1.3735852812 -1.07192931  0.5521645152
30   0.722518830 -1.087937294 -0.5839266867 -1.95534592 -0.7950657367
31   0.384642783  0.274749618  0.5343877902 -1.08081056 -1.8473082870
32   0.990200311  0.065109814  0.1227527518  1.40210684  1.2310813072
33   0.953752961  1.264542763  1.6624161825 -1.71575853 -2.0126393959
34  -0.321175077 -1.700880116  0.8899653825  0.43096654  0.1438285686
35  -0.720529110 -1.124595226 -0.3300756642 -1.26151331 -1.0656456027
36   0.349235743  0.003848763  0.6967217972  0.31041680 -1.2417759905
37   1.084215481  0.950267453 -0.1654479394 -0.99811095  1.7849912435
38   1.346700863  1.636870727  1.3214568840  1.01576001  2.1134519551
39   0.523596496  1.486208591  0.3285972831  0.45080607  1.0965664833
40  -1.096155117 -0.178316826 -0.4279677418  0.24672744 -0.0796817059
41  -0.106632369 -0.343155433  0.2271187826  0.01824684 -0.3882349371
42   0.356350567  1.009448722 -0.4336542736  0.81804715  1.2168117040
43  -0.762939689  0.301448554 -1.3914705353  0.81108162  0.8484466416
44  -0.645079376  0.982601628 -0.4779978529  0.87920064 -0.3662172535
45  -1.080070602 -1.963256822 -1.8290507922 -0.16386395 -0.6669719470
46  -0.129377786 -0.616315991  0.2455551820 -0.02188195 -1.0999850790
47  -1.332409795 -0.422345195 -0.7523721373 -0.56154346 -0.0005282294
48  -0.245046996 -0.622011189 -1.6844861519 -0.72164378 -0.7595069789
49   0.133878212 -0.241536197 -0.2034534062  0.44910944 -1.0979554760
50   0.217767268  1.030060934 -0.6546208444 -0.71191811 -0.6372109332
51  -1.017531821  0.139300186 -1.6566711792  0.62732286  0.0735219340
52   1.223895322  1.605632366 -0.2721916733 -0.48210568  0.1675932996
53  -1.194715618 -0.395240236 -0.6629751999  0.13835639 -0.1998861957
54  -0.378058530 -0.870606030 -0.1106753262 -0.59145306 -0.3685266495
55   1.876800554  0.727320311  1.9305231574  1.01504763  0.2931352770
56   0.355915431  1.667392945  2.3279705788 -0.26699834  0.0866130640
57   1.489016123 -0.034359524  1.3900005346  0.19079917  0.4579506893
58   1.551939432  2.783109720  2.0409089744  0.66442398  0.4849478164
59  -0.796405070  0.248664914  0.1218659961 -1.47614438 -0.6056958232
60   0.738119247  1.511616216  0.4036966819  1.70884248  1.9456741316
61   0.600909613  0.757293945  1.8606126528  0.93192433  0.0655582448
62  -2.086548557  1.176546820 -0.5217724060  0.96839945  1.0843332762
63   0.186272074 -0.255046224  1.4183597399  1.23321978  0.2331142654
64   0.870318211 -0.532617993  0.9144902783  0.01282129 -0.3950214490
65   0.425995933 -1.030588241  0.5298933979 -0.81731179 -0.5095705181
66  -0.536749385 -0.717112975 -0.9181549561 -1.00607776 -1.4892026372
67   1.808162990  0.086678628 -0.0669929636  0.75778658  1.3097465471
68   1.689130859  0.659531105  1.4719781696  0.17698520  1.7114730819
69   1.508067710  0.905174961  1.3952507375  2.58267557  1.8291853243
70  -0.479009734 -0.306830661  0.0039804251  0.38321706  0.3566023354
71  -0.313156686 -0.282733669 -0.4253655394 -0.45621797  0.9579749453
72  -0.815742545  1.331070192 -0.9000145316  0.65572984 -0.0992401354
73   1.103897692  0.890822757  0.0065677935  0.40748473  0.8262161012
74   2.527327086  0.195943706  0.9443848824  0.83999678  0.4541195869
75   0.024563063  0.161177670 -0.0473171338  0.32240688  0.8908071596
76   0.224447118  1.618431556 -0.0306077669  1.44543386  0.9465477106
77  -0.645678781  0.953307884  0.4754561313 -0.91420330  0.1866399554
78   0.439363088  1.065649523  0.1448226520  0.06345299  0.7179600861
79   0.840300155 -1.068169121  0.5573872841  2.16863511  1.4360811986
80   1.333975819  2.055210240  1.7422302654  2.94637669  3.3857892054
81   0.185659697  0.313298386 -0.7198966967 -0.21374096 -0.0065658993
82  -0.873199827  0.870936040 -0.3725563785 -0.46782962 -1.9722932193
83  -0.877563902  1.271416152 -1.5833880559  0.18237317  1.6709882743
84   0.423650826 -0.456248467  0.9382664113  0.53649243 -0.8440517746
85   1.269017422  1.301030312  0.0409185482 -0.38809513  0.3325878724
86   0.192015768 -0.924334958 -0.0766083538  0.85586397  1.5025212217
87   1.425034782  1.308555629  1.1560905497  0.38540900  0.4704581008
88  -2.256058725  0.421607992 -0.8865469555 -1.04376663 -1.3204611881
89  -0.360712062 -1.986901982  1.0589359722 -1.41170033 -0.9545403396
90   0.499500007  1.472538068  0.4368652634  1.35209314  0.9142566271
91   0.346788098  0.706884928 -0.2220860532  1.70616057 -0.4868957247
92  -1.755400196 -1.052392031 -0.1847246788  0.52352018 -1.2007944062
93  -1.359293193 -1.063624682 -1.5598815512 -0.57795509 -0.0467322012
94  -0.681215793  0.975981847 -0.8765188813  0.10774948 -0.5245360856
95   0.415155160  1.196912368 -1.1744541894  0.93086925  0.4216209188
96   1.668478153 -0.804207137  0.3723982986 -1.00171621 -0.9257819043
97   0.774591639  1.117549634  1.1579448572  1.36948984 -0.3660588271
98   0.877845451 -0.124911365  1.3260626963  0.31847139 -0.8350835573
99   0.086563679 -1.049607585  0.8182820309  1.16172348  0.1696784570
100  0.449248762  0.612313555 -0.9951094881 -0.15108928  0.2894140133
101 -0.324724926  0.547351535 -0.2617464621  0.68505156 -0.6607950192
102 -1.225456248  1.418832944  0.2148873606 -0.06700420 -0.7945985380
103  1.261283737 -1.059976631  0.2343420133  1.87926064  1.1404341627
104 -1.209219278  0.006124173 -0.9299516027 -0.84334517 -0.7220325464
105 -0.334076011  0.259168682 -0.4534424000  1.86145978  1.1846433535
106  0.611838513  1.441873511  0.2369235880 -1.92553327 -0.6608053861
107  0.194655465 -0.013920609  0.6336421091  0.46744421  1.2537953115
108 -1.834724698 -1.986610015  0.4690023788  0.84731488  0.5760924622
109 -0.323513484 -0.723148255  0.0252457954 -2.50320607 -1.0906622703
110  0.259518175  0.634316908  1.0051704085 -0.03393793 -0.6312711582
111 -0.741174450  0.918996407 -0.5229105304 -1.05494563 -0.7449630659
112  0.816567967 -0.106633949  1.1519904787  1.93755128  1.0981347267
113  0.272954017 -1.221790665 -0.5193445903 -0.14370002 -1.3881039054
114 -0.295394606 -0.817859472 -1.6829758553 -0.94336763 -1.2633579354
115 -2.562876296 -1.816797319 -0.0623438845  0.61543898  0.3110845474
116  0.225518018 -1.412183667 -0.3894308618 -0.68406941 -0.0241436787
117 -0.484634898 -0.249610035 -2.3769399391 -0.22626843  0.8532176413
118  2.438942114  1.405686725 -0.0001931225 -1.60115105 -1.8856807379
119 -0.729062287 -1.319052054 -0.8630850052  0.70631959  0.1738192269
120 -1.884152366 -1.096903823  0.3505628172  1.59751727 -0.4909781653
121  0.038852313  0.839307608  0.5841643102 -0.40186853  0.3399992839
122  0.680077452 -2.751647722 -0.4598583390 -1.27626500  0.3984148043
123 -0.319360622  1.333786017 -1.6795232308  0.08256865  0.7256875659
124  0.057877329  0.101616604 -0.2312194698 -0.69617734  0.7070432774
125 -0.096521591 -0.978436413 -0.7103392467 -0.30948545  1.5961913534
126 -0.881919088 -2.471881819 -1.6924686660 -0.54861905 -1.0077949269
127  0.957682744 -0.748708839 -0.8175367568 -0.27324910  0.3795089673
128 -0.978403248 -0.562565395  0.9323577319 -0.20592448 -1.4483778402
129  1.419153877  0.440696624  1.6721581714 -0.31674435  0.2690737707
130  1.882379450  1.265439120  2.5692366002  0.62520930 -0.0624739986
131  1.340161136  0.839420057  0.1788998136  1.24980927  0.9319578708
132 -1.575939074 -0.199646107 -0.5197879911  0.12607981 -1.5411633234
133  0.058309669 -1.260602438  0.1681418943 -0.64405472 -0.7865100270
134  0.296933136 -0.150678466 -1.2746839915  0.31034817  0.0366466437
135 -0.693388738 -0.718227618 -1.3051681797 -0.36726940 -0.8445595918
136 -0.308218025 -1.119301689 -1.2559067205 -0.64498175 -1.5403772733
137  0.620746997  0.171852719  0.6003464279  1.16351656 -0.4113394236
138 -1.518029973  1.183800335 -0.9499120939  1.27387921  0.1404349714
139 -0.269172065  0.499832372  0.6066276262  0.68068720  0.0940217511
140 -1.502733844 -1.360555214 -0.6183211399  0.54127408 -0.9012056909
141 -0.020416472 -1.226535287 -0.3413941502  0.14827995  0.2108122522
142 -1.953981783 -0.536352278 -2.0728859820 -1.14418724 -0.0360589293
143 -0.306873504 -0.121545450 -1.2602347309 -0.91229739 -0.3792384843
144  0.352855250  2.110790947 -0.2296185213 -1.36432980 -0.2547739540
145  0.697810233 -1.073113478 -0.8101301793 -1.38913758 -0.0132664712
146 -0.986796732 -0.526643949 -0.6826953259 -0.65870360 -0.2163805208
147 -0.367073873 -1.252325823 -0.6596516713 -1.23918100 -0.6456142352
148 -0.666981071 -0.435761193 -1.3051235612  0.16620764 -1.7731746027
149 -1.513298163 -1.212897149  0.0812464639 -0.72059439 -1.0124850510
150  1.366725110  0.799851423  2.1277018666  1.10114756  1.1999324078
151  1.472352551  0.350094503 -0.3975231484 -1.72335542 -0.8860511227
152 -3.225521488 -1.502301829 -0.1945819575  0.45456842  0.5993679387
153 -0.696713959 -1.568049604 -1.2425350014 -1.32537877 -0.4879251578
154 -1.481504374  0.528035886 -0.5311579798  0.64499291 -0.6476077302
155  0.968535243 -0.771431792 -0.7506232091 -0.56469778 -0.9148226818
156 -1.053187416  1.717186505  0.1654106674  0.03079016 -0.7602648909
157  0.778993449  0.849207393  1.0216461132 -1.02209601 -1.0202839093
158  1.112412017  0.560989806 -0.5632996624  0.99281891  0.2344852091
159 -0.072714216 -0.528981073  1.1785135910  0.96051928  0.0788777011
160  1.531018747  0.964043532  0.7985078776  0.60606083  0.8789754103
161  0.263295000  0.712091179  0.3759530945  0.50596058 -0.5903738719
162  0.270643763  0.309141429 -0.4313363115 -0.03922605  2.1062354053
163 -1.136576278 -0.218297560  0.6268599668  0.41803919  0.0072990871
164  0.712067502  1.174067257  0.3871139912  0.39601431  0.0105803098
165 -0.371149945  0.298834058 -0.6414699443  0.12665737  0.0001596950
166  0.073996407  0.987856629 -0.1873290142 -0.64834218 -1.2965939670
167 -2.670997958  0.084907403 -1.0293920035  0.03045715 -0.8115058757
168  0.457690997  0.857946321  0.2345793150 -0.83141933 -0.9885424355
169  0.316271934  0.017391844 -0.3037404630 -0.15739407 -0.9909986107
170 -1.058610617  1.425819365  0.1725383303  1.17334572  0.3302254592
171 -0.586841983 -0.918837667 -0.3706447445  0.29688265  0.2136294687
172  1.363404537  0.664327395 -0.7241515129 -0.89488673 -1.1198349413
173 -0.299745303 -1.293994605 -1.1925624593 -1.13457225 -0.4606250998
174  0.708855279  0.968223032  0.7469687944  0.50769475  2.1696284080
175  0.253813640  0.008947227 -0.6986818210 -1.04767162  0.1048269594
176 -1.050618135  0.539954565 -0.6750233672 -1.44127307 -2.0454589483
177  0.080006572  0.795198101 -0.2802539293 -0.93378636 -1.5863742852
178 -0.359397057  1.668350576 -0.9522843787 -0.16422353 -0.4293920611
179 -0.186890408 -0.494112989  0.4023205125  1.03245483  2.1203043917
180  0.760213665  0.582168896  0.6580121380 -1.27553708 -0.6982532924
181  1.100688270 -1.203045200  1.4473032596  0.06661078 -0.8552076777
182 -1.764941047 -0.493702830 -1.9189640641 -0.34482101 -0.8757530918
183  1.920160584 -0.289997827  1.3252699102  0.96785471 -0.3873156890
184  1.777218113  0.175780316  1.8060983945 -1.77624637 -0.4458384503
185 -0.267201307  0.973403813  0.8814153531  0.52575847  0.1496141960
186  0.384472102  0.421017516  1.6337727652  1.66977029  1.1117794962
187  0.039659775 -0.298574526  0.5388751670  1.42609702 -0.5350613825
188  0.810465525  0.105008075 -0.2799078603 -1.43031846 -0.2088758033
189  0.897928167 -1.558841238 -1.6997873710 -0.33525530  0.5318894214
190  0.016885559 -0.119480420 -0.7388971646 -0.35555522 -0.5224106424
191 -0.870455121 -2.470985149 -0.1124242064 -0.38267764 -0.2574371120
192  0.402901693  0.757590850 -0.7682410577  0.72470870 -0.3382878110
193 -0.903217760 -1.911822469 -1.1996956499  0.12983574 -0.5344953363
194 -0.951884425 -0.519802492 -2.2221336356  0.07206109 -0.9327954972
195 -0.447689422 -0.714894777 -0.7659633216 -0.17708854 -0.0383111363
196  0.270148190  0.629490041  0.1304935672  1.16528764  1.4121564451
197  1.254957799  1.143624256  1.2082239591 -0.58384469 -0.6034150352
198 -1.006868702 -0.322100650 -0.3027236776 -0.63627368  0.2386344547
199  1.398689981  0.311210388  1.3700804874  0.01873503  0.2302247049
200 -0.627349402 -0.574605609 -0.0256743851 -0.44229065 -0.4749974602
              y6
1    1.175134426
2    0.627126002
3    0.035694078
4    1.112114255
5    1.070418891
6   -0.153146894
7    1.497029050
8    1.036992556
9    1.662034834
10   2.480193623
11   0.370167479
12  -1.163791364
13   0.497050911
14   1.513958027
15  -0.142587921
16  -0.911124540
17   0.632192319
18  -0.152585402
19   0.824424126
20   0.134299972
21   1.387083215
22   2.636029973
23  -0.473402978
24   0.246518529
25  -0.220223737
26   1.175939279
27  -0.040298943
28  -0.669598642
29  -0.797097133
30  -1.527352970
31   0.459747584
32   1.704689203
33  -0.418726677
34  -0.629576676
35  -0.712407421
36   0.250300702
37   1.548788505
38   1.686635159
39   1.431915167
40  -2.043745281
41  -1.408122885
42  -0.504485670
43   0.028794479
44   0.724225850
45   0.247255402
46  -0.070575572
47  -0.793238227
48   0.312177493
49  -1.818990106
50  -0.738989116
51   1.672172809
52   0.531573385
53   0.125576295
54  -1.159728742
55   0.828999192
56  -0.056208313
57  -0.567794370
58  -0.401394187
59  -1.395769940
60   1.892355176
61   0.768374327
62   0.360648013
63  -0.349958844
64  -0.532169177
65   0.960414635
66  -1.605178424
67  -0.790515938
68   2.927389249
69   0.209258060
70   0.605851909
71  -0.020228323
72   0.547530499
73   1.453682623
74   1.185778670
75   0.228483191
76   0.304419015
77  -0.172814466
78  -0.358157326
79   0.693967373
80   3.066824852
81   0.271804989
82   0.233560724
83   0.988489261
84  -2.126022154
85   0.202165870
86  -0.328415710
87   0.718263422
88   1.100438525
89  -1.250608591
90   1.645328334
91  -1.033154285
92  -0.219962190
93   0.101486837
94  -1.163977545
95   0.658887950
96  -1.188970716
97   1.452529438
98  -0.445601751
99  -0.489187943
100 -0.179471944
101 -1.120728142
102 -0.207138982
103  1.123303303
104 -1.702257557
105  1.680593647
106 -0.854847152
107  0.327482561
108  1.272083691
109 -0.738112261
110  0.257527543
111 -0.358895006
112 -0.410836555
113 -0.263706751
114 -2.096444854
115 -0.344426265
116 -0.060382020
117 -0.912900448
118 -0.771780289
119 -0.531236992
120 -0.398104525
121 -0.045887654
122 -1.338170410
123  2.866117522
124  0.029145561
125  0.170026220
126 -1.701015736
127 -0.647351563
128 -0.021222006
129  0.073760671
130 -0.425954012
131  0.510419320
132 -0.823374162
133 -0.728487407
134  0.441768895
135 -0.364979494
136 -1.518055091
137  1.091770256
138  0.027827951
139  0.815276053
140 -1.163123373
141 -0.228748206
142  0.813166908
143 -0.330187674
144  0.515736233
145 -0.629125666
146 -1.008030844
147 -1.107332682
148 -1.678950073
149  0.729945450
150  0.320626879
151 -1.140350743
152 -1.085843852
153 -0.424726748
154  0.772831379
155  0.577895484
156  0.936042331
157 -1.490896300
158  1.254127913
159  1.172834901
160 -0.374668410
161 -0.181512252
162  2.125087633
163 -0.157814984
164  1.185896258
165 -0.063619338
166 -1.459841849
167 -0.715805430
168 -2.339688732
169 -1.740016820
170  0.194800367
171  0.993655421
172 -1.491317551
173  0.705392470
174  0.929783889
175  0.465881934
176 -0.246598654
177  0.379734636
178  0.707608218
179  0.244384889
180 -0.177180533
181 -0.019467529
182  1.058091911
183 -0.142583161
184 -0.863901628
185  0.686257325
186  0.918665536
187 -0.451879143
188  0.009160055
189 -0.911020288
190 -0.539468379
191  0.183052245
192  0.803107907
193 -1.618569427
194 -2.455909720
195 -0.606051616
196  0.684313334
197 -1.637075745
198 -0.089590054
199 -0.483292338
200  0.652379610
> 
> 
> 
> cleanEx()
> nameEx("simEqualCon")
> ### * simEqualCon
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: simEqualCon
> ### Title: Equality Constraint Object
> ### Aliases: simEqualCon
> 
> ### ** Examples
> 
> # Example 1: Single-group, one constraint
> constraint <- matrix(0, 3, 2)
> constraint[1,] <- c(1, 1)
> constraint[2,] <- c(2, 1)
> constraint[3,] <- c(3, 1)
> rownames(constraint) <- rep("LY", 3)
> equal.loading <- simEqualCon(constraint, modelType="SEM.exo")
> 
> # Example 2: Multiple-group, one constraint
> group.con <- matrix(0, 2, 3)
> group.con[1,] <- c(1, 2, 1)
> group.con[2,] <- c(2, 2, 1)
> rownames(group.con) <- rep("BE", 2)
> equal.path <- simEqualCon(group.con, modelType="Path")
> 
> # Example 3: Single-group, multiple constraints
> constraint1 <- matrix(1, 3, 2)
> constraint1[,1] <- 1:3
> rownames(constraint1) <- rep("LY", 3)
> constraint2 <- matrix(2, 3, 2)
> constraint2[,1] <- 4:6
> rownames(constraint2) <- rep("LY", 3)
> constraint3 <- matrix(3, 2, 2)
> constraint3[,1] <- 7:8
> rownames(constraint3) <- rep("LY", 2)
> equal.loading2 <- simEqualCon(constraint1, constraint2, constraint3, modelType="SEM")
> summary(equal.loading2)
CONSTRAINT OBJECT
Model Type
[1] "SEM"
-------------Constraint----------------
1.
   Group Row Column
LY    NA   1      1
LY    NA   2      1
LY    NA   3      1
---------------------------------------
2.
   Group Row Column
LY    NA   4      2
LY    NA   5      2
LY    NA   6      2
---------------------------------------
3.
   Group Row Column
LY    NA   7      3
LY    NA   8      3
---------------------------------------
> 
> 
> 
> cleanEx()
> nameEx("simMatrix")
> ### * simMatrix
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: simMatrix
> ### Title: Create simMatrix that save free parameters and starting values,
> ###   as well as fixed values
> ### Aliases: simMatrix
> 
> ### ** Examples
> 
> loading <- matrix(0, 6, 2)
> loading[1:3, 1] <- NA
> loading[4:6, 2] <- NA
> loadingValues <- matrix(0, 6, 2)
> loadingValues[1:3, 1] <- 0.7
> loadingValues[4:6, 2] <- 0.7
> LX <- simMatrix(loading, loadingValues)
> summary(LX)
[1] "Random Full Matrix Object."
[1] "Free/Fixed Parameters:"
     [,1] [,2]
[1,]   NA    0
[2,]   NA    0
[3,]   NA    0
[4,]    0   NA
[5,]    0   NA
[6,]    0   NA
[1] "Parameter/Starting Values:"
     [,1]  [,2] 
[1,] "0.7" ""   
[2,] "0.7" ""   
[3,] "0.7" ""   
[4,] ""    "0.7"
[5,] ""    "0.7"
[6,] ""    "0.7"
> run(LX)
     [,1] [,2]
[1,]  0.7  0.0
[2,]  0.7  0.0
[3,]  0.7  0.0
[4,]  0.0  0.7
[5,]  0.0  0.7
[6,]  0.0  0.7
> 
> n65 <- simNorm(0.6, 0.05)
> LY <- simMatrix(loading, "n65")
> summary(LY)
[1] "Random Full Matrix Object."
[1] "Free/Fixed Parameters:"
     [,1] [,2]
[1,]   NA    0
[2,]   NA    0
[3,]   NA    0
[4,]    0   NA
[5,]    0   NA
[6,]    0   NA
[1] "Parameter/Starting Values:"
     [,1]  [,2] 
[1,] "n65" ""   
[2,] "n65" ""   
[3,] "n65" ""   
[4,] ""    "n65"
[5,] ""    "n65"
[6,] ""    "n65"
> run(LY)
          [,1]      [,2]
[1,] 0.5686773 0.0000000
[2,] 0.6091822 0.0000000
[3,] 0.5582186 0.0000000
[4,] 0.0000000 0.6797640
[5,] 0.0000000 0.6164754
[6,] 0.0000000 0.5589766
> 
> 
> 
> cleanEx()
> nameEx("simMissing")
> ### * simMissing
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: simMissing
> ### Title: Construct a SimMissing object to create data with missingness
> ###   and analyze missing data.
> ### Aliases: simMissing
> 
> ### ** Examples
> 
>   #Example to create simMissing object for 3 forms design at 3 timepoints with 10 imputations
>   Missing<- simMissing(nforms=3, timePoints=3, numImps=10)
> 
> 
> 
> 
> cleanEx()
> nameEx("simMisspecCFA")
> ### * simMisspecCFA
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: simMisspecCFA
> ### Title: Set of model misspecification for CFA model.
> ### Aliases: simMisspecCFA
> 
> ### ** Examples
> 
> n01 <- simNorm(0, 0.1)
> error.cor.Mis <- matrix(NA, 6, 6)
> diag(error.cor.Mis) <- 1
> TD.Mis <- symMatrix(error.cor.Mis, "n01")
> CFA.Model.Mis <- simMisspecCFA(TD=TD.Mis)
> 
> 
> 
> cleanEx()
> nameEx("simMisspecPath")
> ### * simMisspecPath
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: simMisspecPath
> ### Title: Set of model misspecification for Path analysis model.
> ### Aliases: simMisspecPath
> 
> ### ** Examples
> 
> u1 <- simUnif(-0.1, 0.1)
> mis.path.GA <- matrix(0, 2, 2)
> mis.path.GA[2, 1:2] <- NA
> mis.GA <- simMatrix(mis.path.GA, "u1")
> Path.Mis.Model <- simMisspecPath(GA = mis.GA, exo=TRUE)
> 
> 
> 
> cleanEx()
> nameEx("simMisspecSEM")
> ### * simMisspecSEM
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: simMisspecSEM
> ### Title: Set of model misspecification for SEM model.
> ### Aliases: simMisspecSEM
> 
> ### ** Examples
> 
> u2 <- simUnif(-0.2, 0.2)
> n1 <- simNorm(0, 0.1)
> loading.X.trivial <- matrix(NA, 6, 2)
> loading.X.trivial[is.na(loading.X.trivial)] <- 0
> LX.trivial <- simMatrix(loading.X.trivial, "u2")
> error.cor.X.trivial <- matrix(NA, 6, 6)
> diag(error.cor.X.trivial) <- 0
> TD.trivial <- symMatrix(error.cor.X.trivial, "n1")
> error.cor.Y.trivial <- matrix(NA, 2, 2)
> diag(error.cor.Y.trivial) <- 0
> TE.trivial <- symMatrix(error.cor.Y.trivial, "n1")
> TH.trivial <- simMatrix(matrix(NA, 6, 2), "n1")
> SEM.Mis.Model <- simMisspecSEM(LX = LX.trivial, TE = TE.trivial, TD = TD.trivial, TH = TH.trivial, exo=TRUE)
> 
> 
> 
> cleanEx()
> nameEx("simModel")
> ### * simModel
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: simModel
> ### Title: Create simModel from model specification and be ready for data
> ###   analysis.
> ### Aliases: simModel simModel-methods simModel,ANY-method
> ###   simModel,SimSet-method simModel,SimFreeParam-method
> 
> ### ** Examples
> 
> loading <- matrix(0, 6, 2)
> loading[1:3, 1] <- NA
> loading[4:6, 2] <- NA
> loadingValues <- matrix(0, 6, 2)
> loadingValues[1:3, 1] <- 0.7
> loadingValues[4:6, 2] <- 0.7
> LX <- simMatrix(loading, loadingValues)
> latent.cor <- matrix(NA, 2, 2)
> diag(latent.cor) <- 1
> PH <- symMatrix(latent.cor, 0.5)
> error.cor <- matrix(0, 6, 6)
> diag(error.cor) <- 1
> TD <- symMatrix(error.cor)
> CFA.Model <- simSetCFA(LX = LX, PH = PH, TD = TD)
> SimModel <- simModel(CFA.Model)
> 
> 
> 
> cleanEx()
> nameEx("simNorm")
> ### * simNorm
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: simNorm
> ### Title: Create random normal distribution object
> ### Aliases: simNorm
> 
> ### ** Examples
> 
>     n02 <- simNorm(0, 0.2)
>     run(n02)
[1] -0.1252908
> 
> 
> 
> cleanEx()
> nameEx("simResult")
> ### * simResult
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: simResult
> ### Title: Create simResult.
> ### Aliases: simResult
> 
> ### ** Examples
> 
> loading <- matrix(0, 6, 1)
> loading[1:6, 1] <- NA
> LX <- simMatrix(loading, 0.7)
> PH <- symMatrix(diag(1))
> TD <- symMatrix(diag(6))
> CFA.Model <- simSetCFA(LY = LX, PS = PH, TE = TD)
> SimData <- simData(500, CFA.Model)
> SimModel <- simModel(CFA.Model)
> # We make the examples running only 50 replications to save time.
> # In reality, more replications are needed.
> Output <- simResult(50, SimData, SimModel)
> #summary(Output)
> 
> 
> 
> cleanEx()
> nameEx("simSetCFA")
> ### * simSetCFA
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: simSetCFA
> ### Title: Create a set of matrix that belongs to CFA model.
> ### Aliases: simSetCFA
> 
> ### ** Examples
> 
> loading <- matrix(0, 6, 2)
> loading[1:3, 1] <- NA
> loading[4:6, 2] <- NA
> loadingValues <- matrix(0, 6, 2)
> loadingValues[1:3, 1] <- 0.7
> loadingValues[4:6, 2] <- 0.7
> LX <- simMatrix(loading, loadingValues)
> summary(LX)
[1] "Random Full Matrix Object."
[1] "Free/Fixed Parameters:"
     [,1] [,2]
[1,]   NA    0
[2,]   NA    0
[3,]   NA    0
[4,]    0   NA
[5,]    0   NA
[6,]    0   NA
[1] "Parameter/Starting Values:"
     [,1]  [,2] 
[1,] "0.7" ""   
[2,] "0.7" ""   
[3,] "0.7" ""   
[4,] ""    "0.7"
[5,] ""    "0.7"
[6,] ""    "0.7"
> 
> latent.cor <- matrix(NA, 2, 2)
> diag(latent.cor) <- 1
> PH <- symMatrix(latent.cor, 0.5)
> 
> error.cor <- matrix(0, 6, 6)
> diag(error.cor) <- 1
> TD <- symMatrix(error.cor)
> 
> CFA.Model <- simSetCFA(LX = LX, PH = PH, TD = TD)
> 
> 
> 
> cleanEx()
> nameEx("simSetPath")
> ### * simSetPath
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: simSetPath
> ### Title: Create a set of matrix belongs to Path analysis model
> ### Aliases: simSetPath
> 
> ### ** Examples
>  
> u35 <- simUnif(0.3, 0.5)
> u57 <- simUnif(0.5, 0.7)
> u1 <- simUnif(-0.1, 0.1)
> n31 <- simNorm(0.3, 0.1)
> 
> path.BE <- matrix(0, 4, 4)
> path.BE[3, 1:2] <- NA
> path.BE[4, 3] <- NA
> starting.BE <- matrix("", 4, 4)
> starting.BE[3, 1:2] <- "u35"
> starting.BE[4, 3] <- "u57"
> BE <- simMatrix(path.BE, starting.BE)
> 
> residual.error <- diag(4)
> residual.error[1,2] <- residual.error[2,1] <- NA
> PS <- symMatrix(residual.error, "n31")
> 
> Path.Model <- simSetPath(PS = PS, BE = BE)
> 
> u35 <- simUnif(0.3, 0.5)
> u57 <- simUnif(0.5, 0.7)
> u1 <- simUnif(-0.1, 0.1)
> n31 <- simNorm(0.3, 0.1)
> 
> path.GA <- matrix(0, 2, 2)
> path.GA[1, 1:2] <- NA
> GA <- simMatrix(path.GA, "u35")
> 
> path.BE <- matrix(0, 2, 2)
> path.BE[2, 1] <- NA
> BE <- simMatrix(path.BE, "u57")
> 
> exo.cor <- matrix(NA, 2, 2)
> diag(exo.cor) <- 1
> PH <- symMatrix(exo.cor, "n31")
> 
> PS <- symMatrix(diag(2))
> 
> Path.Exo.Model <- simSetPath(PS = PS, BE = BE, PH = PH, GA = GA, exo=TRUE)
> 
> 
> 
> cleanEx()
> nameEx("simSetSEM")
> ### * simSetSEM
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: simSetSEM
> ### Title: Create a set of matrix belongs to SEM model
> ### Aliases: simSetSEM
> 
> ### ** Examples
> 
> u68 <- simUnif(0.6, 0.8)
> loading <- matrix(0, 8, 3)
> loading[1:3, 1] <- NA
> loading[4:6, 2] <- NA
> loading[7:8, 3] <- NA
> loading.start <- matrix("", 8, 3)
> loading.start[1:3, 1] <- 0.7
> loading.start[4:6, 2] <- 0.7
> loading.start[7:8, 3] <- "u68"
> LY <- simMatrix(loading, loading.start)
> 
> TE <- symMatrix(diag(8))
> 
> factor.cor <- diag(3)
> factor.cor[1, 2] <- factor.cor[2, 1] <- NA
> PS <- symMatrix(factor.cor, 0.5)
> 
> path <- matrix(0, 3, 3)
> path[3, 1:2] <- NA
> path.start <- matrix(0, 3, 3)
> path.start[3, 1] <- "n65"
> path.start[3, 2] <- "u35"
> BE <- simMatrix(path, path.start)
> 
> SEM.model <- simSetSEM(BE=BE, LY=LY, PS=PS, TE=TE)
> 
> loading.X <- matrix(0, 6, 2)
> loading.X[1:3, 1] <- NA
> loading.X[4:6, 2] <- NA
> LX <- simMatrix(loading.X, 0.7)
> 
> loading.Y <- matrix(NA, 2, 1)
> LY <- simMatrix(loading.Y, "u68")
> 
> TD <- symMatrix(diag(6))
> 
> TE <- symMatrix(diag(2))
> 
> factor.K.cor <- matrix(NA, 2, 2)
> diag(factor.K.cor) <- 1
> PH <- symMatrix(factor.K.cor, 0.5)
> 
> PS <- symMatrix(as.matrix(1))
> 
> path.GA <- matrix(NA, 1, 2)
> path.GA.start <- matrix(c("n65", "u35"), ncol=2)
> GA <- simMatrix(path.GA, path.GA.start)
> 
> BE <- simMatrix(as.matrix(0))
> 
> SEM.Exo.model <- simSetSEM(GA=GA, BE=BE, LX=LX, LY=LY, PH=PH, PS=PS, TD=TD, TE=TE, exo=TRUE)
> 
> 
> 
> cleanEx()
> nameEx("simUnif")
> ### * simUnif
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: simUnif
> ### Title: Create random uniform distribution object
> ### Aliases: simUnif
> 
> ### ** Examples
> 
> u1 <- simUnif(-0.1, 0.1)
> run(u1)
[1] -0.04689827
> 
> 
> 
> cleanEx()
> nameEx("simVector")
> ### * simVector
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: simVector
> ### Title: Create simVector that save free parameters and starting values,
> ###   as well as fixed values
> ### Aliases: simVector
> 
> ### ** Examples
> 
> factor.mean <- rep(NA, 4)
> AL <- simVector(factor.mean, 0)
> 
> n02 <- simNorm(0, 0.2)
> factor.start <- rep("n02", 4)
> KA <- simVector(factor.mean, factor.start)
> 
> 
> 
> cleanEx()
> nameEx("summaryParam")
> ### * summaryParam
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: summaryParam
> ### Title: Provide summary of parameter estimates and standard error across
> ###   replications
> ### Aliases: summaryParam summaryParam-methods summaryParam,ANY-method
> ###   summaryParam,SimResult-method summaryParam,SimModelOut-method
> ###   summaryParam,SimModelMIOut-method
> 
> ### ** Examples
> 
> showClass("SimResult")
Class "SimResult" [package "simsem"]

Slots:
                                                                        
Name:   modelType       nRep       coef         se        fit  converged
Class:  character    numeric data.frame data.frame data.frame     vector
                                                             
Name:  paramValue       FMI1       FMI2    stdCoef       seed
Class: data.frame data.frame data.frame data.frame    numeric
> loading <- matrix(0, 6, 1)
> loading[1:6, 1] <- NA
> LX <- simMatrix(loading, 0.7)
> PH <- symMatrix(diag(1))
> TD <- symMatrix(diag(6))
> CFA.Model <- simSetCFA(LY = LX, PS = PH, TE = TD)
> SimData <- simData(500, CFA.Model)
> SimModel <- simModel(CFA.Model)
> # We make the examples running only 50 replications to save time.
> # In reality, more replications are needed.
> Output <- simResult(50, SimData, SimModel)
> summaryParam(Output)
      Estimate.Average Estimate.SD Average.SE Power..Not.equal.0.       Std.Est
LY1_1     0.6987208308  0.03662475 0.04168400                1.00  0.7003917897
LY2_1     0.6992890235  0.03879634 0.04146384                1.00  0.7036998581
LY3_1     0.6911651213  0.03931740 0.04153740                1.00  0.6965281781
LY4_1     0.7000988977  0.04450588 0.04161300                1.00  0.7022375607
LY5_1     0.6874597596  0.04591153 0.04168927                1.00  0.6916705365
LY6_1     0.6996311395  0.03842986 0.04167709                1.00  0.7012251725
TE1_1     0.5058795207  0.03596587 0.03856070                1.00  0.5088990911
TE2_2     0.4974056235  0.04085267 0.03808465                1.00  0.5041264447
TE3_3     0.5054854290  0.04053321 0.03839798                1.00  0.5140733648
TE4_4     0.5019295667  0.04173831 0.03839310                1.00  0.5060461391
TE5_5     0.5133116099  0.05016361 0.03880605                1.00  0.5203579453
TE6_6     0.5047686442  0.04308396 0.03855205                1.00  0.5075150815
TY1       0.0011882815  0.04405939 0.04459888                0.08  0.0015718309
TY2      -0.0019316303  0.04390733 0.04442694                0.06 -0.0018974493
TY3      -0.0010193095  0.03810069 0.04435987                0.04 -0.0009101920
TY4       0.0007947424  0.04728266 0.04455990                0.04  0.0004588162
TY5       0.0004424934  0.03530702 0.04442965                0.02  0.0004445069
TY6       0.0023901076  0.04422891 0.04460613                0.02  0.0023277481
      Std.Est.SD Average.Param  Average.Bias Coverage
LY1_1 0.02373858          0.70 -1.279169e-03     0.98
LY2_1 0.02634281          0.70 -7.109765e-04     0.98
LY3_1 0.02812386          0.70 -8.834879e-03     0.96
LY4_1 0.02886049          0.70  9.889772e-05     0.94
LY5_1 0.03548388          0.70 -1.254024e-02     0.92
LY6_1 0.02799737          0.70 -3.688605e-04     0.98
TE1_1 0.03302184          0.51 -4.120479e-03     0.96
TE2_2 0.03661408          0.51 -1.259438e-02     0.92
TE3_3 0.03926764          0.51 -4.514571e-03     0.94
TE4_4 0.04014109          0.51 -8.070433e-03     0.94
TE5_5 0.04854150          0.51  3.311610e-03     0.90
TE6_6 0.03911976          0.51 -5.231356e-03     0.94
TY1   0.04435330          0.00  1.188281e-03     0.92
TY2   0.04397022          0.00 -1.931630e-03     0.94
TY3   0.03811519          0.00 -1.019309e-03     0.96
TY4   0.04689551          0.00  7.947424e-04     0.96
TY5   0.03559669          0.00  4.424934e-04     0.98
TY6   0.04467118          0.00  2.390108e-03     0.98
> summaryParam(Output, detail=TRUE)
      Estimate.Average Estimate.SD Average.SE Power..Not.equal.0.       Std.Est
LY1_1     0.6987208308  0.03662475 0.04168400                1.00  0.7003917897
LY2_1     0.6992890235  0.03879634 0.04146384                1.00  0.7036998581
LY3_1     0.6911651213  0.03931740 0.04153740                1.00  0.6965281781
LY4_1     0.7000988977  0.04450588 0.04161300                1.00  0.7022375607
LY5_1     0.6874597596  0.04591153 0.04168927                1.00  0.6916705365
LY6_1     0.6996311395  0.03842986 0.04167709                1.00  0.7012251725
TE1_1     0.5058795207  0.03596587 0.03856070                1.00  0.5088990911
TE2_2     0.4974056235  0.04085267 0.03808465                1.00  0.5041264447
TE3_3     0.5054854290  0.04053321 0.03839798                1.00  0.5140733648
TE4_4     0.5019295667  0.04173831 0.03839310                1.00  0.5060461391
TE5_5     0.5133116099  0.05016361 0.03880605                1.00  0.5203579453
TE6_6     0.5047686442  0.04308396 0.03855205                1.00  0.5075150815
TY1       0.0011882815  0.04405939 0.04459888                0.08  0.0015718309
TY2      -0.0019316303  0.04390733 0.04442694                0.06 -0.0018974493
TY3      -0.0010193095  0.03810069 0.04435987                0.04 -0.0009101920
TY4       0.0007947424  0.04728266 0.04455990                0.04  0.0004588162
TY5       0.0004424934  0.03530702 0.04442965                0.02  0.0004445069
TY6       0.0023901076  0.04422891 0.04460613                0.02  0.0023277481
      Std.Est.SD Average.Param  Average.Bias Coverage      Rel.Bias
LY1_1 0.02373858          0.70 -1.279169e-03     0.98 -0.0018273846
LY2_1 0.02634281          0.70 -7.109765e-04     0.98 -0.0010156807
LY3_1 0.02812386          0.70 -8.834879e-03     0.96 -0.0126212553
LY4_1 0.02886049          0.70  9.889772e-05     0.94  0.0001412825
LY5_1 0.03548388          0.70 -1.254024e-02     0.92 -0.0179146291
LY6_1 0.02799737          0.70 -3.688605e-04     0.98 -0.0005269436
TE1_1 0.03302184          0.51 -4.120479e-03     0.96 -0.0080793712
TE2_2 0.03661408          0.51 -1.259438e-02     0.92 -0.0246948558
TE3_3 0.03926764          0.51 -4.514571e-03     0.94 -0.0088521000
TE4_4 0.04014109          0.51 -8.070433e-03     0.94 -0.0158243791
TE5_5 0.04854150          0.51  3.311610e-03     0.90  0.0064933527
TE6_6 0.03911976          0.51 -5.231356e-03     0.94 -0.0102575604
TY1   0.04435330          0.00  1.188281e-03     0.92            NA
TY2   0.04397022          0.00 -1.931630e-03     0.94            NA
TY3   0.03811519          0.00 -1.019309e-03     0.96            NA
TY4   0.04689551          0.00  7.947424e-04     0.96            NA
TY5   0.03559669          0.00  4.424934e-04     0.98            NA
TY6   0.04467118          0.00  2.390108e-03     0.98            NA
          Std.Bias Rel.SE.Bias
LY1_1 -0.034926359  0.13813746
LY2_1 -0.018325865  0.06875646
LY3_1 -0.224706603  0.05646368
LY4_1  0.002222127 -0.06499993
LY5_1 -0.273139233 -0.09196523
LY6_1 -0.009598278  0.08449759
TE1_1 -0.114566384  0.07214722
TE2_2 -0.308287706 -0.06775628
TE3_3 -0.111379565 -0.05267841
TE4_4 -0.193357942 -0.08014715
TE5_5  0.066016184 -0.22641026
TE6_6 -0.121422346 -0.10518788
TY1    0.026969992  0.01224442
TY2   -0.043993344  0.01183434
TY3   -0.026753041  0.16427987
TY4    0.016808327 -0.05758485
TY5    0.012532729  0.25837995
TY6    0.054039482  0.00852871
> 
> 
> 
> cleanEx()
> nameEx("summaryShort")
> ### * summaryShort
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: summaryShort
> ### Title: Provide short summary of an object.
> ### Aliases: summaryShort summaryShort-methods summaryShort,ANY-method
> ###   summaryShort,vector-method summaryShort,matrix-method
> ###   summary,SimFreeParam-method summary,SimLabels-method
> ###   summary,MatrixSet-method summary,SimRSet-method
> 
> ### ** Examples
> 
> u89 <- simUnif(0.8, 0.9)
> loading <- matrix(0, 6, 2)
> loading[1:3, 1] <- NA
> loading[4:6, 2] <- NA
> loadingValues <- matrix(0, 6, 2)
> LX <- simMatrix(loading, "u89")
> summaryShort(LX)
     [,1]     [,2]    
[1,] "NA:u89" "0"     
[2,] "NA:u89" "0"     
[3,] "NA:u89" "0"     
[4,] "0"      "NA:u89"
[5,] "0"      "NA:u89"
[6,] "0"      "NA:u89"
> 
> 
> 
> cleanEx()
> nameEx("symMatrix")
> ### * symMatrix
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: symMatrix
> ### Title: Create symmetric simMatrix that save free parameters and
> ###   starting values, as well as fixed values
> ### Aliases: symMatrix
> 
> ### ** Examples
> 
> latent.cor <- matrix(NA, 3, 3)
> diag(latent.cor) <- 1
> PH <- symMatrix(latent.cor, 0.5)
> 
> u46 <- simUnif(0.4, 0.6)
> factor.cor <- matrix(NA, 4, 4)
> diag(factor.cor) <- 1
> factor.cor.start <- matrix("u46", 4, 4)
> factor.cor.start[1, 2] <- factor.cor.start[2, 1] <- "0.5"
> PS <- symMatrix(factor.cor, factor.cor.start)
> 
> 
> 
> ### * <FOOTER>
> ###
> cat("Time elapsed: ", proc.time() - get("ptime", pos = 'CheckExEnv'),"\n")
Time elapsed:  63.13 0.36 63.63 NA NA 
> grDevices::dev.off()
null device 
          1 
> ###
> ### Local variables: ***
> ### mode: outline-minor ***
> ### outline-regexp: "\\(> \\)?### [*]+" ***
> ### End: ***
> quit('no')
