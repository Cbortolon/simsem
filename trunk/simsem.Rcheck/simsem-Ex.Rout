
R version 2.14.1 (2011-12-22)
Copyright (C) 2011 The R Foundation for Statistical Computing
ISBN 3-900051-07-0
Platform: i386-pc-mingw32/i386 (32-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> pkgname <- "simsem"
> source(file.path(R.home("share"), "R", "examples-header.R"))
> options(warn = 1)
> options(pager = "console")
> library('simsem')
Loading required package: lavaan
This is lavaan 0.4-12
lavaan is BETA software! Please report any bugs.
Loading required package: MASS
Loading required package: Amelia
Loading required package: foreign
## 
## Amelia II: Multiple Imputation
## (Version 1.5-5, built: 2011-11-29)
## Copyright (C) 2005-2012 James Honaker, Gary King and Matthew Blackwell
## Refer to http://gking.harvard.edu/amelia/ for more information
##
> 
> assign(".oldSearch", search(), pos = 'CheckExEnv')
> cleanEx()
> nameEx("SimData-class")
> ### * SimData-class
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: SimData-class
> ### Title: Class '"SimData"'
> ### Aliases: SimData-class run,SimData-method summary,SimData-method
> ### Keywords: classes
> 
> ### ** Examples
> 
> showClass("SimData")
Class "SimData" [package "simsem"]

Slots:
                                                                       
Name:     modelType            n        param      misspec     equalCon
Class:    character      numeric       SimSet   SimMisspec  SimEqualCon
                                             
Name:  conBeforeMis  misfitBound      maxDraw
Class:      logical       vector      numeric
> loading <- matrix(0, 6, 2)
> loading[1:3, 1] <- NA
> loading[4:6, 2] <- NA
> loadingValues <- matrix(0, 6, 2)
> loadingValues[1:3, 1] <- 0.7
> loadingValues[4:6, 2] <- 0.7
> LX <- simMatrix(loading, loadingValues)
> latent.cor <- matrix(NA, 2, 2)
> diag(latent.cor) <- 1
> PH <- symMatrix(latent.cor, 0.5)
> error.cor <- matrix(0, 6, 6)
> diag(error.cor) <- 1
> TD <- symMatrix(error.cor)
> CFA.Model <- simSetCFA(LY = LX, PS = PH, TE = TD)
> SimData <- simData(200, CFA.Model)
> summary(SimData)
DATA OBJECT
Model Type
[1] "CFA"
Sample Size
[1] 200
========= Parameters Set ============
Number of free parameters =  48 
=====================================
Adding Misspecification?
[1] "No"
Adding Constraint?
[1] "No"
Maximum Random Sampling Parameters
[1] 100
> run(SimData)
               y1          y2           y3           y4           y5
1   -0.8046111752 -1.07631426  0.057240091 -0.902034704 -0.420696312
2    0.1845661447 -1.52544257 -0.596478518 -0.359547670  0.653999999
3   -0.9817757401 -1.00005564 -1.872679879  0.547026083  0.455882380
4    1.5595220347  0.98242830  1.129602919  1.133219607  0.772021261
5    1.1845054563  1.29072791  1.312650672 -0.614537216 -1.246834410
6   -2.4256861989 -0.52392194 -2.119349836  0.801628661  0.447938098
7   -0.8026802073 -0.01219081  0.886934803  0.875174982  0.264578196
8    0.0564317783  1.26623289 -0.572452230  0.960278147  1.193499939
9    1.4678439134  0.51404715 -0.801627869 -0.485880803  1.284678377
10  -0.2801358104 -0.93156744 -0.101680165  0.319593667 -1.065874756
11   1.1792641445  1.32167608  0.774530358  1.177029449  0.997148254
12   0.2512832851  0.06420740 -0.103676627  0.112671948  1.030177610
13  -0.5562904822  0.67456460 -0.825001496 -1.216956251  0.177777654
14  -1.7846349002  0.36228793 -1.174535795 -1.811801024 -3.445755945
15   1.8844565665 -0.52207420 -0.442167956  1.403236121  0.909469669
16  -0.9450853050 -0.62362148 -0.598801614  0.506571666  1.772916583
17  -0.0830153404  0.47058001  0.001676739 -0.684422114  0.600780179
18   0.0665950754  2.43186233  1.118947182  0.128773188 -0.760007378
19   0.0622396276  0.98627135 -0.268915311  1.547982009 -0.376082232
20   0.3419481062 -0.62487103  1.542539632 -0.535314198  1.106542087
21   1.1985782264  1.64208105  1.382432812 -1.009471874  0.262105365
22  -0.4293510968  0.51589042  1.488932512  1.073395543  0.686955393
23   1.4200986282 -0.52866733  0.120390484 -0.224580141 -0.155971454
24  -0.0705491629 -2.01186143 -1.466232141 -0.516212641 -2.100533772
25   1.3466283454  0.60675665  0.877981746 -0.444207704  0.161542306
26  -1.6017242717  0.05340869 -1.029065346 -0.120621102  1.478862439
27   0.4259802426  0.47192914 -0.759798041  0.564568197 -1.367560169
28  -0.2859007992 -0.69993528  0.211832132 -1.088983714 -0.934571001
29  -0.6776384472  0.42699962 -0.983766494  0.031678502 -1.051352021
30   0.9965694076 -0.44682106 -0.065970695  0.757690575  0.134087170
31   0.6689516258  1.98413121  1.435988048  1.633887657 -0.473877154
32   0.9586771234  1.49374938  1.288041369 -1.540482364 -0.355343010
33   0.1560436176  1.10926142  0.392293079  0.935218649 -0.058056466
34  -0.3087277895 -0.15282272 -0.426666197  0.195158955 -0.036496714
35  -1.7789156572 -0.98729223  0.068857396 -1.217763027 -0.696035136
36  -0.5864213022 -0.35447832  0.237590139 -0.099461109  0.126664453
37  -0.0898260271 -0.68612524 -0.786141050 -0.398156801  1.353958806
38   0.8217591672 -0.08614542  0.766062129 -0.546250077 -0.488540376
39  -0.2474624326 -0.33841511  1.306959552  1.599221517  0.449041771
40   0.7983124231  0.42443623  0.324676254  0.051605190  0.279760722
41  -1.7601828800 -0.17478985  0.636370911  0.685977001  0.966594210
42  -0.9237056523 -0.61644578 -0.384318965 -0.850917714 -0.059579365
43   0.8038108019  0.56130305 -0.264011888  0.753217636  2.033786377
44   0.3159326754  1.43198066  0.576268373 -0.529722808  0.191627241
45  -0.9343564190 -1.97445459 -0.070394714 -0.052486983 -0.163876606
46  -0.3557151440  0.37385211  1.287462437  0.427256978 -2.405817849
47   1.0826913708 -0.14199912  0.539542024  0.834912411 -0.077255382
48  -0.4128566850  0.99915976  1.314020529  0.728431705  0.382915479
49  -0.2159206218 -0.08425936  0.300475629 -0.404686197 -1.002621819
50   0.0619421753  0.10801341  0.213627927  2.446351686  0.398732807
51   0.2266293618  0.14144549  0.249164102 -0.196265932  0.872450831
52  -1.0308154924 -0.53990520 -0.220796272  0.198478361 -0.141982148
53   1.2683024818  0.39656652 -0.881286761  0.487211392 -0.493010313
54  -1.3673482061 -1.43718724  0.863880904 -0.053273932 -2.633403079
55   0.8680994051  0.18657616  0.886713345  2.102925503  0.586414579
56  -0.9307629249  1.71012216  1.650778523  1.847777398  1.440036193
57   0.8774790752  0.24183113  1.423608111 -1.670040644 -1.577749788
58  -0.6624745357 -0.70045557 -1.526864957  0.679171384 -1.585188619
59  -0.3115225525 -0.39649198  1.345648313  1.168487087 -0.063684947
60   0.4692793488  0.14865334 -0.309322773 -0.644453020 -0.222829112
61   1.2892761705  2.28797282 -0.030300470  2.318689073  2.371266377
62   0.7474805718 -0.86739494  0.572644252 -1.397647415  0.947232979
63   0.1074837636  0.23516007  1.437836622 -0.395392082  0.343439154
64  -0.9973652349  0.28581016 -0.403641569  0.063348932  0.507349406
65  -2.3727742064 -0.12214896 -1.355017126  0.340711700  0.515758889
66  -0.2499670986  0.98097458 -0.719063975  0.166783796  1.083750981
67  -1.7929329060 -0.54391751 -0.728692900 -0.963340483 -1.668545907
68   1.7767803978  2.40069567  0.405078207 -0.086200536 -0.040118010
69   0.2180282342  0.64520721 -0.101585430 -0.902103698  0.613982299
70   3.1339604178  1.26386190  1.270940677  0.330911216  1.352122921
71  -0.1257981004  0.19288365  1.246361634  0.844417864  0.700968703
72   0.0405369879 -0.52283621 -1.489348413  0.610455173 -0.660701068
73   0.4753416652  1.02396214  0.897286731  0.058406799 -0.300652676
74  -2.6896121089 -1.59271306 -1.222983423  0.344323800  0.512292304
75  -0.5459721996 -1.94441311 -0.252701665 -1.579627336 -0.616562516
76  -1.1562980910  0.53761509 -0.337667527  1.517142044  0.380359620
77   0.0461756079  1.83820458  0.349274278 -1.530174328 -1.058826095
78  -0.8394525634  0.77029198 -0.941235045  0.261422316  0.930959116
79   0.7735762697  0.28270783  0.892474553 -1.215758812 -0.010540536
80  -1.4055526947 -0.52053557 -0.520562254  0.044642182 -0.157227791
81   0.0876926804 -1.18869383 -0.590667903 -0.082211472 -0.797296923
82  -0.5601784912  0.44057418  0.403722279  0.466357336 -0.376413513
83   0.3477014913 -0.06491811  0.284962012  1.689528038  1.168464251
84  -0.5967183670 -0.86520775 -0.654419440 -1.123594100 -1.395526630
85   0.0069378021  0.84721822  1.137900497 -1.112708601  1.463669222
86   0.3724059029  1.01539418  0.652138527 -1.521239258  1.463466079
87   0.6846273936  0.56286702  1.810996943  0.482202529 -0.151856036
88  -0.0311431505 -0.72944827 -1.144921717  0.904928981  0.648768719
89   1.0222330491 -0.62944675 -0.238754397  1.487154193 -0.671822888
90  -0.8816211801 -0.12456913  0.171591870  0.394559407  0.930739885
91   0.4776675677 -1.35811178  0.318737663  0.100454326 -0.900609424
92   0.5619952735  0.28459860  1.076601552 -0.341991755  1.616954519
93  -0.4302874145  1.27019273  1.168170512  1.557765290  1.243988142
94   0.6633580217  1.34215570  1.356621377 -0.263951372 -0.447798728
95   0.4263893431  0.15549424  0.190076245 -0.295866896  3.518420142
96   0.3246717250  1.38681851 -0.768171745  1.039826748  0.143232267
97  -2.5689220583 -1.45780834  0.404270832 -0.646725550 -0.921340265
98  -0.3710570294 -1.57466459 -0.516409377  0.770443426  0.180590691
99  -0.5183829432 -0.46112702 -1.422710376 -1.224364080 -1.660193778
100 -0.3242586072 -0.27507165  0.061903789  0.026471359 -1.025248110
101 -1.2609503126 -0.70486111 -0.507378816 -0.134338565 -0.713494841
102  1.6045848173  0.60924706 -0.697639180 -0.344958469 -0.404246901
103 -1.4485630206 -2.27844364 -0.805233695  1.013196987 -0.073891149
104  0.2338258937  0.46830952  0.141031764 -0.155313724 -0.573504474
105 -1.8486311941 -1.05098556 -0.681860735 -0.176024577  0.950334139
106 -0.3283041153  0.65701945  1.171210441  0.935081261  1.930076202
107 -0.4343632529  1.31937642  0.447955703  1.392323333  0.392224341
108  0.0674252899  1.01933937 -0.025137643  1.028065609  0.944519645
109  1.4958343848  0.37488399  0.304696561 -0.873789913  0.533442943
110  2.0394896364  0.30096984  0.612835814  1.810409246  0.430684020
111  0.0835734175 -1.31707959 -1.475602012  1.466097582 -0.788365606
112  0.4470846579 -1.01873984 -0.495361215  0.212717517 -0.837058048
113  1.0421208295  1.12808265  1.340812154  1.227405799 -0.279976857
114 -0.8191013853 -0.13248490  0.534621218 -0.705433497 -0.677074351
115 -0.3304242784  0.61422254 -0.653211318  0.188324563  0.594246093
116 -2.1377502962 -0.48476208  0.368730176  0.132756757 -0.035140871
117 -0.2091200503  0.51026003 -0.285516322 -0.207461500 -0.639311797
118  0.8120153139 -0.33083480 -0.879075141 -0.472450058  0.233542202
119  1.0037847512  0.94540893  0.816626405 -0.048919084 -0.362482798
120  0.2203948484  0.15391842 -1.407684549 -0.509088729  1.504459686
121 -0.6192498466 -1.03471810 -1.154408762  0.714918955  0.347507468
122 -0.2057194149  0.53261884  0.337607591  1.595378589  2.785859126
123  0.4925496963 -0.57740847 -1.461516102  0.694755988  0.118534216
124  0.6251177511  1.09485804  0.472859291 -1.176771049 -1.401884671
125 -0.7788250912 -0.72241080  0.640321939  0.259500704  0.271035423
126  0.2752190803  0.97111113 -0.431477492  1.575331722 -0.270268057
127 -0.7993781735  0.64725055  0.486615927 -0.150713967 -0.722440477
128  0.2360389602  0.98782555 -1.532796860 -0.708888654  0.493080439
129  0.1947696306  0.11808138 -0.507710259 -1.208304904 -0.147525746
130 -0.7543222810 -0.19353856 -0.634743741  0.035831357  0.323995464
131  0.0364777409 -0.53386704  1.065800505  0.676150961 -0.218355513
132  0.8017294700  0.54418123 -0.390072598 -1.768752540 -0.230635681
133 -0.1410752497  1.25316483  0.462638265  0.153334836  0.176475025
134 -2.3272132666 -0.54815346 -2.053407810 -0.293892859 -1.611490462
135  0.5858578121  0.11172781  0.377878733 -0.851176588  0.988485624
136 -1.4983117909 -1.96235749 -0.641304054 -0.073375972 -0.013461864
137 -0.1646270615 -0.23485781 -1.501468913  0.009024364  0.419806255
138 -0.5619473342 -0.02768205 -0.482473615 -1.187471159 -0.518049014
139  0.4574666681 -1.27761038 -0.014340647 -0.989863927 -0.622180301
140  0.4426599681  0.48762869 -0.321245469 -0.192987122 -0.788140838
141 -2.8811053614 -1.42868009 -0.564172127 -0.628849626 -1.152895413
142  0.5271137018  1.36509652  1.935469929  0.197421149  0.724183949
143 -0.5480205931 -0.90477457 -2.243654952 -1.306595998 -0.361784707
144  0.2866214528 -1.00184073  0.175414431 -0.441713697 -0.383476342
145 -0.2989347840  0.13679441  1.005283550 -2.565044314 -1.797382918
146 -0.6470409833  0.68657133  0.370569944 -1.016973036 -0.771201489
147  1.5921729145  1.14847073  0.219549473  2.271368349  2.249582797
148 -0.3535601070  0.39382370  0.256236655 -0.210922889  1.176223128
149 -0.0952305565 -2.06632217 -1.531996599  0.693599814 -1.530103270
150 -0.9645143145 -2.12707819 -2.798577619 -0.503637358  0.143559577
151 -1.2918879747  0.91633051 -0.730099825  0.787046794  1.787729292
152 -0.8148407921 -0.03081609 -0.117329110  0.443054460  0.168483546
153 -1.0294216102 -0.50399120  0.372293237  0.693138139 -0.224508980
154 -0.1924169740 -0.09908451 -1.320520269 -0.509440363 -0.694841427
155 -2.5265454879 -1.27946648 -1.352039565 -1.148775994  0.203648034
156 -2.2110494521  0.14573249 -0.919260670  0.036363087 -0.579003968
157  2.4735885421  0.61666372  0.531618686  1.488585591 -0.225956474
158  0.2162645870 -0.54908073 -0.708231494 -0.964619393 -0.007419292
159  0.4180527879 -0.21528624 -0.374285226 -1.574637226 -2.193669201
160  0.8919064146  1.94692248  1.200315010  1.321480918 -0.023869545
161  1.4402861272  1.88816481  1.072004515 -0.257825877 -1.654741053
162 -0.3559376051 -1.36925712 -0.552074949  0.443181009  0.381248197
163  0.1850013016  1.37669548  1.442879015 -0.112713577 -0.511125692
164  0.7793452058  0.81957506  0.777513351  0.893118059  1.233296932
165 -0.4166360034  1.38341189 -1.985050845 -0.300849248 -1.246378362
166  2.0642791182  1.50880012  0.042295782  0.974909540  1.668061906
167 -0.0286944756 -1.10798577 -0.304971388  0.371839892  0.695168802
168 -0.5409816332 -1.21318100 -1.896672999 -0.805399936 -1.752443502
169  0.2196002599  0.73387505 -0.462463298  0.031301880 -0.174801555
170  0.0600692946  1.27654738  0.945230913 -0.996341490 -0.309708381
171  1.5526226918  1.99522573  1.640966864  1.986526514  1.258393330
172 -1.0490627965  0.57130075  0.311488098 -0.186675402  0.922119138
173  1.2004765891  0.23307498  0.613485831 -0.621354992 -0.254397663
174  0.8737714320 -1.13345846  0.198064656  0.116251992 -0.642997079
175  0.2259362154 -0.06020410  0.755926128 -1.435701850 -1.902425090
176 -0.5762347990 -0.39455036  0.912061332 -0.612576865 -0.191466199
177  1.0775836982  0.35578953 -0.019971448  0.241829138  0.983677144
178  1.5402940210  0.94742488  1.899564555  0.202650437  2.230174463
179  0.5957099263  1.29277865  0.408829149  1.887220723  0.921820500
180  0.6880409335 -0.18999702 -0.470440600  2.255135472  1.249289936
181 -1.4568005312 -2.15304083  0.082852937  0.404839140 -0.848713961
182  0.8180822063 -0.12492291 -0.226457986  1.039093890  1.264353013
183  0.0085350487  0.95009161  0.746813527 -1.199411785  0.065115291
184 -0.8939641011 -0.89628217 -1.395312079 -1.851973973  0.048860077
185  0.3770611506 -0.82593063 -0.077827629  0.609440949  1.228229304
186 -0.7712881725 -0.87282257  1.400977232 -0.555748453  0.131805493
187  2.1915617773  1.67986476  1.994084339  0.036401333 -0.433220880
188 -0.7643969337 -0.50832649 -0.744517622 -0.632476173 -0.201607745
189  1.0819301482 -0.71909962  1.372228899 -1.310534937 -0.758520258
190 -0.7123421364  0.32300913 -0.371079576 -0.492745933 -0.907730046
191 -0.7189983465 -1.27185795 -0.175885231  0.640603288  0.103894240
192  0.7583172892 -0.09565068 -0.692697098  0.531640957  0.215267582
193 -0.9703555701 -0.52581251 -1.472368273 -0.786463793  0.777350569
194  1.0112459653 -0.46863794  0.714125751  1.361975581  0.769821816
195 -0.9182959293  0.24637287 -1.615501570  0.346672013 -1.458537023
196 -0.9252478103  0.14189828 -0.068395199 -1.563108628 -0.992011965
197  0.2405863856  0.28512879  0.205783681  2.106739348  1.000298173
198 -1.4338046383 -0.14703480 -0.530694953 -0.406961890 -0.991616177
199 -1.0448672138  2.16900693  0.684512689 -0.615041648 -0.352205730
200  0.0003029223 -0.56268985 -1.389024800  0.483170167 -0.419781339
               y6
1    0.6179941475
2    2.3841030920
3   -0.5210671610
4    0.8618983254
5   -0.5965903054
6    0.5079092666
7    0.7554892060
8    0.0759523755
9    0.3448429821
10   0.8270903426
11   0.6520323544
12   0.2187776835
13  -0.7614751918
14  -1.0842821589
15   1.3073990960
16  -0.2933358142
17  -0.3709447897
18   0.8232348603
19   1.3630249192
20   0.5661929320
21   0.2333472427
22  -0.1790524497
23  -0.3303194155
24  -1.8638077984
25  -0.0470305668
26   0.9925991065
27   0.0360763824
28  -3.1385262267
29   0.3242235161
30   0.3112931851
31   0.2346677795
32  -2.2595027268
33  -0.9700838668
34   0.5123926294
35  -0.9467838132
36  -0.9988481086
37  -0.9850983251
38  -0.7062794614
39   1.6704530438
40   1.2014530657
41  -1.0180009746
42   1.8123776350
43  -1.0751010066
44   0.2606550759
45   0.4156912640
46  -2.1825506882
47  -0.7664067085
48   0.0901951194
49   0.9535732595
50   0.3275596205
51   0.3133662035
52  -0.7351711529
53   0.5990055014
54   0.0691236038
55   1.1530796520
56   2.2751153608
57  -0.7772657885
58  -0.4184061207
59   0.5570021844
60   0.0135800519
61   1.4562347698
62  -0.1606915241
63   1.0553206971
64   0.6575174650
65  -0.0064457931
66  -0.5004960987
67  -1.5875407391
68   1.4588715114
69   0.1450152233
70   1.4170530566
71  -0.9396358177
72  -0.8435121790
73   0.3106001720
74   0.8785929780
75  -0.1204969159
76   0.2351512846
77  -1.4338187045
78  -0.1775245098
79  -0.4224112349
80   0.1798781788
81   0.2759808441
82  -0.9196544711
83   1.3291241867
84  -1.5137821934
85   0.0542014781
86  -0.6383486949
87   0.9019258152
88  -0.8758974120
89   0.5240649829
90   0.5873331583
91  -0.8277965079
92   1.6769016214
93  -0.1263431034
94   0.1757383613
95   2.4100851469
96   0.1277224182
97   0.0380878951
98  -0.8026523328
99   0.3441348793
100 -0.3744830375
101  0.8171696350
102 -0.5970039946
103 -0.0836246991
104  0.5234689281
105  0.1652072182
106  2.7678423082
107 -0.2248226632
108  0.6393303014
109 -0.2844623559
110  1.5950208131
111 -0.5345115647
112 -0.1718814698
113  1.3223714503
114 -0.8267943193
115 -1.2501643665
116  0.5707592534
117 -0.4603694843
118 -0.4897231475
119 -0.3598309982
120 -0.6777209643
121 -0.2961381560
122  0.3748771023
123 -0.1329765395
124 -0.3388851746
125 -0.0740007446
126  0.7564669876
127  0.2417537936
128  0.3728457658
129 -1.2005512461
130 -0.0860053439
131 -0.7833938660
132 -1.3332793865
133  0.2406272761
134  0.7057869198
135  0.0245208704
136 -2.0124343197
137  0.2573572724
138  0.6454394047
139 -0.1853828197
140  0.1424444177
141 -1.0708189839
142 -0.0004923891
143 -1.3551431460
144 -0.5058542361
145 -0.9846668092
146 -1.6522967359
147  0.9428419453
148 -1.1915902455
149 -0.6615683484
150 -0.3713791201
151  0.3478756064
152  0.2765388848
153 -0.5912612861
154 -0.9346831386
155  0.0996599492
156 -0.8123513719
157 -0.8482965984
158 -0.4944002434
159 -1.6478423913
160  2.2078647051
161 -0.7721463282
162  0.4896399583
163  1.8913933741
164 -0.9251694736
165  0.0661836225
166  2.6456754802
167 -0.6546683930
168  0.4592944235
169 -0.9303217232
170 -0.1381548765
171  0.8814669819
172 -0.1421422073
173  0.6732022888
174  0.2769714851
175  1.0684121652
176  0.7226096161
177  0.5400740761
178  1.5557614885
179 -0.9597134621
180  1.3431949204
181 -0.9988654731
182  1.2009401176
183  0.3164919950
184 -0.9332768354
185  0.7919200863
186  0.0263290420
187  0.4425107961
188 -0.2406488019
189 -1.4023763935
190 -1.5769701417
191  0.7074369687
192  0.9056765564
193  0.0242501277
194 -0.0370726502
195 -1.4766378477
196 -0.8228911709
197  1.9781018188
198 -0.5899365055
199  0.8213608428
200  0.3499667201
> 
> 
> 
> cleanEx()
> nameEx("SimDataOut-class")
> ### * SimDataOut-class
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: SimDataOut-class
> ### Title: Class '"SimDataOut"'
> ### Aliases: SimDataOut-class summary,SimDataOut-method
> ### Keywords: classes
> 
> ### ** Examples
> 
> showClass("SimDataOut")
Class "SimDataOut" [package "simsem"]

Slots:
                                                                       
Name:     modelType         data        param     paramOut   misspecOut
Class:    character   data.frame SimFreeParam      SimRSet      SimRSet
                   
Name:      equalCon
Class:  SimEqualCon
> loading <- matrix(0, 6, 1)
> loading[1:6, 1] <- NA
> LX <- simMatrix(loading, 0.7)
> PH <- symMatrix(diag(1))
> TD <- symMatrix(diag(6))
> CFA.Model <- simSetCFA(LY = LX, PS = PH, TE = TD)
> SimData <- simData(500, CFA.Model)
> SimModel <- simModel(CFA.Model)
> Data <- run(SimData, dataOnly=FALSE)
> Result <- run(SimModel, Data)
> summary(Data)
DATA RESULT OBJECT
Model Type
[1] "CFA"
Sample Size
[1] 500
Data Summary       y1                  y2                 y3                  y4          
 Min.   :-2.828607   Min.   :-3.37032   Min.   :-2.475905   Min.   :-2.75821  
 1st Qu.:-0.625083   1st Qu.:-0.66606   1st Qu.:-0.716538   1st Qu.:-0.64799  
 Median :-0.018824   Median : 0.04373   Median :-0.077007   Median : 0.06414  
 Mean   : 0.002646   Mean   : 0.01874   Mean   :-0.009583   Mean   : 0.03211  
 3rd Qu.: 0.623182   3rd Qu.: 0.66428   3rd Qu.: 0.793210   3rd Qu.: 0.64480  
 Max.   : 3.523274   Max.   : 2.76574   Max.   : 3.186076   Max.   : 3.85754  
       y5                 y6          
 Min.   :-3.06740   Min.   :-2.64395  
 1st Qu.:-0.65420   1st Qu.:-0.63098  
 Median : 0.03630   Median :-0.01769  
 Mean   : 0.04269   Mean   : 0.01642  
 3rd Qu.: 0.76295   3rd Qu.: 0.71683  
 Max.   : 2.90336   Max.   : 2.95779  
============Parameter Values================
============================================
> 
> 
> 
> cleanEx()
> nameEx("SimEqualCon-class")
> ### * SimEqualCon-class
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: SimEqualCon-class
> ### Title: Class '"SimEqualCon"'
> ### Aliases: SimEqualCon-class summary,SimEqualCon-method
> ### Keywords: classes
> 
> ### ** Examples
> 
> showClass("SimEqualCon")
Class "SimEqualCon" [package "simsem"]

Slots:
                          
Name:        con modelType
Class:      list character

Known Subclasses: "NullSimEqualCon"
> constraint1 <- matrix(1, 3, 2)
> constraint1[,1] <- 1:3
> rownames(constraint1) <- rep("LY", 3)
> constraint2 <- matrix(2, 3, 2)
> constraint2[,1] <- 4:6
> rownames(constraint2) <- rep("LY", 3)
> constraint3 <- matrix(3, 2, 2)
> constraint3[,1] <- 7:8
> rownames(constraint3) <- rep("LY", 2)
> equal.loading <- simEqualCon(constraint1, constraint2, constraint3, modelType="SEM")
> summary(equal.loading)
CONSTRAINT OBJECT
Model Type
[1] "SEM"
-------------Constraint----------------
1.
   Group Row Column
LY    NA   1      1
LY    NA   2      1
LY    NA   3      1
---------------------------------------
2.
   Group Row Column
LY    NA   4      2
LY    NA   5      2
LY    NA   6      2
---------------------------------------
3.
   Group Row Column
LY    NA   7      3
LY    NA   8      3
---------------------------------------
> 
> 
> 
> cleanEx()
> nameEx("SimMatrix-class")
> ### * SimMatrix-class
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: SimMatrix-class
> ### Title: Class '"SimMatrix"' (Random parameters matrix)
> ### Aliases: SimMatrix-class run,SimMatrix-method
> ###   summaryShort,SimMatrix-method summary,SimMatrix-method
> ### Keywords: classes
> 
> ### ** Examples
> 
> showClass("SimMatrix")
Class "SimMatrix" [package "simsem"]

Slots:
                    
Name:    free  param
Class: matrix matrix

Known Subclasses: 
Class "SymMatrix", directly
Class "NullSimMatrix", directly
Class "NullSymMatrix", by class "SymMatrix", distance 2
> 
> loading <- matrix(0, 6, 2)
> loading[1:3, 1] <- NA
> loading[4:6, 2] <- NA
> loadingValues <- matrix(0, 6, 2)
> loadingValues[1:3, 1] <- 0.7
> loadingValues[4:6, 2] <- 0.7
> LX <- simMatrix(loading, loadingValues)
> summary(LX)
[1] "Random Full Matrix Object."
[1] "Free/Fixed Parameters:"
     [,1] [,2]
[1,]   NA    0
[2,]   NA    0
[3,]   NA    0
[4,]    0   NA
[5,]    0   NA
[6,]    0   NA
[1] "Parameter/Starting Values:"
     [,1]  [,2] 
[1,] "0.7" ""   
[2,] "0.7" ""   
[3,] "0.7" ""   
[4,] ""    "0.7"
[5,] ""    "0.7"
[6,] ""    "0.7"
> run(LX)
     [,1] [,2]
[1,]  0.7  0.0
[2,]  0.7  0.0
[3,]  0.7  0.0
[4,]  0.0  0.7
[5,]  0.0  0.7
[6,]  0.0  0.7
> 
> n65 <- simNorm(0.6, 0.05)
> LY <- simMatrix(loading, "n65")
> summary(LY)
[1] "Random Full Matrix Object."
[1] "Free/Fixed Parameters:"
     [,1] [,2]
[1,]   NA    0
[2,]   NA    0
[3,]   NA    0
[4,]    0   NA
[5,]    0   NA
[6,]    0   NA
[1] "Parameter/Starting Values:"
     [,1]  [,2] 
[1,] "n65" ""   
[2,] "n65" ""   
[3,] "n65" ""   
[4,] ""    "n65"
[5,] ""    "n65"
[6,] ""    "n65"
> run(LY)
          [,1]      [,2]
[1,] 0.5686773 0.0000000
[2,] 0.6091822 0.0000000
[3,] 0.5582186 0.0000000
[4,] 0.0000000 0.6797640
[5,] 0.0000000 0.6164754
[6,] 0.0000000 0.5589766
> 
> u34 <- simUnif(0.3, 0.4)
> LY <- adjust(LY, "u34", c(2, 1))
> summary(LY)
[1] "Random Full Matrix Object."
[1] "Free/Fixed Parameters:"
     [,1] [,2]
[1,]   NA    0
[2,]   NA    0
[3,]   NA    0
[4,]    0   NA
[5,]    0   NA
[6,]    0   NA
[1] "Parameter/Starting Values:"
     [,1]  [,2] 
[1,] "n65" ""   
[2,] "u34" ""   
[3,] "n65" ""   
[4,] ""    "n65"
[5,] ""    "n65"
[6,] ""    "n65"
> run(LY)
          [,1]      [,2]
[1,] 0.6243715 0.0000000
[2,] 0.3769841 0.0000000
[3,] 0.5997116 0.0000000
[4,] 0.0000000 0.7202327
[5,] 0.0000000 0.6381797
[6,] 0.0000000 0.5600495
> summaryShort(LY)
     [,1]     [,2]    
[1,] "NA:n65" "0"     
[2,] "NA:u34" "0"     
[3,] "NA:n65" "0"     
[4,] "0"      "NA:n65"
[5,] "0"      "NA:n65"
[6,] "0"      "NA:n65"
> 
> 
> 
> cleanEx()
> nameEx("SimMissing-class")
> ### * SimMissing-class
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: SimMissing-class
> ### Title: Class '"SimMissing"'
> ### Aliases: SimMissing-class
> ### Keywords: classes
> 
> ### ** Examples
> 
> # No Example
> 
> 
> 
> cleanEx()
> nameEx("SimMisspec-class")
> ### * SimMisspec-class
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: SimMisspec-class
> ### Title: Class '"SimMisspec"'
> ### Aliases: SimMisspec-class run,SimMisspec-method
> ### Keywords: classes
> 
> ### ** Examples
> 
> showClass("SimMisspec")
Class "SimMisspec" [package "simsem"]

Slots:
                                                                            
Name:  modelType        LY        TE       VTE        PS       VPS        BE
Class: character SimMatrix SymMatrix SimVector SymMatrix SimVector SimMatrix
                                                                            
Name:         TY        AL        ME        MY        VE        VY        LX
Class: SimVector SimVector SimVector SimVector SimVector SimVector SimMatrix
                                                                            
Name:         TD       VTD        PH        GA        TX        KA        MX
Class: SymMatrix SimVector SymMatrix SimMatrix SimVector SimVector SimVector
                                    
Name:        VPH        VX        TH
Class: SimVector SimVector SimMatrix

Extends: "SimSet"

Known Subclasses: "NullSimMisspec"
> n01 <- simNorm(0, 0.1)
> error.cor.Mis <- matrix(NA, 6, 6)
> diag(error.cor.Mis) <- 1
> TD.Mis <- symMatrix(error.cor.Mis, "n01")
> CFA.Model.Mis <- simMisspecCFA(TD=TD.Mis)
> 
> 
> 
> cleanEx()
> nameEx("SimModel-class")
> ### * SimModel-class
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: SimModel-class
> ### Title: Class '"SimModel"'
> ### Aliases: SimModel-class run,SimModel-method summary,SimModel-method
> ### Keywords: classes
> 
> ### ** Examples
> 
> showClass("SimModel")
Class "SimModel" [package "simsem"]

Slots:
                                                                       
Name:     modelType        param        start     equalCon      package
Class:    character SimFreeParam      SimRSet  SimEqualCon    character
> loading <- matrix(0, 6, 2)
> loading[1:3, 1] <- NA
> loading[4:6, 2] <- NA
> loadingValues <- matrix(0, 6, 2)
> loadingValues[1:3, 1] <- 0.7
> loadingValues[4:6, 2] <- 0.7
> LX <- simMatrix(loading, loadingValues)
> latent.cor <- matrix(NA, 2, 2)
> diag(latent.cor) <- 1
> PH <- symMatrix(latent.cor, 0.5)
> error.cor <- matrix(0, 6, 6)
> diag(error.cor) <- 1
> TD <- symMatrix(error.cor)
> CFA.Model <- simSetCFA(LX = LX, PH = PH, TD = TD)
> SimModel <- simModel(CFA.Model)
> summary(SimModel)
MODEL OBJECT
Model Type
[1] "CFA"
========= Parameters Set ============
Number of free parameters =  27 
=====================================
Adding Constraint?
[1] "No"
Analysis Package
[1] "lavaan"
> 
> 
> 
> cleanEx()
> nameEx("SimModelMIOut-class")
> ### * SimModelMIOut-class
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: SimModelMIOut-class
> ### Title: Class '"SimModelMIOut"'
> ### Aliases: SimModelMIOut-class
> ### Keywords: classes
> 
> ### ** Examples
> 
> showClass("SimModelMIOut")
Class "SimModelMIOut" [package "simsem"]

Slots:
                                                                       
Name:          FMI1         FMI2        param        start     equalCon
Class:      SimRSet      SimRSet SimFreeParam      SimRSet  SimEqualCon
                                                                       
Name:       package         coef          fit           se    converged
Class:    character      SimRSet       vector      SimRSet      logical
                   
Name:    paramValue
Class:      SimRSet

Extends: "SimModelOut"
> 
> 
> 
> cleanEx()
> nameEx("SimModelOut-class")
> ### * SimModelOut-class
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: SimModelOut-class
> ### Title: Class '"SimModelOut"'
> ### Aliases: SimModelOut-class summary,SimModelOut-method
> ### Keywords: classes
> 
> ### ** Examples
> 
> showClass("SimResult")
Class "SimResult" [package "simsem"]

Slots:
                                                                        
Name:   modelType       nRep       coef         se        fit  converged
Class:  character    numeric data.frame data.frame data.frame     vector
                            
Name:  paramValue       seed
Class: data.frame    numeric
> loading <- matrix(0, 6, 1)
> loading[1:6, 1] <- NA
> LX <- simMatrix(loading, 0.7)
> PH <- symMatrix(diag(1))
> TD <- symMatrix(diag(6))
> CFA.Model <- simSetCFA(LY = LX, PS = PH, TE = TD)
> SimData <- simData(500, CFA.Model)
> SimModel <- simModel(CFA.Model)
> Data <- run(SimData)
> Result <- run(SimModel, Data)
> summary(Result)
MODEL ANALYSIS RESULT OBJECT
Fit Indices
            Chi              df          pvalue    baseline.Chi     baseline.df 
          4.178           9.000           0.899        1007.154          15.000 
baseline.pvalue             CFI             TLI             AIC             BIC 
          0.000           1.000           1.008        7677.530        7753.393 
          RMSEA  RMSEA.ci.lower  RMSEA.ci.upper            SRMR 
          0.000           0.000           0.022           0.009 
========= Parameter Estimates and Standard Errors ============
      Estimate    SE      z         p
LY1_1    0.716 0.041 17.432 0.0000000
LY2_1    0.693 0.044 15.905 0.0000000
LY3_1    0.739 0.045 16.412 0.0000000
LY4_1    0.705 0.043 16.232 0.0000000
LY5_1    0.727 0.044 16.399 0.0000000
LY6_1    0.646 0.042 15.446 0.0000000
TE1_1    0.463 0.037 12.540 0.0000000
TE2_2    0.570 0.043 13.332 0.0000000
TE3_3    0.594 0.045 13.093 0.0000000
TE4_4    0.557 0.042 13.181 0.0000000
TE5_5    0.576 0.044 13.100 0.0000000
TE6_6    0.538 0.040 13.530 0.0000000
TY1      0.003 0.044  0.060 0.9522103
TY2      0.019 0.046  0.409 0.6826837
TY3     -0.010 0.048 -0.201 0.8409712
TY4      0.032 0.046  0.699 0.4844290
TY5      0.043 0.047  0.908 0.3638037
TY6      0.016 0.044  0.376 0.7070515
Converged
[1] TRUE
> 
> 
> 
> cleanEx()
> nameEx("SimNorm-class")
> ### * SimNorm-class
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: SimNorm-class
> ### Title: Class "SimNorm"
> ### Aliases: SimNorm-class run,SimNorm-method summary,SimNorm-method
> ### Keywords: classes
> 
> ### ** Examples
> 
> showClass("SimNorm")
Class "SimNorm" [package "simsem"]

Slots:
                      
Name:     mean      sd
Class: numeric numeric

Extends: "VirtualDist"
> n2 <- simNorm(0, 0.2)
> run(n2)
[1] -0.1252908
> summary(n2)
[1] "Random Normal Distribution Object."
[1] "Mean is 0."
[1] "Standard deviation is 0.2."
> 
> 
> 
> cleanEx()
> nameEx("SimResult-class")
> ### * SimResult-class
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: SimResult-class
> ### Title: Class '"SimResult"'
> ### Aliases: SimResult-class summary,SimResult-method
> ### Keywords: classes
> 
> ### ** Examples
> 
> showClass("SimResult")
Class "SimResult" [package "simsem"]

Slots:
                                                                        
Name:   modelType       nRep       coef         se        fit  converged
Class:  character    numeric data.frame data.frame data.frame     vector
                            
Name:  paramValue       seed
Class: data.frame    numeric
> loading <- matrix(0, 6, 1)
> loading[1:6, 1] <- NA
> LX <- simMatrix(loading, 0.7)
> PH <- symMatrix(diag(1))
> TD <- symMatrix(diag(6))
> CFA.Model <- simSetCFA(LY = LX, PS = PH, TE = TD)
> SimData <- simData(500, CFA.Model)
> SimModel <- simModel(CFA.Model)
> # We make the examples running only 50 replications to save time.
> # In reality, more replications are needed.
> Output <- simResult(50, SimData, SimModel)
> summary(Output)
RESULT OBJECT
Model Type
[1] "CFA"
========= Fit Indices Cutoffs ============
           Alpha
Fit Indices      0.1     0.05     0.01    0.001
      Chi     13.471   16.189   20.871   21.811
      AIC   7558.228 7589.376 7619.413 7640.132
      BIC   7634.091 7665.239 7695.275 7715.994
      RMSEA    0.032    0.040    0.051    0.053
      CFI      0.996    0.994    0.990    0.989
      TLI      0.993    0.989    0.983    0.982
      SRMR     0.016    0.017    0.019    0.019
========= Parameter Estimates and Standard Errors ============
      Estimate.Average Estimate.SD Average.SE Power..Not.equal.0. Average.Param
LY1_1            0.699       0.037      0.042                1.00          0.70
LY2_1            0.699       0.039      0.041                1.00          0.70
LY3_1            0.691       0.039      0.042                1.00          0.70
LY4_1            0.700       0.045      0.042                1.00          0.70
LY5_1            0.687       0.046      0.042                1.00          0.70
LY6_1            0.700       0.038      0.042                1.00          0.70
TE1_1            0.506       0.036      0.039                1.00          0.51
TE2_2            0.497       0.041      0.038                1.00          0.51
TE3_3            0.505       0.041      0.038                1.00          0.51
TE4_4            0.502       0.042      0.038                1.00          0.51
TE5_5            0.513       0.050      0.039                1.00          0.51
TE6_6            0.505       0.043      0.039                1.00          0.51
TY1              0.001       0.044      0.045                0.08          0.00
TY2             -0.002       0.044      0.044                0.06          0.00
TY3             -0.001       0.038      0.044                0.04          0.00
TY4              0.001       0.047      0.045                0.04          0.00
TY5              0.000       0.035      0.044                0.02          0.00
TY6              0.002       0.044      0.045                0.02          0.00
      Average.Bias Coverage
LY1_1       -0.001     0.98
LY2_1       -0.001     0.98
LY3_1       -0.009     0.96
LY4_1        0.000     0.94
LY5_1       -0.013     0.92
LY6_1        0.000     0.98
TE1_1       -0.004     0.96
TE2_2       -0.013     0.92
TE3_3       -0.005     0.94
TE4_4       -0.008     0.92
TE5_5        0.003     0.90
TE6_6       -0.005     0.94
TY1          0.001     0.92
TY2         -0.002     0.94
TY3         -0.001     0.96
TY4          0.001     0.96
TY5          0.000     0.98
TY6          0.002     0.98
Number of Replications
[1] 50
Number of Converged Replications
[1] 50
> getCutoff(Output, 0.05)
         Chi          AIC          BIC        RMSEA          CFI          TLI 
1.618917e+01 7.589376e+03 7.665239e+03 3.979597e-02 9.935072e-01 9.891787e-01 
        SRMR 
1.744357e-02 
> 
> 
> 
> cleanEx()
> nameEx("SimSet-class")
> ### * SimSet-class
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: SimSet-class
> ### Title: Class '"SimSet"'
> ### Aliases: SimSet-class run,SimSet-method summary,SimSet-method
> 
> ### ** Examples
> 
> showClass("SimSet")
Class "SimSet" [package "simsem"]

Slots:
                                                                            
Name:  modelType        LY        TE       VTE        PS       VPS        BE
Class: character SimMatrix SymMatrix SimVector SymMatrix SimVector SimMatrix
                                                                            
Name:         TY        AL        ME        MY        VE        VY        LX
Class: SimVector SimVector SimVector SimVector SimVector SimVector SimMatrix
                                                                            
Name:         TD       VTD        PH        GA        TX        KA        MX
Class: SymMatrix SimVector SymMatrix SimMatrix SimVector SimVector SimVector
                                    
Name:        VPH        VX        TH
Class: SimVector SimVector SimMatrix

Known Subclasses: 
Class "NullSimSet", directly
Class "SimMisspec", directly
Class "NullSimMisspec", by class "SimMisspec", distance 2
> 
> loading <- matrix(0, 6, 2)
> loading[1:3, 1] <- NA
> loading[4:6, 2] <- NA
> loadingValues <- matrix(0, 6, 2)
> loadingValues[1:3, 1] <- 0.7
> loadingValues[4:6, 2] <- 0.7
> LX <- simMatrix(loading, loadingValues)
> summary(LX)
[1] "Random Full Matrix Object."
[1] "Free/Fixed Parameters:"
     [,1] [,2]
[1,]   NA    0
[2,]   NA    0
[3,]   NA    0
[4,]    0   NA
[5,]    0   NA
[6,]    0   NA
[1] "Parameter/Starting Values:"
     [,1]  [,2] 
[1,] "0.7" ""   
[2,] "0.7" ""   
[3,] "0.7" ""   
[4,] ""    "0.7"
[5,] ""    "0.7"
[6,] ""    "0.7"
> 
> latent.cor <- matrix(NA, 2, 2)
> diag(latent.cor) <- 1
> PH <- symMatrix(latent.cor, 0.5)
> 
> # Error Correlation Object
> error.cor <- matrix(0, 6, 6)
> diag(error.cor) <- 1
> TD <- symMatrix(error.cor)
> 
> CFA.Model <- simSetCFA(LX = LX, PH = PH, TD = TD)
> summary(CFA.Model)
SET OF MODEL MATRICES
Model Type
[1] "CFA"
-- Endogeneous Variable --

LY: Loading of Indicator.Y on Factor.ETA 
     [,1]     [,2]    
[1,] "NA:0.7" "0"     
[2,] "NA:0.7" "0"     
[3,] "NA:0.7" "0"     
[4,] "0"      "NA:0.7"
[5,] "0"      "NA:0.7"
[6,] "0"      "NA:0.7"

TE: Correlation of Measurement.Error.EPSILON 
     [,1] [,2] [,3] [,4] [,5] [,6]
[1,] "1"  "0"  "0"  "0"  "0"  "0" 
[2,] "0"  "1"  "0"  "0"  "0"  "0" 
[3,] "0"  "0"  "1"  "0"  "0"  "0" 
[4,] "0"  "0"  "0"  "1"  "0"  "0" 
[5,] "0"  "0"  "0"  "0"  "1"  "0" 
[6,] "0"  "0"  "0"  "0"  "0"  "1" 

VY: Variance of Indicator.Y 
[1] "NA:1" "NA:1" "NA:1" "NA:1" "NA:1" "NA:1"

TY: Measurement Intercept of Indicator.Y 
[1] "NA:0" "NA:0" "NA:0" "NA:0" "NA:0" "NA:0"

VPS: Variance of Regression.Residual.PSI 
[1] "1" "1"

PS: Correlation of Regression.Residual.PSI 
     [,1]     [,2]    
[1,] "1"      "NA:0.5"
[2,] "NA:0.5" "1"     

VE: Variance of Factor.ETA 
[1] "1" "1"

AL: Regression Intercept of Factor.ETA 
[1] "0" "0"

ME: mean of Factor.ETA 
[1] "0" "0"
-------------------------- 
> #run(CFA.Model)
> 
> 
> 
> cleanEx()
> nameEx("SimUnif-class")
> ### * SimUnif-class
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: SimUnif-class
> ### Title: Class "SimUnif"
> ### Aliases: SimUnif-class run,SimUnif-method summary,SimUnif-method
> ### Keywords: classes
> 
> ### ** Examples
> 
> showClass("SimUnif")
Class "SimUnif" [package "simsem"]

Slots:
                      
Name:      min     max
Class: numeric numeric

Extends: "VirtualDist"
> u1 <- simUnif(-0.1, 0.1)
> run(u1)
[1] -0.04689827
> summary(u1)
[1] "Random Uniform Distribution Object."
[1] "Minimum is -0.1."
[1] "Maximum is 0.1."
> 
> 
> 
> cleanEx()
> nameEx("SimVector-class")
> ### * SimVector-class
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: SimVector-class
> ### Title: Class '"SimVector"' (Random parameters vector)
> ### Aliases: SimVector-class run,SimVector-method
> ###   summaryShort,SimVector-method summary,SimVector-method
> ### Keywords: classes
> 
> ### ** Examples
> 
> showClass("SimVector")
Class "SimVector" [package "simsem"]

Slots:
                    
Name:    free  param
Class: vector vector

Known Subclasses: "NullSimVector"
> 
> factor.mean <- rep(NA, 2)
> factor.mean.starting <- c(5, 2)
> AL <- simVector(factor.mean, factor.mean.starting)
> run(AL)
[1] 5 2
> summary(AL)
[1] "Random Vector Object."
[1] "Free/Fixed Parameters:"
[1] NA NA
[1] "Parameter/Starting Values:"
[1] "5" "2"
> summaryShort(AL)
[1] "NA:5" "NA:2"
> 
> n01 <- simNorm(0, 1)
> AL <- adjust(AL, "n01", 2)
> run(AL)
[1]  5.0000000 -0.6264538
> summary(AL)
[1] "Random Vector Object."
[1] "Free/Fixed Parameters:"
[1] NA NA
[1] "Parameter/Starting Values:"
[1] "5"   "n01"
> 
> 
> 
> cleanEx()
> nameEx("SymMatrix-class")
> ### * SymMatrix-class
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: SymMatrix-class
> ### Title: Class '"SymMatrix"' (Random parameters symmetric matrix)
> ### Aliases: SymMatrix-class run,SymMatrix-method summary,SymMatrix-method
> ### Keywords: classes
> 
> ### ** Examples
> 
> showClass("SymMatrix")
Class "SymMatrix" [package "simsem"]

Slots:
                    
Name:    free  param
Class: matrix matrix

Extends: "SimMatrix"

Known Subclasses: "NullSymMatrix"
> 
> latent.cor <- matrix(NA, 3, 3)
> diag(latent.cor) <- 1
> PH <- symMatrix(latent.cor, 0.5)
> 
> u46 <- simUnif(0.4, 0.6)
> PH <- adjust(PH, "u46", c(3,2))
> summary(PH)
[1] "Random Symmetric Matrix Object."
[1] "Free/Fixed Parameters:"
     [,1] [,2] [,3]
[1,]    1   NA   NA
[2,]   NA    1   NA
[3,]   NA   NA    1
[1] "Parameter/Starting Values:"
     [,1]  [,2]  [,3] 
[1,] ""    "0.5" "0.5"
[2,] "0.5" ""    "u46"
[3,] "0.5" "u46" ""   
> summaryShort(PH)
     [,1]     [,2]     [,3]    
[1,] "1"      "NA:0.5" "NA:0.5"
[2,] "NA:0.5" "1"      "NA:u46"
[3,] "NA:0.5" "NA:u46" "1"     
> run(PH)
     [,1]      [,2]      [,3]
[1,]  1.0 0.5000000 0.5000000
[2,]  0.5 1.0000000 0.4531017
[3,]  0.5 0.4531017 1.0000000
> 
> 
> 
> cleanEx()
> nameEx("VirtualDist-class")
> ### * VirtualDist-class
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: VirtualDist-class
> ### Title: Class "VirtualDist"
> ### Aliases: VirtualDist-class
> ### Keywords: classes
> 
> ### ** Examples
> 
> showClass("VirtualDist")
Virtual Class "VirtualDist" [package "simsem"]

No Slots, prototype of class "NULL"

Known Subclasses: "SimUnif", "SimNorm"
> 
> 
> 
> cleanEx()
> nameEx("adjust")
> ### * adjust
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: adjust
> ### Title: Change an element in 'SimMatrix', 'SymMatrix', or 'SimVector'.
> ### Aliases: adjust adjust-methods adjust,ANY-method
> ###   adjust,SimMatrix-method adjust,SymMatrix-method
> ###   adjust,SimVector-method
> 
> ### ** Examples
> 
> loading <- matrix(0, 6, 2)
> loading[1:3, 1] <- NA
> loading[4:6, 2] <- NA
> LX <- simMatrix(loading, 0.7)
> summary(LX)
[1] "Random Full Matrix Object."
[1] "Free/Fixed Parameters:"
     [,1] [,2]
[1,]   NA    0
[2,]   NA    0
[3,]   NA    0
[4,]    0   NA
[5,]    0   NA
[6,]    0   NA
[1] "Parameter/Starting Values:"
     [,1]  [,2] 
[1,] "0.7" ""   
[2,] "0.7" ""   
[3,] "0.7" ""   
[4,] ""    "0.7"
[5,] ""    "0.7"
[6,] ""    "0.7"
> run(LX)
     [,1] [,2]
[1,]  0.7  0.0
[2,]  0.7  0.0
[3,]  0.7  0.0
[4,]  0.0  0.7
[5,]  0.0  0.7
[6,]  0.0  0.7
> 
> u34 <- simUnif(0.3, 0.4)
> LX <- adjust(LX, "u34", c(2, 1))
> summary(LX)
[1] "Random Full Matrix Object."
[1] "Free/Fixed Parameters:"
     [,1] [,2]
[1,]   NA    0
[2,]   NA    0
[3,]   NA    0
[4,]    0   NA
[5,]    0   NA
[6,]    0   NA
[1] "Parameter/Starting Values:"
     [,1]  [,2] 
[1,] "0.7" ""   
[2,] "u34" ""   
[3,] "0.7" ""   
[4,] ""    "0.7"
[5,] ""    "0.7"
[6,] ""    "0.7"
> run(LX)
          [,1] [,2]
[1,] 0.7000000  0.0
[2,] 0.3265509  0.0
[3,] 0.7000000  0.0
[4,] 0.0000000  0.7
[5,] 0.0000000  0.7
[6,] 0.0000000  0.7
> 
> LX <- adjust(LX, 0, c(2,1))
> LX <- adjust(LX, 0.5, c(2,2), FALSE)
> summary(LX)
[1] "Random Full Matrix Object."
[1] "Free/Fixed Parameters:"
     [,1] [,2]
[1,]   NA    0
[2,]    0   NA
[3,]   NA    0
[4,]    0   NA
[5,]    0   NA
[6,]    0   NA
[1] "Parameter/Starting Values:"
     [,1]  [,2] 
[1,] "0.7" ""   
[2,] ""    "0.5"
[3,] "0.7" ""   
[4,] ""    "0.7"
[5,] ""    "0.7"
[6,] ""    "0.7"
> run(LX)
     [,1] [,2]
[1,]  0.7  0.0
[2,]  0.0  0.5
[3,]  0.7  0.0
[4,]  0.0  0.7
[5,]  0.0  0.7
[6,]  0.0  0.7
> 
> factor.mean <- rep(NA, 2)
> factor.mean.starting <- c(5, 2)
> AL <- simVector(factor.mean, factor.mean.starting)
> run(AL)
[1] 5 2
> summary(AL)
[1] "Random Vector Object."
[1] "Free/Fixed Parameters:"
[1] NA NA
[1] "Parameter/Starting Values:"
[1] "5" "2"
> 
> n01 <- simNorm(0, 1)
> AL <- adjust(AL, "n01", 2)
> run(AL)
[1]  5.0000000 -0.3262334
> summary(AL)
[1] "Random Vector Object."
[1] "Free/Fixed Parameters:"
[1] NA NA
[1] "Parameter/Starting Values:"
[1] "5"   "n01"
> 
> 
> 
> cleanEx()
> nameEx("getCutoff")
> ### * getCutoff
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: getCutoff
> ### Title: Find cutoff given a priori alpha level
> ### Aliases: getCutoff getCutoff-methods getCutoff,data.frame-method
> ###   getCutoff,matrix-method getCutoff,SimResult-method
> 
> ### ** Examples
> 
> loading <- matrix(0, 6, 2)
> loading[1:3, 1] <- NA
> loading[4:6, 2] <- NA
> loadingValues <- matrix(0, 6, 2)
> loadingValues[1:3, 1] <- 0.7
> loadingValues[4:6, 2] <- 0.7
> LX <- simMatrix(loading, loadingValues)
> latent.cor <- matrix(NA, 2, 2)
> diag(latent.cor) <- 1
> PH <- symMatrix(latent.cor, 0.5)
> error.cor <- matrix(0, 6, 6)
> diag(error.cor) <- 1
> TD <- symMatrix(error.cor)
> CFA.Model <- simSetCFA(LY = LX, PS = PH, TE = TD)
> SimData <- simData(200, CFA.Model)
> SimModel <- simModel(CFA.Model)
> # We make the examples running only 50 replications to save time.
> # In reality, more replications are needed.
> Output <- simResult(50, SimData, SimModel)
> getCutoff(Output, 0.05)
         Chi          AIC          BIC        RMSEA          CFI          TLI 
1.439665e+01 3.222851e+03 3.285519e+03 6.322095e-02 9.784151e-01 9.595283e-01 
        SRMR 
3.892624e-02 
> 
> 
> 
> cleanEx()
> nameEx("getPower")
> ### * getPower
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: getPower
> ### Title: Find power in rejecting alternative models based on fit indices
> ###   criteria
> ### Aliases: getPower getPower-methods getPower,data.frame-method
> ###   getPower,matrix-method getPower,SimResult-method
> 
> ### ** Examples
> 
> loading.null <- matrix(0, 6, 1)
> loading.null[1:6, 1] <- NA
> LX.NULL <- simMatrix(loading.null, 0.7)
> PH.NULL <- symMatrix(diag(1))
> TD <- symMatrix(diag(6))
> CFA.Model.NULL <- simSetCFA(LY = LX.NULL, PS = PH.NULL, TE = TD)
> SimData.NULL <- simData(500, CFA.Model.NULL)
> SimModel <- simModel(CFA.Model.NULL)
> # We make the examples running only 50 replications to save time.
> # In reality, more replications are needed.
> Output.NULL <- simResult(50, SimData.NULL, SimModel)
> Cut.NULL <- getCutoff(Output.NULL, 0.95)
> 
> u79 <- simUnif(0.7, 0.9)
> loading.alt <- matrix(0, 6, 2)
> loading.alt[1:3, 1] <- NA
> loading.alt[4:6, 2] <- NA
> LX.ALT <- simMatrix(loading.alt, 0.7)
> latent.cor.alt <- matrix(NA, 2, 2)
> diag(latent.cor.alt) <- 1
> PH.ALT <- symMatrix(latent.cor.alt, "u79")
> CFA.Model.ALT <- simSetCFA(LY = LX.ALT, PS = PH.ALT, TE = TD)
> SimData.ALT <- simData(500, CFA.Model.ALT)
> Output.ALT <- simResult(50, SimData.ALT, SimModel)
> getPower(Output.ALT, Cut.NULL)
  Chi   CFI   TLI   AIC   BIC RMSEA  SRMR 
    1     1     1     1     1     1     1 
> Rule.of.thumb <- c(RMSEA=0.05, CFI=0.95, TLI=0.95, SRMR=0.06)
> getPower(Output.ALT, Rule.of.thumb, usedFit=c("RMSEA", "CFI", "TLI", "SRMR"))
  CFI   TLI RMSEA  SRMR 
 0.54  0.84  0.94  0.00 
> 
> 
> 
> cleanEx()
> nameEx("imposeMissing")
> ### * imposeMissing
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: imposeMissing
> ### Title: Impose MAR, MCAR, and planned missingness on a data set
> ### Aliases: imposeMissing
> 
> ### ** Examples
> 
>   data <- matrix(rep(rnorm(10,1,1),19),ncol=19)
>   datac <- cbind(data,rnorm(10,0,1),rnorm(10,5,5))
> 
>   ##################### Got some problems here ###########################
>   
>   # Imposing Missing with the following arguments produces no missing values
>   imposeMissing(data)
           [,1]      [,2]      [,3]      [,4]      [,5]      [,6]      [,7]
 [1,] 0.3735462 0.3735462 0.3735462 0.3735462 0.3735462 0.3735462 0.3735462
 [2,] 1.1836433 1.1836433 1.1836433 1.1836433 1.1836433 1.1836433 1.1836433
 [3,] 0.1643714 0.1643714 0.1643714 0.1643714 0.1643714 0.1643714 0.1643714
 [4,] 2.5952808 2.5952808 2.5952808 2.5952808 2.5952808 2.5952808 2.5952808
 [5,] 1.3295078 1.3295078 1.3295078 1.3295078 1.3295078 1.3295078 1.3295078
 [6,] 0.1795316 0.1795316 0.1795316 0.1795316 0.1795316 0.1795316 0.1795316
 [7,] 1.4874291 1.4874291 1.4874291 1.4874291 1.4874291 1.4874291 1.4874291
 [8,] 1.7383247 1.7383247 1.7383247 1.7383247 1.7383247 1.7383247 1.7383247
 [9,] 1.5757814 1.5757814 1.5757814 1.5757814 1.5757814 1.5757814 1.5757814
[10,] 0.6946116 0.6946116 0.6946116 0.6946116 0.6946116 0.6946116 0.6946116
           [,8]      [,9]     [,10]     [,11]     [,12]     [,13]     [,14]
 [1,] 0.3735462 0.3735462 0.3735462 0.3735462 0.3735462 0.3735462 0.3735462
 [2,] 1.1836433 1.1836433 1.1836433 1.1836433 1.1836433 1.1836433 1.1836433
 [3,] 0.1643714 0.1643714 0.1643714 0.1643714 0.1643714 0.1643714 0.1643714
 [4,] 2.5952808 2.5952808 2.5952808 2.5952808 2.5952808 2.5952808 2.5952808
 [5,] 1.3295078 1.3295078 1.3295078 1.3295078 1.3295078 1.3295078 1.3295078
 [6,] 0.1795316 0.1795316 0.1795316 0.1795316 0.1795316 0.1795316 0.1795316
 [7,] 1.4874291 1.4874291 1.4874291 1.4874291 1.4874291 1.4874291 1.4874291
 [8,] 1.7383247 1.7383247 1.7383247 1.7383247 1.7383247 1.7383247 1.7383247
 [9,] 1.5757814 1.5757814 1.5757814 1.5757814 1.5757814 1.5757814 1.5757814
[10,] 0.6946116 0.6946116 0.6946116 0.6946116 0.6946116 0.6946116 0.6946116
          [,15]     [,16]     [,17]     [,18]     [,19]
 [1,] 0.3735462 0.3735462 0.3735462 0.3735462 0.3735462
 [2,] 1.1836433 1.1836433 1.1836433 1.1836433 1.1836433
 [3,] 0.1643714 0.1643714 0.1643714 0.1643714 0.1643714
 [4,] 2.5952808 2.5952808 2.5952808 2.5952808 2.5952808
 [5,] 1.3295078 1.3295078 1.3295078 1.3295078 1.3295078
 [6,] 0.1795316 0.1795316 0.1795316 0.1795316 0.1795316
 [7,] 1.4874291 1.4874291 1.4874291 1.4874291 1.4874291
 [8,] 1.7383247 1.7383247 1.7383247 1.7383247 1.7383247
 [9,] 1.5757814 1.5757814 1.5757814 1.5757814 1.5757814
[10,] 0.6946116 0.6946116 0.6946116 0.6946116 0.6946116
>   imposeMissing(data,covs=c(1,2))
           [,1]      [,2]      [,3]      [,4]      [,5]      [,6]      [,7]
 [1,] 0.3735462 0.3735462 0.3735462 0.3735462 0.3735462 0.3735462 0.3735462
 [2,] 1.1836433 1.1836433 1.1836433 1.1836433 1.1836433 1.1836433 1.1836433
 [3,] 0.1643714 0.1643714 0.1643714 0.1643714 0.1643714 0.1643714 0.1643714
 [4,] 2.5952808 2.5952808 2.5952808 2.5952808 2.5952808 2.5952808 2.5952808
 [5,] 1.3295078 1.3295078 1.3295078 1.3295078 1.3295078 1.3295078 1.3295078
 [6,] 0.1795316 0.1795316 0.1795316 0.1795316 0.1795316 0.1795316 0.1795316
 [7,] 1.4874291 1.4874291 1.4874291 1.4874291 1.4874291 1.4874291 1.4874291
 [8,] 1.7383247 1.7383247 1.7383247 1.7383247 1.7383247 1.7383247 1.7383247
 [9,] 1.5757814 1.5757814 1.5757814 1.5757814 1.5757814 1.5757814 1.5757814
[10,] 0.6946116 0.6946116 0.6946116 0.6946116 0.6946116 0.6946116 0.6946116
           [,8]      [,9]     [,10]     [,11]     [,12]     [,13]     [,14]
 [1,] 0.3735462 0.3735462 0.3735462 0.3735462 0.3735462 0.3735462 0.3735462
 [2,] 1.1836433 1.1836433 1.1836433 1.1836433 1.1836433 1.1836433 1.1836433
 [3,] 0.1643714 0.1643714 0.1643714 0.1643714 0.1643714 0.1643714 0.1643714
 [4,] 2.5952808 2.5952808 2.5952808 2.5952808 2.5952808 2.5952808 2.5952808
 [5,] 1.3295078 1.3295078 1.3295078 1.3295078 1.3295078 1.3295078 1.3295078
 [6,] 0.1795316 0.1795316 0.1795316 0.1795316 0.1795316 0.1795316 0.1795316
 [7,] 1.4874291 1.4874291 1.4874291 1.4874291 1.4874291 1.4874291 1.4874291
 [8,] 1.7383247 1.7383247 1.7383247 1.7383247 1.7383247 1.7383247 1.7383247
 [9,] 1.5757814 1.5757814 1.5757814 1.5757814 1.5757814 1.5757814 1.5757814
[10,] 0.6946116 0.6946116 0.6946116 0.6946116 0.6946116 0.6946116 0.6946116
          [,15]     [,16]     [,17]     [,18]     [,19]
 [1,] 0.3735462 0.3735462 0.3735462 0.3735462 0.3735462
 [2,] 1.1836433 1.1836433 1.1836433 1.1836433 1.1836433
 [3,] 0.1643714 0.1643714 0.1643714 0.1643714 0.1643714
 [4,] 2.5952808 2.5952808 2.5952808 2.5952808 2.5952808
 [5,] 1.3295078 1.3295078 1.3295078 1.3295078 1.3295078
 [6,] 0.1795316 0.1795316 0.1795316 0.1795316 0.1795316
 [7,] 1.4874291 1.4874291 1.4874291 1.4874291 1.4874291
 [8,] 1.7383247 1.7383247 1.7383247 1.7383247 1.7383247
 [9,] 1.5757814 1.5757814 1.5757814 1.5757814 1.5757814
[10,] 0.6946116 0.6946116 0.6946116 0.6946116 0.6946116
>   imposeMissing(data,pmMCAR=0)
           [,1]      [,2]      [,3]      [,4]      [,5]      [,6]      [,7]
 [1,] 0.3735462 0.3735462 0.3735462 0.3735462 0.3735462 0.3735462 0.3735462
 [2,] 1.1836433 1.1836433 1.1836433 1.1836433 1.1836433 1.1836433 1.1836433
 [3,] 0.1643714 0.1643714 0.1643714 0.1643714 0.1643714 0.1643714 0.1643714
 [4,] 2.5952808 2.5952808 2.5952808 2.5952808 2.5952808 2.5952808 2.5952808
 [5,] 1.3295078 1.3295078 1.3295078 1.3295078 1.3295078 1.3295078 1.3295078
 [6,] 0.1795316 0.1795316 0.1795316 0.1795316 0.1795316 0.1795316 0.1795316
 [7,] 1.4874291 1.4874291 1.4874291 1.4874291 1.4874291 1.4874291 1.4874291
 [8,] 1.7383247 1.7383247 1.7383247 1.7383247 1.7383247 1.7383247 1.7383247
 [9,] 1.5757814 1.5757814 1.5757814 1.5757814 1.5757814 1.5757814 1.5757814
[10,] 0.6946116 0.6946116 0.6946116 0.6946116 0.6946116 0.6946116 0.6946116
           [,8]      [,9]     [,10]     [,11]     [,12]     [,13]     [,14]
 [1,] 0.3735462 0.3735462 0.3735462 0.3735462 0.3735462 0.3735462 0.3735462
 [2,] 1.1836433 1.1836433 1.1836433 1.1836433 1.1836433 1.1836433 1.1836433
 [3,] 0.1643714 0.1643714 0.1643714 0.1643714 0.1643714 0.1643714 0.1643714
 [4,] 2.5952808 2.5952808 2.5952808 2.5952808 2.5952808 2.5952808 2.5952808
 [5,] 1.3295078 1.3295078 1.3295078 1.3295078 1.3295078 1.3295078 1.3295078
 [6,] 0.1795316 0.1795316 0.1795316 0.1795316 0.1795316 0.1795316 0.1795316
 [7,] 1.4874291 1.4874291 1.4874291 1.4874291 1.4874291 1.4874291 1.4874291
 [8,] 1.7383247 1.7383247 1.7383247 1.7383247 1.7383247 1.7383247 1.7383247
 [9,] 1.5757814 1.5757814 1.5757814 1.5757814 1.5757814 1.5757814 1.5757814
[10,] 0.6946116 0.6946116 0.6946116 0.6946116 0.6946116 0.6946116 0.6946116
          [,15]     [,16]     [,17]     [,18]     [,19]
 [1,] 0.3735462 0.3735462 0.3735462 0.3735462 0.3735462
 [2,] 1.1836433 1.1836433 1.1836433 1.1836433 1.1836433
 [3,] 0.1643714 0.1643714 0.1643714 0.1643714 0.1643714
 [4,] 2.5952808 2.5952808 2.5952808 2.5952808 2.5952808
 [5,] 1.3295078 1.3295078 1.3295078 1.3295078 1.3295078
 [6,] 0.1795316 0.1795316 0.1795316 0.1795316 0.1795316
 [7,] 1.4874291 1.4874291 1.4874291 1.4874291 1.4874291
 [8,] 1.7383247 1.7383247 1.7383247 1.7383247 1.7383247
 [9,] 1.5757814 1.5757814 1.5757814 1.5757814 1.5757814
[10,] 0.6946116 0.6946116 0.6946116 0.6946116 0.6946116
>   imposeMissing(data,pmMAR=0)
           [,1]      [,2]      [,3]      [,4]      [,5]      [,6]      [,7]
 [1,] 0.3735462 0.3735462 0.3735462 0.3735462 0.3735462 0.3735462 0.3735462
 [2,] 1.1836433 1.1836433 1.1836433 1.1836433 1.1836433 1.1836433 1.1836433
 [3,] 0.1643714 0.1643714 0.1643714 0.1643714 0.1643714 0.1643714 0.1643714
 [4,] 2.5952808 2.5952808 2.5952808 2.5952808 2.5952808 2.5952808 2.5952808
 [5,] 1.3295078 1.3295078 1.3295078 1.3295078 1.3295078 1.3295078 1.3295078
 [6,] 0.1795316 0.1795316 0.1795316 0.1795316 0.1795316 0.1795316 0.1795316
 [7,] 1.4874291 1.4874291 1.4874291 1.4874291 1.4874291 1.4874291 1.4874291
 [8,] 1.7383247 1.7383247 1.7383247 1.7383247 1.7383247 1.7383247 1.7383247
 [9,] 1.5757814 1.5757814 1.5757814 1.5757814 1.5757814 1.5757814 1.5757814
[10,] 0.6946116 0.6946116 0.6946116 0.6946116 0.6946116 0.6946116 0.6946116
           [,8]      [,9]     [,10]     [,11]     [,12]     [,13]     [,14]
 [1,] 0.3735462 0.3735462 0.3735462 0.3735462 0.3735462 0.3735462 0.3735462
 [2,] 1.1836433 1.1836433 1.1836433 1.1836433 1.1836433 1.1836433 1.1836433
 [3,] 0.1643714 0.1643714 0.1643714 0.1643714 0.1643714 0.1643714 0.1643714
 [4,] 2.5952808 2.5952808 2.5952808 2.5952808 2.5952808 2.5952808 2.5952808
 [5,] 1.3295078 1.3295078 1.3295078 1.3295078 1.3295078 1.3295078 1.3295078
 [6,] 0.1795316 0.1795316 0.1795316 0.1795316 0.1795316 0.1795316 0.1795316
 [7,] 1.4874291 1.4874291 1.4874291 1.4874291 1.4874291 1.4874291 1.4874291
 [8,] 1.7383247 1.7383247 1.7383247 1.7383247 1.7383247 1.7383247 1.7383247
 [9,] 1.5757814 1.5757814 1.5757814 1.5757814 1.5757814 1.5757814 1.5757814
[10,] 0.6946116 0.6946116 0.6946116 0.6946116 0.6946116 0.6946116 0.6946116
          [,15]     [,16]     [,17]     [,18]     [,19]
 [1,] 0.3735462 0.3735462 0.3735462 0.3735462 0.3735462
 [2,] 1.1836433 1.1836433 1.1836433 1.1836433 1.1836433
 [3,] 0.1643714 0.1643714 0.1643714 0.1643714 0.1643714
 [4,] 2.5952808 2.5952808 2.5952808 2.5952808 2.5952808
 [5,] 1.3295078 1.3295078 1.3295078 1.3295078 1.3295078
 [6,] 0.1795316 0.1795316 0.1795316 0.1795316 0.1795316
 [7,] 1.4874291 1.4874291 1.4874291 1.4874291 1.4874291
 [8,] 1.7383247 1.7383247 1.7383247 1.7383247 1.7383247
 [9,] 1.5757814 1.5757814 1.5757814 1.5757814 1.5757814
[10,] 0.6946116 0.6946116 0.6946116 0.6946116 0.6946116
>   imposeMissing(data,nforms=0)
           [,1]      [,2]      [,3]      [,4]      [,5]      [,6]      [,7]
 [1,] 0.3735462 0.3735462 0.3735462 0.3735462 0.3735462 0.3735462 0.3735462
 [2,] 1.1836433 1.1836433 1.1836433 1.1836433 1.1836433 1.1836433 1.1836433
 [3,] 0.1643714 0.1643714 0.1643714 0.1643714 0.1643714 0.1643714 0.1643714
 [4,] 2.5952808 2.5952808 2.5952808 2.5952808 2.5952808 2.5952808 2.5952808
 [5,] 1.3295078 1.3295078 1.3295078 1.3295078 1.3295078 1.3295078 1.3295078
 [6,] 0.1795316 0.1795316 0.1795316 0.1795316 0.1795316 0.1795316 0.1795316
 [7,] 1.4874291 1.4874291 1.4874291 1.4874291 1.4874291 1.4874291 1.4874291
 [8,] 1.7383247 1.7383247 1.7383247 1.7383247 1.7383247 1.7383247 1.7383247
 [9,] 1.5757814 1.5757814 1.5757814 1.5757814 1.5757814 1.5757814 1.5757814
[10,] 0.6946116 0.6946116 0.6946116 0.6946116 0.6946116 0.6946116 0.6946116
           [,8]      [,9]     [,10]     [,11]     [,12]     [,13]     [,14]
 [1,] 0.3735462 0.3735462 0.3735462 0.3735462 0.3735462 0.3735462 0.3735462
 [2,] 1.1836433 1.1836433 1.1836433 1.1836433 1.1836433 1.1836433 1.1836433
 [3,] 0.1643714 0.1643714 0.1643714 0.1643714 0.1643714 0.1643714 0.1643714
 [4,] 2.5952808 2.5952808 2.5952808 2.5952808 2.5952808 2.5952808 2.5952808
 [5,] 1.3295078 1.3295078 1.3295078 1.3295078 1.3295078 1.3295078 1.3295078
 [6,] 0.1795316 0.1795316 0.1795316 0.1795316 0.1795316 0.1795316 0.1795316
 [7,] 1.4874291 1.4874291 1.4874291 1.4874291 1.4874291 1.4874291 1.4874291
 [8,] 1.7383247 1.7383247 1.7383247 1.7383247 1.7383247 1.7383247 1.7383247
 [9,] 1.5757814 1.5757814 1.5757814 1.5757814 1.5757814 1.5757814 1.5757814
[10,] 0.6946116 0.6946116 0.6946116 0.6946116 0.6946116 0.6946116 0.6946116
          [,15]     [,16]     [,17]     [,18]     [,19]
 [1,] 0.3735462 0.3735462 0.3735462 0.3735462 0.3735462
 [2,] 1.1836433 1.1836433 1.1836433 1.1836433 1.1836433
 [3,] 0.1643714 0.1643714 0.1643714 0.1643714 0.1643714
 [4,] 2.5952808 2.5952808 2.5952808 2.5952808 2.5952808
 [5,] 1.3295078 1.3295078 1.3295078 1.3295078 1.3295078
 [6,] 0.1795316 0.1795316 0.1795316 0.1795316 0.1795316
 [7,] 1.4874291 1.4874291 1.4874291 1.4874291 1.4874291
 [8,] 1.7383247 1.7383247 1.7383247 1.7383247 1.7383247
 [9,] 1.5757814 1.5757814 1.5757814 1.5757814 1.5757814
[10,] 0.6946116 0.6946116 0.6946116 0.6946116 0.6946116
> 
>   #Some more usage examples
>   imposeMissing(data,covs=c(1,2),pmMCAR=.1)
           [,1]      [,2]      [,3]      [,4]      [,5]      [,6]      [,7]
 [1,] 0.3735462 0.3735462 0.3735462 0.3735462 0.3735462 0.3735462 0.3735462
 [2,] 1.1836433 1.1836433 1.1836433 1.1836433 1.1836433 1.1836433 1.1836433
 [3,] 0.1643714 0.1643714 0.1643714 0.1643714 0.1643714        NA 0.1643714
 [4,] 2.5952808 2.5952808 2.5952808        NA 2.5952808 2.5952808 2.5952808
 [5,] 1.3295078 1.3295078        NA 1.3295078 1.3295078 1.3295078 1.3295078
 [6,] 0.1795316 0.1795316 0.1795316 0.1795316 0.1795316 0.1795316 0.1795316
 [7,] 1.4874291 1.4874291 1.4874291 1.4874291 1.4874291        NA 1.4874291
 [8,] 1.7383247 1.7383247 1.7383247 1.7383247 1.7383247 1.7383247 1.7383247
 [9,] 1.5757814 1.5757814 1.5757814 1.5757814 1.5757814        NA        NA
[10,] 0.6946116 0.6946116 0.6946116 0.6946116 0.6946116 0.6946116 0.6946116
           [,8]      [,9]     [,10]     [,11]     [,12]     [,13]     [,14]
 [1,] 0.3735462 0.3735462 0.3735462 0.3735462 0.3735462 0.3735462 0.3735462
 [2,] 1.1836433 1.1836433 1.1836433 1.1836433 1.1836433 1.1836433 1.1836433
 [3,] 0.1643714 0.1643714 0.1643714        NA 0.1643714        NA 0.1643714
 [4,] 2.5952808 2.5952808 2.5952808 2.5952808 2.5952808 2.5952808 2.5952808
 [5,] 1.3295078 1.3295078 1.3295078 1.3295078 1.3295078 1.3295078 1.3295078
 [6,] 0.1795316 0.1795316 0.1795316 0.1795316 0.1795316 0.1795316 0.1795316
 [7,] 1.4874291 1.4874291 1.4874291 1.4874291 1.4874291 1.4874291 1.4874291
 [8,] 1.7383247 1.7383247 1.7383247 1.7383247 1.7383247 1.7383247 1.7383247
 [9,] 1.5757814 1.5757814 1.5757814 1.5757814 1.5757814        NA 1.5757814
[10,] 0.6946116 0.6946116 0.6946116 0.6946116        NA 0.6946116 0.6946116
          [,15]     [,16]     [,17]     [,18]     [,19]
 [1,] 0.3735462 0.3735462 0.3735462 0.3735462 0.3735462
 [2,] 1.1836433 1.1836433 1.1836433 1.1836433 1.1836433
 [3,] 0.1643714 0.1643714 0.1643714 0.1643714 0.1643714
 [4,] 2.5952808 2.5952808 2.5952808        NA 2.5952808
 [5,] 1.3295078 1.3295078 1.3295078 1.3295078 1.3295078
 [6,] 0.1795316 0.1795316 0.1795316 0.1795316 0.1795316
 [7,]        NA 1.4874291 1.4874291 1.4874291 1.4874291
 [8,] 1.7383247 1.7383247 1.7383247        NA 1.7383247
 [9,] 1.5757814 1.5757814 1.5757814 1.5757814 1.5757814
[10,] 0.6946116 0.6946116 0.6946116 0.6946116        NA
>   imposeMissing(datac,covs=c(20,21),pmMAR=.2)
           [,1]      [,2]      [,3]      [,4]      [,5]      [,6]      [,7]
 [1,] 0.3735462 0.3735462 0.3735462 0.3735462 0.3735462 0.3735462 0.3735462
 [2,] 1.1836433 1.1836433 1.1836433 1.1836433 1.1836433 1.1836433 1.1836433
 [3,] 0.1643714        NA 0.1643714 0.1643714 0.1643714        NA        NA
 [4,]        NA        NA        NA        NA        NA        NA        NA
 [5,] 1.3295078 1.3295078 1.3295078 1.3295078 1.3295078 1.3295078 1.3295078
 [6,] 0.1795316 0.1795316 0.1795316 0.1795316 0.1795316 0.1795316 0.1795316
 [7,] 1.4874291 1.4874291 1.4874291 1.4874291 1.4874291 1.4874291 1.4874291
 [8,] 1.7383247 1.7383247 1.7383247 1.7383247 1.7383247 1.7383247 1.7383247
 [9,] 1.5757814 1.5757814 1.5757814 1.5757814 1.5757814 1.5757814 1.5757814
[10,] 0.6946116 0.6946116 0.6946116 0.6946116 0.6946116 0.6946116 0.6946116
           [,8]      [,9]     [,10]     [,11]     [,12]     [,13]     [,14]
 [1,] 0.3735462 0.3735462 0.3735462 0.3735462 0.3735462 0.3735462 0.3735462
 [2,] 1.1836433 1.1836433 1.1836433 1.1836433 1.1836433 1.1836433 1.1836433
 [3,] 0.1643714        NA 0.1643714 0.1643714 0.1643714 0.1643714 0.1643714
 [4,]        NA        NA        NA        NA        NA        NA        NA
 [5,] 1.3295078 1.3295078 1.3295078 1.3295078 1.3295078 1.3295078 1.3295078
 [6,] 0.1795316 0.1795316 0.1795316 0.1795316 0.1795316 0.1795316 0.1795316
 [7,] 1.4874291 1.4874291 1.4874291 1.4874291 1.4874291 1.4874291 1.4874291
 [8,] 1.7383247 1.7383247        NA        NA        NA        NA        NA
 [9,] 1.5757814 1.5757814 1.5757814 1.5757814 1.5757814 1.5757814 1.5757814
[10,] 0.6946116 0.6946116 0.6946116 0.6946116 0.6946116 0.6946116 0.6946116
          [,15]     [,16]     [,17]     [,18]     [,19]       [,20]     [,21]
 [1,] 0.3735462 0.3735462 0.3735462 0.3735462 0.3735462  1.51178117  9.594887
 [2,] 1.1836433 1.1836433 1.1836433 1.1836433 1.1836433  0.38984324  8.910682
 [3,] 0.1643714 0.1643714 0.1643714 0.1643714 0.1643714 -0.62124058  5.372825
 [4,]        NA        NA        NA        NA        NA -2.21469989 -4.946758
 [5,] 1.3295078 1.3295078 1.3295078 1.3295078 1.3295078  1.12493092  8.099129
 [6,] 0.1795316 0.1795316 0.1795316 0.1795316 0.1795316 -0.04493361  4.719356
 [7,] 1.4874291 1.4874291 1.4874291 1.4874291 1.4874291 -0.01619026  4.221022
 [8,]        NA        NA        NA        NA        NA  0.94383621 -2.353762
 [9,] 1.5757814 1.5757814 1.5757814 1.5757814 1.5757814  0.82122120  2.609250
[10,] 0.6946116 0.6946116 0.6946116 0.6946116 0.6946116  0.59390132  7.089708
>   imposeMissing(data,nforms=3)
           [,1]      [,2]      [,3]      [,4]      [,5]      [,6]      [,7]
 [1,] 0.3735462 0.3735462 0.3735462 0.3735462        NA        NA        NA
 [2,] 1.1836433 1.1836433 1.1836433 1.1836433        NA        NA        NA
 [3,] 0.1643714 0.1643714 0.1643714 0.1643714        NA        NA        NA
 [4,] 2.5952808 2.5952808 2.5952808 2.5952808 2.5952808 2.5952808 2.5952808
 [5,] 1.3295078 1.3295078 1.3295078 1.3295078 1.3295078 1.3295078 1.3295078
 [6,] 0.1795316 0.1795316 0.1795316 0.1795316 0.1795316 0.1795316 0.1795316
 [7,] 1.4874291 1.4874291 1.4874291 1.4874291 1.4874291 1.4874291 1.4874291
 [8,] 1.7383247 1.7383247 1.7383247 1.7383247 1.7383247 1.7383247 1.7383247
 [9,] 1.5757814 1.5757814 1.5757814 1.5757814 1.5757814 1.5757814 1.5757814
[10,] 0.6946116 0.6946116 0.6946116 0.6946116 0.6946116 0.6946116 0.6946116
           [,8]      [,9]     [,10]     [,11]     [,12]     [,13]     [,14]
 [1,]        NA        NA 0.3735462 0.3735462 0.3735462 0.3735462 0.3735462
 [2,]        NA        NA 1.1836433 1.1836433 1.1836433 1.1836433 1.1836433
 [3,]        NA        NA 0.1643714 0.1643714 0.1643714 0.1643714 0.1643714
 [4,] 2.5952808 2.5952808 2.5952808 2.5952808 2.5952808 2.5952808 2.5952808
 [5,] 1.3295078 1.3295078 1.3295078 1.3295078 1.3295078 1.3295078 1.3295078
 [6,] 0.1795316 0.1795316 0.1795316 0.1795316 0.1795316 0.1795316 0.1795316
 [7,] 1.4874291 1.4874291        NA        NA        NA        NA        NA
 [8,] 1.7383247 1.7383247        NA        NA        NA        NA        NA
 [9,] 1.5757814 1.5757814        NA        NA        NA        NA        NA
[10,] 0.6946116 0.6946116        NA        NA        NA        NA        NA
          [,15]     [,16]     [,17]     [,18]     [,19]
 [1,] 0.3735462 0.3735462 0.3735462 0.3735462 0.3735462
 [2,] 1.1836433 1.1836433 1.1836433 1.1836433 1.1836433
 [3,] 0.1643714 0.1643714 0.1643714 0.1643714 0.1643714
 [4,]        NA        NA        NA        NA        NA
 [5,]        NA        NA        NA        NA        NA
 [6,]        NA        NA        NA        NA        NA
 [7,] 1.4874291 1.4874291 1.4874291 1.4874291 1.4874291
 [8,] 1.7383247 1.7383247 1.7383247 1.7383247 1.7383247
 [9,] 1.5757814 1.5757814 1.5757814 1.5757814 1.5757814
[10,] 0.6946116 0.6946116 0.6946116 0.6946116 0.6946116
>   imposeMissing(data,nforms=3,itemGroups=list(c(1,2,3,4,5),c(6,7,8,9,10),c(11,12,13,14,15),c(16,17,18,19)))
           [,1]      [,2]      [,3]      [,4]      [,5]      [,6]      [,7]
 [1,] 0.3735462 0.3735462 0.3735462 0.3735462 0.3735462        NA        NA
 [2,] 1.1836433 1.1836433 1.1836433 1.1836433 1.1836433        NA        NA
 [3,] 0.1643714 0.1643714 0.1643714 0.1643714 0.1643714        NA        NA
 [4,] 2.5952808 2.5952808 2.5952808 2.5952808 2.5952808 2.5952808 2.5952808
 [5,] 1.3295078 1.3295078 1.3295078 1.3295078 1.3295078 1.3295078 1.3295078
 [6,] 0.1795316 0.1795316 0.1795316 0.1795316 0.1795316 0.1795316 0.1795316
 [7,] 1.4874291 1.4874291 1.4874291 1.4874291 1.4874291 1.4874291 1.4874291
 [8,] 1.7383247 1.7383247 1.7383247 1.7383247 1.7383247 1.7383247 1.7383247
 [9,] 1.5757814 1.5757814 1.5757814 1.5757814 1.5757814 1.5757814 1.5757814
[10,] 0.6946116 0.6946116 0.6946116 0.6946116 0.6946116 0.6946116 0.6946116
           [,8]      [,9]     [,10]     [,11]     [,12]     [,13]     [,14]
 [1,]        NA        NA        NA 0.3735462 0.3735462 0.3735462 0.3735462
 [2,]        NA        NA        NA 1.1836433 1.1836433 1.1836433 1.1836433
 [3,]        NA        NA        NA 0.1643714 0.1643714 0.1643714 0.1643714
 [4,] 2.5952808 2.5952808 2.5952808 2.5952808 2.5952808 2.5952808 2.5952808
 [5,] 1.3295078 1.3295078 1.3295078 1.3295078 1.3295078 1.3295078 1.3295078
 [6,] 0.1795316 0.1795316 0.1795316 0.1795316 0.1795316 0.1795316 0.1795316
 [7,] 1.4874291 1.4874291 1.4874291        NA        NA        NA        NA
 [8,] 1.7383247 1.7383247 1.7383247        NA        NA        NA        NA
 [9,] 1.5757814 1.5757814 1.5757814        NA        NA        NA        NA
[10,] 0.6946116 0.6946116 0.6946116        NA        NA        NA        NA
          [,15]     [,16]     [,17]     [,18]     [,19]
 [1,] 0.3735462 0.3735462 0.3735462 0.3735462 0.3735462
 [2,] 1.1836433 1.1836433 1.1836433 1.1836433 1.1836433
 [3,] 0.1643714 0.1643714 0.1643714 0.1643714 0.1643714
 [4,] 2.5952808        NA        NA        NA        NA
 [5,] 1.3295078        NA        NA        NA        NA
 [6,] 0.1795316        NA        NA        NA        NA
 [7,]        NA 1.4874291 1.4874291 1.4874291 1.4874291
 [8,]        NA 1.7383247 1.7383247 1.7383247 1.7383247
 [9,]        NA 1.5757814 1.5757814 1.5757814 1.5757814
[10,]        NA 0.6946116 0.6946116 0.6946116 0.6946116
>   imposeMissing(datac,covs=c(20,21),nforms=3)
           [,1]      [,2]      [,3]      [,4]      [,5]      [,6]      [,7]
 [1,] 0.3735462 0.3735462 0.3735462 0.3735462        NA        NA        NA
 [2,] 1.1836433 1.1836433 1.1836433 1.1836433        NA        NA        NA
 [3,] 0.1643714 0.1643714 0.1643714 0.1643714        NA        NA        NA
 [4,] 2.5952808 2.5952808 2.5952808 2.5952808 2.5952808 2.5952808 2.5952808
 [5,] 1.3295078 1.3295078 1.3295078 1.3295078 1.3295078 1.3295078 1.3295078
 [6,] 0.1795316 0.1795316 0.1795316 0.1795316 0.1795316 0.1795316 0.1795316
 [7,] 1.4874291 1.4874291 1.4874291 1.4874291 1.4874291 1.4874291 1.4874291
 [8,] 1.7383247 1.7383247 1.7383247 1.7383247 1.7383247 1.7383247 1.7383247
 [9,] 1.5757814 1.5757814 1.5757814 1.5757814 1.5757814 1.5757814 1.5757814
[10,] 0.6946116 0.6946116 0.6946116 0.6946116 0.6946116 0.6946116 0.6946116
           [,8]      [,9]     [,10]     [,11]     [,12]     [,13]     [,14]
 [1,]        NA        NA 0.3735462 0.3735462 0.3735462 0.3735462 0.3735462
 [2,]        NA        NA 1.1836433 1.1836433 1.1836433 1.1836433 1.1836433
 [3,]        NA        NA 0.1643714 0.1643714 0.1643714 0.1643714 0.1643714
 [4,] 2.5952808 2.5952808 2.5952808 2.5952808 2.5952808 2.5952808 2.5952808
 [5,] 1.3295078 1.3295078 1.3295078 1.3295078 1.3295078 1.3295078 1.3295078
 [6,] 0.1795316 0.1795316 0.1795316 0.1795316 0.1795316 0.1795316 0.1795316
 [7,] 1.4874291 1.4874291        NA        NA        NA        NA        NA
 [8,] 1.7383247 1.7383247        NA        NA        NA        NA        NA
 [9,] 1.5757814 1.5757814        NA        NA        NA        NA        NA
[10,] 0.6946116 0.6946116        NA        NA        NA        NA        NA
          [,15]     [,16]     [,17]     [,18]     [,19]       [,20]     [,21]
 [1,] 0.3735462 0.3735462 0.3735462 0.3735462 0.3735462  1.51178117  9.594887
 [2,] 1.1836433 1.1836433 1.1836433 1.1836433 1.1836433  0.38984324  8.910682
 [3,] 0.1643714 0.1643714 0.1643714 0.1643714 0.1643714 -0.62124058  5.372825
 [4,]        NA        NA        NA        NA        NA -2.21469989 -4.946758
 [5,]        NA        NA        NA        NA        NA  1.12493092  8.099129
 [6,]        NA        NA        NA        NA        NA -0.04493361  4.719356
 [7,] 1.4874291 1.4874291 1.4874291 1.4874291 1.4874291 -0.01619026  4.221022
 [8,] 1.7383247 1.7383247 1.7383247 1.7383247 1.7383247  0.94383621 -2.353762
 [9,] 1.5757814 1.5757814 1.5757814 1.5757814 1.5757814  0.82122120  2.609250
[10,] 0.6946116 0.6946116 0.6946116 0.6946116 0.6946116  0.59390132  7.089708
>   imposeMissing(data,twoMethod=c(19,.8))
           [,1]      [,2]      [,3]      [,4]      [,5]      [,6]      [,7]
 [1,] 0.3735462 0.3735462 0.3735462 0.3735462 0.3735462 0.3735462 0.3735462
 [2,] 1.1836433 1.1836433 1.1836433 1.1836433 1.1836433 1.1836433 1.1836433
 [3,] 0.1643714 0.1643714 0.1643714 0.1643714 0.1643714 0.1643714 0.1643714
 [4,] 2.5952808 2.5952808 2.5952808 2.5952808 2.5952808 2.5952808 2.5952808
 [5,] 1.3295078 1.3295078 1.3295078 1.3295078 1.3295078 1.3295078 1.3295078
 [6,] 0.1795316 0.1795316 0.1795316 0.1795316 0.1795316 0.1795316 0.1795316
 [7,] 1.4874291 1.4874291 1.4874291 1.4874291 1.4874291 1.4874291 1.4874291
 [8,] 1.7383247 1.7383247 1.7383247 1.7383247 1.7383247 1.7383247 1.7383247
 [9,] 1.5757814 1.5757814 1.5757814 1.5757814 1.5757814 1.5757814 1.5757814
[10,] 0.6946116 0.6946116 0.6946116 0.6946116 0.6946116 0.6946116 0.6946116
           [,8]      [,9]     [,10]     [,11]     [,12]     [,13]     [,14]
 [1,] 0.3735462 0.3735462 0.3735462 0.3735462 0.3735462 0.3735462 0.3735462
 [2,] 1.1836433 1.1836433 1.1836433 1.1836433 1.1836433 1.1836433 1.1836433
 [3,] 0.1643714 0.1643714 0.1643714 0.1643714 0.1643714 0.1643714 0.1643714
 [4,] 2.5952808 2.5952808 2.5952808 2.5952808 2.5952808 2.5952808 2.5952808
 [5,] 1.3295078 1.3295078 1.3295078 1.3295078 1.3295078 1.3295078 1.3295078
 [6,] 0.1795316 0.1795316 0.1795316 0.1795316 0.1795316 0.1795316 0.1795316
 [7,] 1.4874291 1.4874291 1.4874291 1.4874291 1.4874291 1.4874291 1.4874291
 [8,] 1.7383247 1.7383247 1.7383247 1.7383247 1.7383247 1.7383247 1.7383247
 [9,] 1.5757814 1.5757814 1.5757814 1.5757814 1.5757814 1.5757814 1.5757814
[10,] 0.6946116 0.6946116 0.6946116 0.6946116 0.6946116 0.6946116 0.6946116
          [,15]     [,16]     [,17]     [,18]     [,19]
 [1,] 0.3735462 0.3735462 0.3735462 0.3735462        NA
 [2,] 1.1836433 1.1836433 1.1836433 1.1836433        NA
 [3,] 0.1643714 0.1643714 0.1643714 0.1643714        NA
 [4,] 2.5952808 2.5952808 2.5952808 2.5952808        NA
 [5,] 1.3295078 1.3295078 1.3295078 1.3295078        NA
 [6,] 0.1795316 0.1795316 0.1795316 0.1795316        NA
 [7,] 1.4874291 1.4874291 1.4874291 1.4874291        NA
 [8,] 1.7383247 1.7383247 1.7383247 1.7383247        NA
 [9,] 1.5757814 1.5757814 1.5757814 1.5757814 1.5757814
[10,] 0.6946116 0.6946116 0.6946116 0.6946116 0.6946116
>   imposeMissing(datac,covs=c(20,21),pmMCAR=.1,pmMAR=.1,nforms=3)
           [,1]      [,2]      [,3]      [,4]      [,5]      [,6]      [,7]
 [1,] 0.3735462 0.3735462 0.3735462 0.3735462        NA        NA        NA
 [2,] 1.1836433 1.1836433 1.1836433        NA        NA        NA        NA
 [3,]        NA 0.1643714        NA 0.1643714        NA        NA        NA
 [4,]        NA        NA        NA        NA        NA        NA        NA
 [5,] 1.3295078 1.3295078 1.3295078 1.3295078 1.3295078 1.3295078 1.3295078
 [6,] 0.1795316 0.1795316 0.1795316        NA 0.1795316 0.1795316        NA
 [7,] 1.4874291 1.4874291        NA        NA 1.4874291 1.4874291 1.4874291
 [8,] 1.7383247 1.7383247        NA 1.7383247 1.7383247 1.7383247 1.7383247
 [9,] 1.5757814        NA 1.5757814 1.5757814 1.5757814 1.5757814 1.5757814
[10,] 0.6946116        NA 0.6946116 0.6946116 0.6946116 0.6946116 0.6946116
           [,8]      [,9]     [,10]     [,11]     [,12]     [,13]     [,14]
 [1,]        NA        NA 0.3735462 0.3735462        NA 0.3735462 0.3735462
 [2,]        NA        NA 1.1836433 1.1836433 1.1836433 1.1836433 1.1836433
 [3,]        NA        NA 0.1643714 0.1643714 0.1643714 0.1643714 0.1643714
 [4,]        NA        NA        NA        NA        NA        NA        NA
 [5,]        NA 1.3295078 1.3295078 1.3295078 1.3295078 1.3295078 1.3295078
 [6,] 0.1795316 0.1795316 0.1795316 0.1795316 0.1795316 0.1795316 0.1795316
 [7,] 1.4874291 1.4874291        NA        NA        NA        NA        NA
 [8,] 1.7383247 1.7383247        NA        NA        NA        NA        NA
 [9,] 1.5757814        NA        NA        NA        NA        NA        NA
[10,] 0.6946116 0.6946116        NA        NA        NA        NA        NA
          [,15]     [,16]     [,17]     [,18]     [,19]       [,20]     [,21]
 [1,] 0.3735462 0.3735462 0.3735462 0.3735462        NA  1.51178117  9.594887
 [2,] 1.1836433 1.1836433        NA 1.1836433 1.1836433  0.38984324  8.910682
 [3,] 0.1643714 0.1643714        NA        NA 0.1643714 -0.62124058  5.372825
 [4,]        NA        NA        NA        NA        NA -2.21469989 -4.946758
 [5,]        NA        NA        NA        NA        NA  1.12493092  8.099129
 [6,]        NA        NA        NA        NA        NA -0.04493361  4.719356
 [7,] 1.4874291 1.4874291 1.4874291 1.4874291 1.4874291 -0.01619026  4.221022
 [8,]        NA        NA        NA 1.7383247        NA  0.94383621 -2.353762
 [9,] 1.5757814 1.5757814        NA 1.5757814 1.5757814  0.82122120  2.609250
[10,] 0.6946116 0.6946116 0.6946116 0.6946116 0.6946116  0.59390132  7.089708
> 
> 
> 
> cleanEx()
> nameEx("loadingFromAlpha")
> ### * loadingFromAlpha
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: loadingFromAlpha
> ### Title: Find standardized factor loading from coefficient alpha
> ### Aliases: loadingFromAlpha
> 
> ### ** Examples
> 
>     loadingFromAlpha(0.8, 4)
[1] 0.7071068
> 
> 
> 
> cleanEx()
> nameEx("miPool")
> ### * miPool
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: miPool
> ### Title: Function to pool imputed results
> ### Aliases: miPool
> 
> ### ** Examples
> 
> ##---- Should be DIRECTLY executable !! ----
> ##-- ==>  Define data, use random,
> ##--	or do  help(data=index)  for the standard data sets.
> 
> ## The function is currently defined as
> function(imputed.results,imps){
+ 
+ MI.param<-matrix(NA,nrow=length(imputed.results),ncol=length(imputed.results[[1]]@Estimates))
+ MI.se<-matrix(NA,nrow=length(imputed.results),ncol=length(imputed.results[[1]]@SE))
+ MI.fit<-matrix(NA,nrow=length(imputed.results),ncol=length(imputed.results[[1]]@Fit))
+ 
+ for(i in 1:length(imputed.results)){
+ MI.param[i,]<-unlist(imputed.results[[i]]@Estimates)
+ MI.se[i,]<-unlist(imputed.results[[i]]@SE)
+ MI.fit[i,]<-unlist(imputed.results[[i]]@Fit)
+   }
+ 
+ #Need to remove columns representing fixed parameters
+ MI.param <- MI.param[ , colMeans( MI.param==0 ) == 0, drop=FALSE ]
+ MI.param <- MI.param[ , colMeans( MI.param==1 ) == 0, drop=FALSE ]
+ MI.se <- MI.se[ , colSums( MI.se==0 ) == 0, drop=FALSE ]
+ 
+ #compute parameter estimates
+ Estimates <- colMeans(MI.param)
+ 
+ #compute between-imputation variance: variance of parameter estimates
+ Bm <- apply(MI.param,2,var)
+ 
+ 
+ 
+ #compute within-imputation variance: average of squared estimated SEs 
+ #Um <- colSums(MI.se^2/m)
+ Um <- apply(MI.se^2,2,mean)
+ 
+ #Total variance
+ #Tm <- Um + (Bm)*((1+m)/m+1)
+ 
+ #compute total variance: sum of between- and within- variance with correction
+ SE <- Um + ((imps+1)/imps)*Bm
+ 
+ #compute correction factor for fraction of missing info
+ nu <- (imps-1)*((((1+1/imps)*Bm)/SE)^-2)
+ 
+ #compute 2 estimates of fraction of missing information
+ FMI.1 <- 1-(Um/SE)
+ FMI.2 <- 1- ((nu+1)*Um)/((nu+3)*SE)
+ FMI<-rbind(FMI.1,FMI.2)
+ 
+ #compute average fit index estimates (only some of these will be interpretable!)
+ Fit.indices <- colMeans(MI.fit)
+ 
+ MI.res<-list(Estimates,SE,Fit.indices,FMI.1,FMI.2)
+ names(MI.res)<-c('Estimates','SE','Fit.indices','FMI.1','FMI.2')
+ #compute chi-square proportion (is this useful?)
+ #(MI.fit.mat$chisq.p is a placeholder for however we'll index the p-value of chi square)
+ #chisq <- sum(MI.fit.mat$chisq.pval<.05)/m
+ return(MI.res)
+   }
function (imputed.results, imps) 
{
    MI.param <- matrix(NA, nrow = length(imputed.results), ncol = length(imputed.results[[1]]@Estimates))
    MI.se <- matrix(NA, nrow = length(imputed.results), ncol = length(imputed.results[[1]]@SE))
    MI.fit <- matrix(NA, nrow = length(imputed.results), ncol = length(imputed.results[[1]]@Fit))
    for (i in 1:length(imputed.results)) {
        MI.param[i, ] <- unlist(imputed.results[[i]]@Estimates)
        MI.se[i, ] <- unlist(imputed.results[[i]]@SE)
        MI.fit[i, ] <- unlist(imputed.results[[i]]@Fit)
    }
    MI.param <- MI.param[, colMeans(MI.param == 0) == 0, drop = FALSE]
    MI.param <- MI.param[, colMeans(MI.param == 1) == 0, drop = FALSE]
    MI.se <- MI.se[, colSums(MI.se == 0) == 0, drop = FALSE]
    Estimates <- colMeans(MI.param)
    Bm <- apply(MI.param, 2, var)
    Um <- apply(MI.se^2, 2, mean)
    SE <- Um + ((imps + 1)/imps) * Bm
    nu <- (imps - 1) * ((((1 + 1/imps) * Bm)/SE)^-2)
    FMI.1 <- 1 - (Um/SE)
    FMI.2 <- 1 - ((nu + 1) * Um)/((nu + 3) * SE)
    FMI <- rbind(FMI.1, FMI.2)
    Fit.indices <- colMeans(MI.fit)
    MI.res <- list(Estimates, SE, Fit.indices, FMI.1, FMI.2)
    names(MI.res) <- c("Estimates", "SE", "Fit.indices", "FMI.1", 
        "FMI.2")
    return(MI.res)
}
> 
> 
> 
> cleanEx()
> nameEx("plotCutoff")
> ### * plotCutoff
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: plotCutoff
> ### Title: Plot sampling distributions of fit indices
> ### Aliases: plotCutoff plotCutoff-methods plotCutoff,data.frame-method
> ###   plotCutoff,SimResult-method
> 
> ### ** Examples
> 
> loading <- matrix(0, 6, 2)
> loading[1:3, 1] <- NA
> loading[4:6, 2] <- NA
> loadingValues <- matrix(0, 6, 2)
> loadingValues[1:3, 1] <- 0.7
> loadingValues[4:6, 2] <- 0.7
> LX <- simMatrix(loading, loadingValues)
> latent.cor <- matrix(NA, 2, 2)
> diag(latent.cor) <- 1
> PH <- symMatrix(latent.cor, 0.5)
> error.cor <- matrix(0, 6, 6)
> diag(error.cor) <- 1
> TD <- symMatrix(error.cor)
> CFA.Model <- simSetCFA(LY = LX, PS = PH, TE = TD)
> SimData <- simData(200, CFA.Model)
> SimModel <- simModel(CFA.Model)
> # We make the examples running only 50 replications to save time.
> # In reality, more replications are needed.
> Output <- simResult(50, SimData, SimModel)
> plotCutoff(Output, 0.05, usedFit=c("RMSEA", "SRMR", "CFI", "TLI"))
> 
> 
> 
> cleanEx()
> nameEx("plotPower")
> ### * plotPower
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: plotPower
> ### Title: Plot sampling distributions of fit indices that visualize power
> ### Aliases: plotPower plotPower-methods
> ###   plotPower,data.frame,data.frame-method
> ###   plotPower,data.frame,vector-method
> ###   plotPower,SimResult,SimResult-method
> ###   plotPower,SimResult,vector-method
> 
> ### ** Examples
> 
> loading.null <- matrix(0, 6, 1)
> loading.null[1:6, 1] <- NA
> LX.NULL <- simMatrix(loading.null, 0.7)
> PH.NULL <- symMatrix(diag(1))
> TD <- symMatrix(diag(6))
> CFA.Model.NULL <- simSetCFA(LY = LX.NULL, PS = PH.NULL, TE = TD)
> SimData.NULL <- simData(500, CFA.Model.NULL)
> SimModel <- simModel(CFA.Model.NULL)
> # We make the examples running only 50 replications to save time.
> # In reality, more replications are needed.
> Output.NULL <- simResult(50, SimData.NULL, SimModel)
> Cut.NULL <- getCutoff(Output.NULL, 0.95)
> 
> u79 <- simUnif(0.7, 0.9)
> loading.alt <- matrix(0, 6, 2)
> loading.alt[1:3, 1] <- NA
> loading.alt[4:6, 2] <- NA
> LX.ALT <- simMatrix(loading.alt, 0.7)
> latent.cor.alt <- matrix(NA, 2, 2)
> diag(latent.cor.alt) <- 1
> PH.ALT <- symMatrix(latent.cor.alt, "u79")
> CFA.Model.ALT <- simSetCFA(LY = LX.ALT, PS = PH.ALT, TE = TD)
> SimData.ALT <- simData(500, CFA.Model.ALT)
> Output.ALT <- simResult(50, SimData.ALT, SimModel)
> getPower(Output.ALT, Cut.NULL)
  Chi   CFI   TLI   AIC   BIC RMSEA  SRMR 
    1     1     1     1     1     1     1 
> Rule.of.thumb <- c(RMSEA=0.05, CFI=0.95, TLI=0.95, SRMR=0.06)
> plotPower(Output.ALT, Output.NULL, alpha=0.05, usedFit=c("RMSEA", "CFI", "TLI", "SRMR"))
> 
> 
> 
> cleanEx()
> nameEx("run")
> ### * run
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: run
> ### Title: Run a particular object in 'simsem' package.
> ### Aliases: run run-methods run,ANY-method run,NullSimMatrix-method
> ###   run,NullSymMatrix-method run,NullSimVector-method
> ### Keywords: run
> 
> ### ** Examples
> 
> n02 <- simNorm(0, 0.2)
> run(n02)
[1] -0.1252908
> 
> 
> 
> cleanEx()
> nameEx("runMI")
> ### * runMI
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: runMI
> ### Title: Multiply impute and analyze data using lavaan
> ### Aliases: runMI
> 
> ### ** Examples
> 
> ##---- Should be DIRECTLY executable !! ----
> ##-- ==>  Define data, use random,
> ##--	or do  help(data=index)  for the standard data sets.
> 
> ## The function is currently defined as
> function(data.mat,data.model,imps) {
+   #Impute missing data
+   imputed.l<-imputeMissing(data.mat,imps)
+   
+   #Run models on each imputed data set
+   #Does this give results from each dataset in the list?
+   
+   imputed.results<-result.object(imputed.l[[1]],sim.data.model,10)
+ 
+   imputed.results <- lapply(imputed.l,result.object,data.model,1)
+   comb.results<-MIpool(imputed.results,imps)
+   
+   return(comb.results)
+ 
+   }
function (data.mat, data.model, imps) 
{
    imputed.l <- imputeMissing(data.mat, imps)
    imputed.results <- result.object(imputed.l[[1]], sim.data.model, 
        10)
    imputed.results <- lapply(imputed.l, result.object, data.model, 
        1)
    comb.results <- MIpool(imputed.results, imps)
    return(comb.results)
}
> 
> 
> 
> cleanEx()
> nameEx("simData")
> ### * simData
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: simData
> ### Title: Data object
> ### Aliases: simData
> 
> ### ** Examples
> 
> 
> loading <- matrix(0, 6, 2)
> loading[1:3, 1] <- NA
> loading[4:6, 2] <- NA
> loadingValues <- matrix(0, 6, 2)
> loadingValues[1:3, 1] <- 0.7
> loadingValues[4:6, 2] <- 0.7
> LX <- simMatrix(loading, loadingValues)
> latent.cor <- matrix(NA, 2, 2)
> diag(latent.cor) <- 1
> PH <- symMatrix(latent.cor, 0.5)
> error.cor <- matrix(0, 6, 6)
> diag(error.cor) <- 1
> TD <- symMatrix(error.cor)
> CFA.Model <- simSetCFA(LY = LX, PS = PH, TE = TD)
> SimData <- simData(200, CFA.Model)
> summary(SimData)
DATA OBJECT
Model Type
[1] "CFA"
Sample Size
[1] 200
========= Parameters Set ============
Number of free parameters =  48 
=====================================
Adding Misspecification?
[1] "No"
Adding Constraint?
[1] "No"
Maximum Random Sampling Parameters
[1] 100
> run(SimData)
               y1          y2           y3           y4           y5
1   -0.8046111752 -1.07631426  0.057240091 -0.902034704 -0.420696312
2    0.1845661447 -1.52544257 -0.596478518 -0.359547670  0.653999999
3   -0.9817757401 -1.00005564 -1.872679879  0.547026083  0.455882380
4    1.5595220347  0.98242830  1.129602919  1.133219607  0.772021261
5    1.1845054563  1.29072791  1.312650672 -0.614537216 -1.246834410
6   -2.4256861989 -0.52392194 -2.119349836  0.801628661  0.447938098
7   -0.8026802073 -0.01219081  0.886934803  0.875174982  0.264578196
8    0.0564317783  1.26623289 -0.572452230  0.960278147  1.193499939
9    1.4678439134  0.51404715 -0.801627869 -0.485880803  1.284678377
10  -0.2801358104 -0.93156744 -0.101680165  0.319593667 -1.065874756
11   1.1792641445  1.32167608  0.774530358  1.177029449  0.997148254
12   0.2512832851  0.06420740 -0.103676627  0.112671948  1.030177610
13  -0.5562904822  0.67456460 -0.825001496 -1.216956251  0.177777654
14  -1.7846349002  0.36228793 -1.174535795 -1.811801024 -3.445755945
15   1.8844565665 -0.52207420 -0.442167956  1.403236121  0.909469669
16  -0.9450853050 -0.62362148 -0.598801614  0.506571666  1.772916583
17  -0.0830153404  0.47058001  0.001676739 -0.684422114  0.600780179
18   0.0665950754  2.43186233  1.118947182  0.128773188 -0.760007378
19   0.0622396276  0.98627135 -0.268915311  1.547982009 -0.376082232
20   0.3419481062 -0.62487103  1.542539632 -0.535314198  1.106542087
21   1.1985782264  1.64208105  1.382432812 -1.009471874  0.262105365
22  -0.4293510968  0.51589042  1.488932512  1.073395543  0.686955393
23   1.4200986282 -0.52866733  0.120390484 -0.224580141 -0.155971454
24  -0.0705491629 -2.01186143 -1.466232141 -0.516212641 -2.100533772
25   1.3466283454  0.60675665  0.877981746 -0.444207704  0.161542306
26  -1.6017242717  0.05340869 -1.029065346 -0.120621102  1.478862439
27   0.4259802426  0.47192914 -0.759798041  0.564568197 -1.367560169
28  -0.2859007992 -0.69993528  0.211832132 -1.088983714 -0.934571001
29  -0.6776384472  0.42699962 -0.983766494  0.031678502 -1.051352021
30   0.9965694076 -0.44682106 -0.065970695  0.757690575  0.134087170
31   0.6689516258  1.98413121  1.435988048  1.633887657 -0.473877154
32   0.9586771234  1.49374938  1.288041369 -1.540482364 -0.355343010
33   0.1560436176  1.10926142  0.392293079  0.935218649 -0.058056466
34  -0.3087277895 -0.15282272 -0.426666197  0.195158955 -0.036496714
35  -1.7789156572 -0.98729223  0.068857396 -1.217763027 -0.696035136
36  -0.5864213022 -0.35447832  0.237590139 -0.099461109  0.126664453
37  -0.0898260271 -0.68612524 -0.786141050 -0.398156801  1.353958806
38   0.8217591672 -0.08614542  0.766062129 -0.546250077 -0.488540376
39  -0.2474624326 -0.33841511  1.306959552  1.599221517  0.449041771
40   0.7983124231  0.42443623  0.324676254  0.051605190  0.279760722
41  -1.7601828800 -0.17478985  0.636370911  0.685977001  0.966594210
42  -0.9237056523 -0.61644578 -0.384318965 -0.850917714 -0.059579365
43   0.8038108019  0.56130305 -0.264011888  0.753217636  2.033786377
44   0.3159326754  1.43198066  0.576268373 -0.529722808  0.191627241
45  -0.9343564190 -1.97445459 -0.070394714 -0.052486983 -0.163876606
46  -0.3557151440  0.37385211  1.287462437  0.427256978 -2.405817849
47   1.0826913708 -0.14199912  0.539542024  0.834912411 -0.077255382
48  -0.4128566850  0.99915976  1.314020529  0.728431705  0.382915479
49  -0.2159206218 -0.08425936  0.300475629 -0.404686197 -1.002621819
50   0.0619421753  0.10801341  0.213627927  2.446351686  0.398732807
51   0.2266293618  0.14144549  0.249164102 -0.196265932  0.872450831
52  -1.0308154924 -0.53990520 -0.220796272  0.198478361 -0.141982148
53   1.2683024818  0.39656652 -0.881286761  0.487211392 -0.493010313
54  -1.3673482061 -1.43718724  0.863880904 -0.053273932 -2.633403079
55   0.8680994051  0.18657616  0.886713345  2.102925503  0.586414579
56  -0.9307629249  1.71012216  1.650778523  1.847777398  1.440036193
57   0.8774790752  0.24183113  1.423608111 -1.670040644 -1.577749788
58  -0.6624745357 -0.70045557 -1.526864957  0.679171384 -1.585188619
59  -0.3115225525 -0.39649198  1.345648313  1.168487087 -0.063684947
60   0.4692793488  0.14865334 -0.309322773 -0.644453020 -0.222829112
61   1.2892761705  2.28797282 -0.030300470  2.318689073  2.371266377
62   0.7474805718 -0.86739494  0.572644252 -1.397647415  0.947232979
63   0.1074837636  0.23516007  1.437836622 -0.395392082  0.343439154
64  -0.9973652349  0.28581016 -0.403641569  0.063348932  0.507349406
65  -2.3727742064 -0.12214896 -1.355017126  0.340711700  0.515758889
66  -0.2499670986  0.98097458 -0.719063975  0.166783796  1.083750981
67  -1.7929329060 -0.54391751 -0.728692900 -0.963340483 -1.668545907
68   1.7767803978  2.40069567  0.405078207 -0.086200536 -0.040118010
69   0.2180282342  0.64520721 -0.101585430 -0.902103698  0.613982299
70   3.1339604178  1.26386190  1.270940677  0.330911216  1.352122921
71  -0.1257981004  0.19288365  1.246361634  0.844417864  0.700968703
72   0.0405369879 -0.52283621 -1.489348413  0.610455173 -0.660701068
73   0.4753416652  1.02396214  0.897286731  0.058406799 -0.300652676
74  -2.6896121089 -1.59271306 -1.222983423  0.344323800  0.512292304
75  -0.5459721996 -1.94441311 -0.252701665 -1.579627336 -0.616562516
76  -1.1562980910  0.53761509 -0.337667527  1.517142044  0.380359620
77   0.0461756079  1.83820458  0.349274278 -1.530174328 -1.058826095
78  -0.8394525634  0.77029198 -0.941235045  0.261422316  0.930959116
79   0.7735762697  0.28270783  0.892474553 -1.215758812 -0.010540536
80  -1.4055526947 -0.52053557 -0.520562254  0.044642182 -0.157227791
81   0.0876926804 -1.18869383 -0.590667903 -0.082211472 -0.797296923
82  -0.5601784912  0.44057418  0.403722279  0.466357336 -0.376413513
83   0.3477014913 -0.06491811  0.284962012  1.689528038  1.168464251
84  -0.5967183670 -0.86520775 -0.654419440 -1.123594100 -1.395526630
85   0.0069378021  0.84721822  1.137900497 -1.112708601  1.463669222
86   0.3724059029  1.01539418  0.652138527 -1.521239258  1.463466079
87   0.6846273936  0.56286702  1.810996943  0.482202529 -0.151856036
88  -0.0311431505 -0.72944827 -1.144921717  0.904928981  0.648768719
89   1.0222330491 -0.62944675 -0.238754397  1.487154193 -0.671822888
90  -0.8816211801 -0.12456913  0.171591870  0.394559407  0.930739885
91   0.4776675677 -1.35811178  0.318737663  0.100454326 -0.900609424
92   0.5619952735  0.28459860  1.076601552 -0.341991755  1.616954519
93  -0.4302874145  1.27019273  1.168170512  1.557765290  1.243988142
94   0.6633580217  1.34215570  1.356621377 -0.263951372 -0.447798728
95   0.4263893431  0.15549424  0.190076245 -0.295866896  3.518420142
96   0.3246717250  1.38681851 -0.768171745  1.039826748  0.143232267
97  -2.5689220583 -1.45780834  0.404270832 -0.646725550 -0.921340265
98  -0.3710570294 -1.57466459 -0.516409377  0.770443426  0.180590691
99  -0.5183829432 -0.46112702 -1.422710376 -1.224364080 -1.660193778
100 -0.3242586072 -0.27507165  0.061903789  0.026471359 -1.025248110
101 -1.2609503126 -0.70486111 -0.507378816 -0.134338565 -0.713494841
102  1.6045848173  0.60924706 -0.697639180 -0.344958469 -0.404246901
103 -1.4485630206 -2.27844364 -0.805233695  1.013196987 -0.073891149
104  0.2338258937  0.46830952  0.141031764 -0.155313724 -0.573504474
105 -1.8486311941 -1.05098556 -0.681860735 -0.176024577  0.950334139
106 -0.3283041153  0.65701945  1.171210441  0.935081261  1.930076202
107 -0.4343632529  1.31937642  0.447955703  1.392323333  0.392224341
108  0.0674252899  1.01933937 -0.025137643  1.028065609  0.944519645
109  1.4958343848  0.37488399  0.304696561 -0.873789913  0.533442943
110  2.0394896364  0.30096984  0.612835814  1.810409246  0.430684020
111  0.0835734175 -1.31707959 -1.475602012  1.466097582 -0.788365606
112  0.4470846579 -1.01873984 -0.495361215  0.212717517 -0.837058048
113  1.0421208295  1.12808265  1.340812154  1.227405799 -0.279976857
114 -0.8191013853 -0.13248490  0.534621218 -0.705433497 -0.677074351
115 -0.3304242784  0.61422254 -0.653211318  0.188324563  0.594246093
116 -2.1377502962 -0.48476208  0.368730176  0.132756757 -0.035140871
117 -0.2091200503  0.51026003 -0.285516322 -0.207461500 -0.639311797
118  0.8120153139 -0.33083480 -0.879075141 -0.472450058  0.233542202
119  1.0037847512  0.94540893  0.816626405 -0.048919084 -0.362482798
120  0.2203948484  0.15391842 -1.407684549 -0.509088729  1.504459686
121 -0.6192498466 -1.03471810 -1.154408762  0.714918955  0.347507468
122 -0.2057194149  0.53261884  0.337607591  1.595378589  2.785859126
123  0.4925496963 -0.57740847 -1.461516102  0.694755988  0.118534216
124  0.6251177511  1.09485804  0.472859291 -1.176771049 -1.401884671
125 -0.7788250912 -0.72241080  0.640321939  0.259500704  0.271035423
126  0.2752190803  0.97111113 -0.431477492  1.575331722 -0.270268057
127 -0.7993781735  0.64725055  0.486615927 -0.150713967 -0.722440477
128  0.2360389602  0.98782555 -1.532796860 -0.708888654  0.493080439
129  0.1947696306  0.11808138 -0.507710259 -1.208304904 -0.147525746
130 -0.7543222810 -0.19353856 -0.634743741  0.035831357  0.323995464
131  0.0364777409 -0.53386704  1.065800505  0.676150961 -0.218355513
132  0.8017294700  0.54418123 -0.390072598 -1.768752540 -0.230635681
133 -0.1410752497  1.25316483  0.462638265  0.153334836  0.176475025
134 -2.3272132666 -0.54815346 -2.053407810 -0.293892859 -1.611490462
135  0.5858578121  0.11172781  0.377878733 -0.851176588  0.988485624
136 -1.4983117909 -1.96235749 -0.641304054 -0.073375972 -0.013461864
137 -0.1646270615 -0.23485781 -1.501468913  0.009024364  0.419806255
138 -0.5619473342 -0.02768205 -0.482473615 -1.187471159 -0.518049014
139  0.4574666681 -1.27761038 -0.014340647 -0.989863927 -0.622180301
140  0.4426599681  0.48762869 -0.321245469 -0.192987122 -0.788140838
141 -2.8811053614 -1.42868009 -0.564172127 -0.628849626 -1.152895413
142  0.5271137018  1.36509652  1.935469929  0.197421149  0.724183949
143 -0.5480205931 -0.90477457 -2.243654952 -1.306595998 -0.361784707
144  0.2866214528 -1.00184073  0.175414431 -0.441713697 -0.383476342
145 -0.2989347840  0.13679441  1.005283550 -2.565044314 -1.797382918
146 -0.6470409833  0.68657133  0.370569944 -1.016973036 -0.771201489
147  1.5921729145  1.14847073  0.219549473  2.271368349  2.249582797
148 -0.3535601070  0.39382370  0.256236655 -0.210922889  1.176223128
149 -0.0952305565 -2.06632217 -1.531996599  0.693599814 -1.530103270
150 -0.9645143145 -2.12707819 -2.798577619 -0.503637358  0.143559577
151 -1.2918879747  0.91633051 -0.730099825  0.787046794  1.787729292
152 -0.8148407921 -0.03081609 -0.117329110  0.443054460  0.168483546
153 -1.0294216102 -0.50399120  0.372293237  0.693138139 -0.224508980
154 -0.1924169740 -0.09908451 -1.320520269 -0.509440363 -0.694841427
155 -2.5265454879 -1.27946648 -1.352039565 -1.148775994  0.203648034
156 -2.2110494521  0.14573249 -0.919260670  0.036363087 -0.579003968
157  2.4735885421  0.61666372  0.531618686  1.488585591 -0.225956474
158  0.2162645870 -0.54908073 -0.708231494 -0.964619393 -0.007419292
159  0.4180527879 -0.21528624 -0.374285226 -1.574637226 -2.193669201
160  0.8919064146  1.94692248  1.200315010  1.321480918 -0.023869545
161  1.4402861272  1.88816481  1.072004515 -0.257825877 -1.654741053
162 -0.3559376051 -1.36925712 -0.552074949  0.443181009  0.381248197
163  0.1850013016  1.37669548  1.442879015 -0.112713577 -0.511125692
164  0.7793452058  0.81957506  0.777513351  0.893118059  1.233296932
165 -0.4166360034  1.38341189 -1.985050845 -0.300849248 -1.246378362
166  2.0642791182  1.50880012  0.042295782  0.974909540  1.668061906
167 -0.0286944756 -1.10798577 -0.304971388  0.371839892  0.695168802
168 -0.5409816332 -1.21318100 -1.896672999 -0.805399936 -1.752443502
169  0.2196002599  0.73387505 -0.462463298  0.031301880 -0.174801555
170  0.0600692946  1.27654738  0.945230913 -0.996341490 -0.309708381
171  1.5526226918  1.99522573  1.640966864  1.986526514  1.258393330
172 -1.0490627965  0.57130075  0.311488098 -0.186675402  0.922119138
173  1.2004765891  0.23307498  0.613485831 -0.621354992 -0.254397663
174  0.8737714320 -1.13345846  0.198064656  0.116251992 -0.642997079
175  0.2259362154 -0.06020410  0.755926128 -1.435701850 -1.902425090
176 -0.5762347990 -0.39455036  0.912061332 -0.612576865 -0.191466199
177  1.0775836982  0.35578953 -0.019971448  0.241829138  0.983677144
178  1.5402940210  0.94742488  1.899564555  0.202650437  2.230174463
179  0.5957099263  1.29277865  0.408829149  1.887220723  0.921820500
180  0.6880409335 -0.18999702 -0.470440600  2.255135472  1.249289936
181 -1.4568005312 -2.15304083  0.082852937  0.404839140 -0.848713961
182  0.8180822063 -0.12492291 -0.226457986  1.039093890  1.264353013
183  0.0085350487  0.95009161  0.746813527 -1.199411785  0.065115291
184 -0.8939641011 -0.89628217 -1.395312079 -1.851973973  0.048860077
185  0.3770611506 -0.82593063 -0.077827629  0.609440949  1.228229304
186 -0.7712881725 -0.87282257  1.400977232 -0.555748453  0.131805493
187  2.1915617773  1.67986476  1.994084339  0.036401333 -0.433220880
188 -0.7643969337 -0.50832649 -0.744517622 -0.632476173 -0.201607745
189  1.0819301482 -0.71909962  1.372228899 -1.310534937 -0.758520258
190 -0.7123421364  0.32300913 -0.371079576 -0.492745933 -0.907730046
191 -0.7189983465 -1.27185795 -0.175885231  0.640603288  0.103894240
192  0.7583172892 -0.09565068 -0.692697098  0.531640957  0.215267582
193 -0.9703555701 -0.52581251 -1.472368273 -0.786463793  0.777350569
194  1.0112459653 -0.46863794  0.714125751  1.361975581  0.769821816
195 -0.9182959293  0.24637287 -1.615501570  0.346672013 -1.458537023
196 -0.9252478103  0.14189828 -0.068395199 -1.563108628 -0.992011965
197  0.2405863856  0.28512879  0.205783681  2.106739348  1.000298173
198 -1.4338046383 -0.14703480 -0.530694953 -0.406961890 -0.991616177
199 -1.0448672138  2.16900693  0.684512689 -0.615041648 -0.352205730
200  0.0003029223 -0.56268985 -1.389024800  0.483170167 -0.419781339
               y6
1    0.6179941475
2    2.3841030920
3   -0.5210671610
4    0.8618983254
5   -0.5965903054
6    0.5079092666
7    0.7554892060
8    0.0759523755
9    0.3448429821
10   0.8270903426
11   0.6520323544
12   0.2187776835
13  -0.7614751918
14  -1.0842821589
15   1.3073990960
16  -0.2933358142
17  -0.3709447897
18   0.8232348603
19   1.3630249192
20   0.5661929320
21   0.2333472427
22  -0.1790524497
23  -0.3303194155
24  -1.8638077984
25  -0.0470305668
26   0.9925991065
27   0.0360763824
28  -3.1385262267
29   0.3242235161
30   0.3112931851
31   0.2346677795
32  -2.2595027268
33  -0.9700838668
34   0.5123926294
35  -0.9467838132
36  -0.9988481086
37  -0.9850983251
38  -0.7062794614
39   1.6704530438
40   1.2014530657
41  -1.0180009746
42   1.8123776350
43  -1.0751010066
44   0.2606550759
45   0.4156912640
46  -2.1825506882
47  -0.7664067085
48   0.0901951194
49   0.9535732595
50   0.3275596205
51   0.3133662035
52  -0.7351711529
53   0.5990055014
54   0.0691236038
55   1.1530796520
56   2.2751153608
57  -0.7772657885
58  -0.4184061207
59   0.5570021844
60   0.0135800519
61   1.4562347698
62  -0.1606915241
63   1.0553206971
64   0.6575174650
65  -0.0064457931
66  -0.5004960987
67  -1.5875407391
68   1.4588715114
69   0.1450152233
70   1.4170530566
71  -0.9396358177
72  -0.8435121790
73   0.3106001720
74   0.8785929780
75  -0.1204969159
76   0.2351512846
77  -1.4338187045
78  -0.1775245098
79  -0.4224112349
80   0.1798781788
81   0.2759808441
82  -0.9196544711
83   1.3291241867
84  -1.5137821934
85   0.0542014781
86  -0.6383486949
87   0.9019258152
88  -0.8758974120
89   0.5240649829
90   0.5873331583
91  -0.8277965079
92   1.6769016214
93  -0.1263431034
94   0.1757383613
95   2.4100851469
96   0.1277224182
97   0.0380878951
98  -0.8026523328
99   0.3441348793
100 -0.3744830375
101  0.8171696350
102 -0.5970039946
103 -0.0836246991
104  0.5234689281
105  0.1652072182
106  2.7678423082
107 -0.2248226632
108  0.6393303014
109 -0.2844623559
110  1.5950208131
111 -0.5345115647
112 -0.1718814698
113  1.3223714503
114 -0.8267943193
115 -1.2501643665
116  0.5707592534
117 -0.4603694843
118 -0.4897231475
119 -0.3598309982
120 -0.6777209643
121 -0.2961381560
122  0.3748771023
123 -0.1329765395
124 -0.3388851746
125 -0.0740007446
126  0.7564669876
127  0.2417537936
128  0.3728457658
129 -1.2005512461
130 -0.0860053439
131 -0.7833938660
132 -1.3332793865
133  0.2406272761
134  0.7057869198
135  0.0245208704
136 -2.0124343197
137  0.2573572724
138  0.6454394047
139 -0.1853828197
140  0.1424444177
141 -1.0708189839
142 -0.0004923891
143 -1.3551431460
144 -0.5058542361
145 -0.9846668092
146 -1.6522967359
147  0.9428419453
148 -1.1915902455
149 -0.6615683484
150 -0.3713791201
151  0.3478756064
152  0.2765388848
153 -0.5912612861
154 -0.9346831386
155  0.0996599492
156 -0.8123513719
157 -0.8482965984
158 -0.4944002434
159 -1.6478423913
160  2.2078647051
161 -0.7721463282
162  0.4896399583
163  1.8913933741
164 -0.9251694736
165  0.0661836225
166  2.6456754802
167 -0.6546683930
168  0.4592944235
169 -0.9303217232
170 -0.1381548765
171  0.8814669819
172 -0.1421422073
173  0.6732022888
174  0.2769714851
175  1.0684121652
176  0.7226096161
177  0.5400740761
178  1.5557614885
179 -0.9597134621
180  1.3431949204
181 -0.9988654731
182  1.2009401176
183  0.3164919950
184 -0.9332768354
185  0.7919200863
186  0.0263290420
187  0.4425107961
188 -0.2406488019
189 -1.4023763935
190 -1.5769701417
191  0.7074369687
192  0.9056765564
193  0.0242501277
194 -0.0370726502
195 -1.4766378477
196 -0.8228911709
197  1.9781018188
198 -0.5899365055
199  0.8213608428
200  0.3499667201
> 
> # With Misspecification Model
> n01 <- simNorm(0, 0.1)
> error.cor.Mis <- matrix(NA, 6, 6)
> diag(error.cor.Mis) <- 1
> TD.Mis <- symMatrix(error.cor.Mis, "n01")
> CFA.Model.Mis <- simMisspecCFA(TD=TD.Mis)
> SimData <- simData(200, CFA.Model, misspec=CFA.Model.Mis)
> summary(SimData)
DATA OBJECT
Model Type
[1] "CFA"
Sample Size
[1] 200
========= Parameters Set ============
Number of free parameters =  48 
=====================================
Adding Misspecification?
[1] "Yes"
Adding Constraint?
[1] "No"
Misfit bound
[1] "No"
Maximum Random Sampling Parameters
[1] 100
> run(SimData)
              y1            y2           y3           y4            y5
1    1.387245655  1.1042057878 -0.437818970 -0.159268043  1.7148347945
2    0.815231274  1.6171687065  0.046822461  1.082210346  0.5163348495
3   -0.643583529 -0.1106267157 -1.321244940  0.684354205 -0.3366121686
4   -0.093333677 -0.0444896069 -0.062206112  1.171901106  1.1488414915
5   -0.533711003 -1.5024551306  0.880318264  0.012275219  1.8953230331
6   -0.648319641 -1.4843483063 -0.249007168 -0.065154959 -0.7379660386
7    1.564753770  1.0258036066  0.505373608  1.150671975  1.0141224505
8   -0.316061373 -0.5003580138 -1.425853294  1.193253507  0.4799905121
9   -0.302788066 -1.8925633953 -0.706758383  1.211960735  0.8272236175
10   0.830721225 -0.9502818481 -0.628537639  1.154641153  2.0106548816
11   0.582184268  0.5263390660 -0.021830586  1.030744192 -0.5867439454
12   0.042529000 -0.0066482451 -0.038865790 -1.696676103 -0.7152271284
13   0.805538033 -1.0478040295 -0.128728913  0.097118621 -0.9097322982
14   1.995750917  2.1391724871  1.883761683  2.585594992  0.3238496056
15  -0.729889488 -0.0690591621  0.276659664  0.175062859  0.4164424752
16  -0.437791735 -0.1028303279  0.695044839 -0.321179912 -0.9193814844
17  -0.293215294  0.5546841842 -0.038519810  1.928513879  0.0874086655
18  -1.726364135  0.6968312530 -1.152295474  0.073475160  1.9089415165
19   0.049976598 -1.1290444812 -1.324608738  0.672292225 -0.3369250606
20  -1.272917546 -1.6324618946 -0.293345599  0.541308527 -0.1666593217
21   1.209909519  0.3074654919  0.142475024  0.373421129  1.3349302426
22   0.520166277 -1.9513120874 -1.309270834  0.547742656  2.3416917381
23   0.061238868  0.8376213560  0.183094057  0.278336533 -0.6181535647
24  -0.671652691 -0.4103253677 -1.386724768  0.241627135  0.3386723220
25  -2.084882301 -1.9604647581 -1.441456205  0.340302705 -0.3138399900
26   1.612476560 -0.5334312055 -1.158775014 -0.553592581  0.3350274062
27   2.505399452  2.8949641185  3.869661265  0.015125239  0.3412485550
28  -0.120075695 -1.5944683867 -0.784503457 -1.259866931 -1.4426162835
29  -0.452209140 -0.7841061450 -1.375709733 -1.049556380 -1.0423587825
30   0.183622212 -0.5355009199 -0.562193410 -2.181607125 -1.7094345798
31   1.048139682 -0.4800887136  0.459569995 -0.298758660 -0.2469829776
32   0.925275144 -0.3933059774  1.017238896  1.049058025  1.3205663491
33   1.573202384  1.1507484677  0.787511464 -0.707723603 -0.8692417427
34  -0.862734834  0.1410479343 -0.113243513 -1.273039332  1.1351516369
35  -0.494425582 -0.7251642485 -1.013260750 -1.224500048 -0.4875879045
36   0.226560194 -0.2779149268  1.083009855 -0.092890901  0.4293338974
37   2.252886561  0.4437790094 -0.693897851  0.796060213 -0.1440455131
38   1.879507733  1.6875424762  0.919717676  1.597050627  1.2166223783
39   1.270116774  0.7204346328  0.325008701  1.580692356  0.4814262056
40  -2.017162572  0.6303067008 -0.538391823 -0.577295667 -0.8795748214
41  -0.908058488  0.4642201405  0.159963088 -0.900876396 -0.4813245723
42  -0.329914889  0.8434100421  0.359143374  0.705123506 -0.6049762193
43  -0.986670710 -0.4537142608 -0.476273465  1.017362523 -0.3210852423
44  -0.353506143 -0.3565325682  0.353935456  1.501607215  0.1728872573
45  -1.123179077 -2.5642158285 -1.006696704 -0.509464413  0.0372678401
46  -0.237320323 -0.5944438822  0.346650282 -0.495128298  0.2722730323
47  -1.127565430 -0.1288577580 -1.409912042 -0.268496831 -0.5277205144
48  -0.082256522 -1.9171564356 -0.562329589 -0.118386405 -0.8343395968
49  -1.344449525 -0.0325530245  0.941926081 -0.919892932 -0.9706033633
50   0.070097600  0.1309502755  0.078203015  0.081078549 -1.5791085712
51  -0.240335275 -1.7787717987 -0.548195269  1.709351029  0.3899815823
52   1.466254055  0.3179743459  0.624594228  0.777114365 -1.0256910911
53  -0.880799622 -0.6652115621 -0.780748548  0.337693649  0.2021999652
54  -0.762356204 -0.0382965765 -0.565086157 -1.161950567 -0.4786951008
55   1.524710448  1.1247602996  2.113993181  0.246387088  1.1538167485
56   1.051902786  2.5816792952  0.468691721  0.361815672  0.4566607351
57   0.714487617  1.2155129657  1.124765627 -0.917564026  0.2256448966
58   1.212599909  2.9856177320  1.897233666  0.914094262 -0.2935440276
59  -0.457510466  0.8620737775 -1.169590998 -0.803726149 -1.1591315136
60   1.086885458  0.7957061978  0.921788982  2.195845402  1.2499323501
61   0.793411825  1.2169459201  1.258605561  0.594568392  1.3664199622
62  -1.283681094  0.7684805921 -1.238619253  2.009923383  0.4510717252
63  -0.473782935  0.9986312290  0.971054945 -0.235367657  1.1678416783
64   0.239626292  0.3172518282  0.848739384 -1.038526832  0.1897303403
65   1.091792272 -0.7803736373 -0.146154170 -0.717452162  0.7684611020
66  -1.103631799 -0.7991379148 -0.473206802 -1.273027234 -1.4694543057
67   0.273035327  0.6001124440  1.232092086 -0.523440957 -0.5815397946
68   3.036589002  0.5962274652  0.608496351  1.142232004  1.9182728532
69   0.200573200  1.6997501803  2.204552902  0.886824771  1.2746034415
70  -0.147615825 -0.2313274638 -0.314803895  0.384791185  0.7586867211
71  -0.016310344  0.1083882226 -1.047264536 -0.100108724 -0.1280808217
72  -0.438749198 -0.2293649156 -0.025952580  1.710396675 -0.3164441603
73   1.445331687 -0.0367090596  0.723289231  1.079980532  0.3450807429
74   1.907976685 -0.0289812583  2.204891927  0.032504319  0.7596973447
75   0.060225424  0.3195298290 -0.170572280  0.366989415  0.2305056649
76  -0.103370633  0.8967057789  0.891426545  1.612016694  0.0523438717
77   0.278086386  1.2023249934 -0.983486765  0.321945174 -0.3437048059
78   0.272930556  1.0687128254  0.193129601  0.393646969 -0.5650748270
79  -0.216921419 -0.1611071752  1.274056559  0.099103096  1.8401131802
80   1.910603118  1.9496950750  1.652666937  3.133202250  2.8688650217
81   0.279161963 -0.4962463102 -0.048237866  0.334577583 -0.5313834193
82  -0.183094188 -0.6729260112  0.043724893  0.713965569 -0.5771751163
83   0.001338818 -0.0613586079 -1.298374769  1.981029286 -0.4331283727
84  -1.195268971  0.8943252522  1.181564344 -1.462470568 -0.4055252401
85   1.278125088  0.6012344209  0.648875590  0.400482487 -0.8564664836
86  -0.581667593  0.2008997366 -0.092217682 -0.398794749  0.5705686247
87   1.491522545  1.1321966923  1.296863879  0.644849961  0.3189473498
88  -0.302955801 -1.0807089340 -1.774342907  1.209231122  0.0028294153
89  -0.387687275  0.1097024339 -0.868967500 -2.431531612  0.2401999734
90   0.921858399  0.5071920404  0.997867261  1.943464669  0.9837746928
91  -1.221598227  0.1817649275  1.743149718  0.422824789 -0.4825904498
92  -1.677936717 -0.9205257588 -0.481660871 -0.087124533  0.7585452469
93  -0.899057431 -1.4637491742 -1.620562403 -0.088752709 -0.2629372552
94  -1.138230610  0.2304784735 -0.065537782  0.438790733 -1.3514539077
95   0.133482871 -0.5261595040  0.743727696  1.482507430 -0.5469780672
96   0.643456461 -0.1694147425  0.921399539 -2.014021116 -1.0114507992
97   0.946765236  0.2949915775  1.825150920  1.340271277  1.2458452198
98   0.255194515  0.5400506859  1.350581471 -0.753904312  0.3752238206
99  -0.829862250  0.2171074043  0.728619356 -0.672295592  1.0629728414
100  0.157671983 -0.2496322556  0.079764637  0.320104087 -1.0727408593
101 -1.172091271  0.2547551481  0.638229343  0.148161980 -0.6962253980
102 -0.541684734  0.7925555417 -0.331904950  1.039528211 -0.3299258985
103  0.326855599 -0.7573180794  1.464296503  0.128627845  1.6253842092
104 -1.442186519  0.0471038359 -1.096130245 -0.567188134 -1.4996198888
105 -0.148377842 -0.5750838323  0.382662744  1.817704172  1.4232453885
106  1.090006153  1.1124672142 -0.308000837 -0.410708628 -1.8483508613
107  0.266928308  0.8090912961 -0.084322468  0.190295770  0.7932017935
108 -0.947593547 -0.7866052512 -1.273333705  0.142240798  2.6329862014
109  0.485512196 -0.1783477321 -1.470998735 -1.586305386 -1.0273935507
110  0.568721094  0.6034045071  0.616079950  0.190508597  0.3153988107
111 -0.077152224  0.1362250728 -0.804096755  0.335381147 -1.1283037330
112 -0.480566235  1.1327722629  1.491519907 -0.028249880  1.0935707333
113 -0.333080310 -1.5531820582  0.542051993 -0.989667212 -0.2133536692
114 -1.429605671 -1.1226527449 -0.424258247 -1.455588599 -2.1548697749
115 -2.245883937 -0.3373343628 -1.772680849 -0.278634590  1.4829278237
116  0.122846064 -0.9357828638 -0.508225840 -1.119827239 -0.0006084056
117 -1.119871392 -0.9406140224 -1.098636848  0.002962904 -1.6290994604
118  1.853761984 -0.0124128337  1.740978934 -0.865563695 -2.4342394029
119 -1.452823089 -0.9430716060 -0.347653816 -0.434435411  0.2306856005
120 -2.252380068 -0.2455836678 -0.123865429  0.131060721  1.4954580571
121  0.483901586  1.0718143000 -0.234299678  0.260326353 -0.1508610399
122 -0.255094527 -0.8854859040 -0.900424732 -2.839695997 -0.4777990493
123  1.351833206 -1.4718989482 -0.624972344  2.660812436  0.1995301290
124  0.428045720  0.2747892629 -0.764320576 -0.082680060 -0.3611863255
125  0.008601714 -0.2886595347 -1.215820934 -0.365251306  0.1494030113
126 -2.002598657 -1.9814129207 -0.928256617 -1.969586681 -0.9445333357
127  0.048808459 -0.6176354864  0.177260277 -0.963561068 -0.8411105278
128 -0.471843941 -0.0998095138 -0.150510899 -0.397100042  0.8064319963
129  1.421275172  1.3515999825  0.877388222 -0.534786286  0.3511302126
130  1.208774491  2.3108640932  2.209248507 -0.283731053  0.4568065477
131  0.645163755  0.4054039282  1.464888726  0.784128487  0.2198121008
132 -1.659884307 -0.5998553452 -0.355683449  0.017967075 -0.3342994654
133 -0.288905290 -0.4859562080 -0.144269575 -1.429052944 -0.1102230844
134 -0.015584194 -1.2710411770  0.243931031  0.376214994 -0.4076728648
135 -0.846226149 -1.3939536193 -0.546778262 -0.322312367 -0.6900032909
136 -1.249807867 -1.3901429637 -0.132088373 -1.368699596 -1.3907570463
137  0.487613903 -0.3985176070  1.440100099  0.671108764  1.0763610743
138 -1.460449964  0.0443763390 -0.216444919  1.814623674 -0.1169860381
139  0.173382967  0.3295139300  0.307026585  0.883235543  0.9175364187
140 -2.195553305 -0.8639772002 -0.463713640 -0.687926893  0.0970467741
141 -0.478272778 -0.6802041426 -0.192806877 -0.731926481  0.2602068239
142 -0.549168718 -1.7306290579 -2.441924452  0.664874966 -0.4402414271
143 -0.186865523 -0.8524153048 -0.774495507 -0.213831707 -1.1482793359
144  1.485422464  0.6521609844 -0.322346814  1.022230980 -1.3426432501
145  0.402621739 -0.7970900593 -0.621000070 -1.468089658 -1.0743557903
146 -1.025479531 -0.1765374810 -1.127579243 -0.596171049 -0.7119134066
147 -0.587745115 -0.7104416679 -0.969569243 -1.498921392 -0.8840572624
148 -1.866591801 -1.1567350663  0.360711453 -0.651015854 -1.4088570573
149 -0.329575504 -1.0420483042 -1.278227641 -0.263394878  0.9780781166
150  1.023318776  2.0307102260  1.444152854  0.250554916  1.2318267333
151  0.979705955 -0.0347092378  0.354703271 -1.302902095 -2.1100563437
152 -2.905827564  0.3192632622 -2.419407773 -0.241482513  1.0357274874
153 -0.498830013 -1.4698427106 -1.462442031 -1.180393544 -0.6559083952
154 -0.782888546 -0.6222271668 -0.334013825  1.412626032  0.4683445080
155  0.813963822 -1.7123753967  0.529813673 -0.592060113 -0.3816023617
156  0.195557791  0.3655558683 -0.180361342  1.751355917  0.1207197808
157  0.387927971  1.3724810098  0.611548197 -1.003093436 -1.2396133544
158  0.826940305 -0.8760968534  1.310926812  1.047973607  0.1955333862
159  0.277765838 -0.0070737551  0.543115507  0.334894456  1.9059609430
160  0.719621086  1.3437410880  1.306881594  0.053926306 -0.2372349528
161 -0.061198308  0.3388385831  0.937148588  0.333832748 -0.1134961334
162  1.493878056 -0.1724769995 -0.908653576  1.300645410  0.8787077552
163 -0.853780197  0.5480689329 -0.490287619  0.149849016  0.8365296021
164  1.144682415  0.1845408874  0.899344702  1.121935487  0.3297284305
165 -0.383422644 -0.2447619865 -0.195033639  0.433442758 -0.3791559494
166 -0.413879542  0.4829513229  0.395975261 -0.348381782 -1.6778257340
167 -2.162328036 -0.3528590692 -1.548556080  0.685834647 -0.3488952545
168 -0.520635640  1.2314995991  0.466931064 -1.080734606 -1.9903650837
169 -0.854856176  0.0829277458  0.633625720 -0.951061187 -1.3549665487
170 -0.782075429  0.9384527929  0.081434708  1.663624985  0.3811293707
171 -0.132635604 -1.0302395953 -0.516986398  0.256677637  0.9798874094
172  0.268823068 -0.1448728776  0.971931027 -0.918467562 -2.3028219511
173  0.324102607 -1.8797821389 -1.078929481 -0.546786427 -0.1728737145
174  1.131036510  1.4600427776 -0.005300601  0.969895622  0.7459696670
175  0.814209341 -0.5827714536 -0.660994490 -0.054531363 -0.6067049701
176 -0.177067183 -0.7343937055 -0.752983650  0.072930410 -1.1910716366
177  0.704897207 -0.6217812125  0.218846741  0.299768064 -0.8100800915
178  0.350901605 -0.2985901956 -0.071443370  1.577732670 -0.8597536462
179 -0.348303105  0.8347685243 -0.453938921  0.251284932  1.2104829555
180  1.156890860  0.5592882540  0.146661932 -0.540470166 -0.6985050911
181  0.588191344 -0.1246631397  1.197600658 -1.395694356  0.9548045630
182 -0.736627220 -2.2260549356 -1.373206406  0.931694723 -0.0800504759
183  0.681838101  0.2905665265  2.284712020 -0.788933833  0.6006817236
184  1.767906470  1.5226520380  0.499862582 -1.793354691 -0.6709500137
185  0.319582376  0.8718672138  0.271902640  1.014016099  0.7638684739
186  0.352655038  1.2509787110  1.047676716  0.870531145  1.8883878251
187 -0.947334607  0.0215018600  1.269520585 -0.076744155  0.6543219005
188  1.139381310 -0.2097507791 -0.306195460 -0.602774406 -0.9715479645
189 -0.402694073 -1.4620130834 -0.152194122 -1.409697923 -1.1555383879
190 -0.316674263 -0.5594044905 -0.044718235 -0.335524137 -0.8561858126
191 -0.650889081 -1.3554416081 -1.099086759 -1.298446011  1.1097098675
192  0.263828747 -0.8484472611  0.919854867  1.090464366 -0.2048208204
193 -2.088854038 -1.2312611738 -0.589293928 -1.423422843 -0.5385946653
194 -2.551628908 -1.0643394335 -0.351026769 -0.783757842 -2.1924785318
195 -0.778268021 -0.5717688788 -0.554396944 -0.502207294 -0.4227339445
196  0.176627736  0.5859430428  0.387177679  1.068872983  0.6815434362
197  0.464248324  1.7940825123  1.115092807 -0.901023553 -1.2563185624
198 -0.386235228  0.0002385808 -1.319079848 -0.073011331 -0.0256850647
199  0.838625784  1.2646600105  1.089058327 -0.703067628  0.0570365867
200  0.106966544 -0.6795557691 -0.632991994 -0.028553881  0.5279484651
              y6
1    0.183809330
2    1.080160052
3    0.552565416
4    1.011986498
5    0.441824065
6    1.097333603
7    1.831620332
8    1.221772208
9    0.642214582
10  -0.282222258
11   0.042309524
12  -0.433666717
13   0.968975622
14   1.591707591
15  -0.362208450
16  -0.109640572
17   0.724949655
18   1.819822987
19  -0.104320634
20  -1.545887858
21   0.053599014
22   0.330651096
23   1.204254601
24   0.712591050
25  -1.207720594
26   0.577166658
27   0.022177424
28  -0.698307260
29   0.729176094
30  -0.587315613
31  -1.955582355
32   1.656837391
33  -2.553298786
34  -0.058691297
35  -1.256072843
36  -1.104677169
37   1.523885313
38   1.821987167
39   0.928550158
40  -0.129371919
41  -0.364600474
42   1.478957785
43   1.179853124
44  -0.207134116
45  -0.130264158
46  -1.013542555
47  -0.276495763
48  -0.233272219
49  -0.575972765
50  -0.455351782
51   0.445093621
52   0.396409182
53  -0.268231892
54  -0.452576926
55   0.359325528
56  -0.909418712
57   0.449683583
58   0.145228355
59  -1.218366415
60   2.019048057
61  -0.279895224
62   0.531996299
63   0.091485113
64  -0.309241601
65  -0.663575965
66  -1.243358063
67   1.996898278
68   1.344786401
69   2.168201416
70   0.235573991
71   0.747972039
72   0.034659831
73   1.068092936
74   1.086417873
75   0.839820126
76   1.148203900
77  -0.584445450
78   0.645505097
79   1.950102258
80   3.174604178
81   0.244168864
82  -2.021195989
83   1.609813442
84  -0.650570904
85   0.491807074
86   1.678519963
87   0.427785031
88  -1.927794489
89  -1.527522717
90   0.972704515
91   0.265722378
92  -1.314227228
93   0.001219875
94  -0.343413122
95   1.096573286
96  -0.498098886
97  -0.237216086
98  -0.782967994
99   0.284050189
100  0.702193429
101 -0.373877851
102 -1.305335832
103  1.879802333
104 -0.845347349
105  1.486142928
106 -1.050805043
107  0.990212394
108 -0.003460448
109 -1.654285047
110 -0.893973037
111 -1.038710341
112  1.329098817
113 -0.793571446
114 -0.628661518
115 -0.295252936
116  0.132864689
117  1.451730567
118 -1.241435111
119  0.544508663
120 -0.662480934
121 -0.107079470
122  0.661920998
123  0.952838876
124  0.495036402
125  1.557436432
126 -0.392043604
127  0.980451510
128 -1.929803739
129 -0.046849109
130 -0.288489705
131  1.450020109
132 -1.561771605
133 -0.754535836
134  0.712842180
135 -0.477593929
136 -0.943648087
137 -0.082705929
138  0.209966600
139 -0.130939604
140 -0.741562111
141  0.448898047
142 -0.230172949
143 -0.171702960
144 -0.569704573
145  0.268531342
146 -0.371952028
147 -0.621075136
148 -1.066155829
149 -1.547361301
150  0.896118677
151 -0.532931889
152 -0.281118556
153 -0.405325868
154 -0.749852060
155 -0.247985885
156 -1.235454255
157 -1.270278226
158  0.996704900
159 -0.148312422
160  1.075453893
161 -0.452329926
162  1.905564246
163 -0.499353164
164  0.085134960
165  0.131303386
166 -1.189471365
167 -1.197630622
168 -0.967929994
169 -0.577405706
170  0.042532710
171  0.233018570
172 -0.418687511
173 -0.271493553
174  1.803688145
175  0.135252142
176 -2.257693758
177 -1.527205893
178 -0.322282400
179  1.867932101
180 -0.966660677
181 -0.768790448
182 -0.711009803
183  0.145567396
184 -0.922897646
185 -0.266802966
186  0.833118541
187 -0.199124937
188 -0.189495386
189  1.485252799
190 -0.213910846
191 -0.398284366
192  0.272113003
193 -0.052275445
194 -0.101201681
195  0.135763916
196  1.476079758
197 -0.720322311
198 -0.191060773
199  0.156203229
200 -0.712412671
> 
> 
> 
> cleanEx()
> nameEx("simEqualCon")
> ### * simEqualCon
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: simEqualCon
> ### Title: Equality Constraint Object
> ### Aliases: simEqualCon
> 
> ### ** Examples
> 
> # Example 1: Single-group, one constraint
> constraint <- matrix(0, 3, 2)
> constraint[1,] <- c(1, 1)
> constraint[2,] <- c(2, 1)
> constraint[3,] <- c(3, 1)
> rownames(constraint) <- rep("LY", 3)
> equal.loading <- simEqualCon(constraint, modelType="SEM.exo")
> 
> # Example 2: Multiple-group, one constraint
> group.con <- matrix(0, 2, 3)
> group.con[1,] <- c(1, 2, 1)
> group.con[2,] <- c(2, 2, 1)
> rownames(group.con) <- rep("BE", 2)
> equal.path <- simEqualCon(group.con, modelType="Path")
> 
> # Example 3: Single-group, multiple constraints
> constraint1 <- matrix(1, 3, 2)
> constraint1[,1] <- 1:3
> rownames(constraint1) <- rep("LY", 3)
> constraint2 <- matrix(2, 3, 2)
> constraint2[,1] <- 4:6
> rownames(constraint2) <- rep("LY", 3)
> constraint3 <- matrix(3, 2, 2)
> constraint3[,1] <- 7:8
> rownames(constraint3) <- rep("LY", 2)
> equal.loading2 <- simEqualCon(constraint1, constraint2, constraint3, modelType="SEM")
> summary(equal.loading2)
CONSTRAINT OBJECT
Model Type
[1] "SEM"
-------------Constraint----------------
1.
   Group Row Column
LY    NA   1      1
LY    NA   2      1
LY    NA   3      1
---------------------------------------
2.
   Group Row Column
LY    NA   4      2
LY    NA   5      2
LY    NA   6      2
---------------------------------------
3.
   Group Row Column
LY    NA   7      3
LY    NA   8      3
---------------------------------------
> 
> 
> 
> cleanEx()
> nameEx("simMatrix")
> ### * simMatrix
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: simMatrix
> ### Title: Create simMatrix that save free parameters and starting values,
> ###   as well as fixed values
> ### Aliases: simMatrix
> 
> ### ** Examples
> 
> loading <- matrix(0, 6, 2)
> loading[1:3, 1] <- NA
> loading[4:6, 2] <- NA
> loadingValues <- matrix(0, 6, 2)
> loadingValues[1:3, 1] <- 0.7
> loadingValues[4:6, 2] <- 0.7
> LX <- simMatrix(loading, loadingValues)
> summary(LX)
[1] "Random Full Matrix Object."
[1] "Free/Fixed Parameters:"
     [,1] [,2]
[1,]   NA    0
[2,]   NA    0
[3,]   NA    0
[4,]    0   NA
[5,]    0   NA
[6,]    0   NA
[1] "Parameter/Starting Values:"
     [,1]  [,2] 
[1,] "0.7" ""   
[2,] "0.7" ""   
[3,] "0.7" ""   
[4,] ""    "0.7"
[5,] ""    "0.7"
[6,] ""    "0.7"
> run(LX)
     [,1] [,2]
[1,]  0.7  0.0
[2,]  0.7  0.0
[3,]  0.7  0.0
[4,]  0.0  0.7
[5,]  0.0  0.7
[6,]  0.0  0.7
> 
> n65 <- simNorm(0.6, 0.05)
> LY <- simMatrix(loading, "n65")
> summary(LY)
[1] "Random Full Matrix Object."
[1] "Free/Fixed Parameters:"
     [,1] [,2]
[1,]   NA    0
[2,]   NA    0
[3,]   NA    0
[4,]    0   NA
[5,]    0   NA
[6,]    0   NA
[1] "Parameter/Starting Values:"
     [,1]  [,2] 
[1,] "n65" ""   
[2,] "n65" ""   
[3,] "n65" ""   
[4,] ""    "n65"
[5,] ""    "n65"
[6,] ""    "n65"
> run(LY)
          [,1]      [,2]
[1,] 0.5686773 0.0000000
[2,] 0.6091822 0.0000000
[3,] 0.5582186 0.0000000
[4,] 0.0000000 0.6797640
[5,] 0.0000000 0.6164754
[6,] 0.0000000 0.5589766
> 
> 
> 
> cleanEx()
> nameEx("simMisspecCFA")
> ### * simMisspecCFA
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: simMisspecCFA
> ### Title: Set of model misspecification for CFA model.
> ### Aliases: simMisspecCFA
> 
> ### ** Examples
> 
> n01 <- simNorm(0, 0.1)
> error.cor.Mis <- matrix(NA, 6, 6)
> diag(error.cor.Mis) <- 1
> TD.Mis <- symMatrix(error.cor.Mis, "n01")
> CFA.Model.Mis <- simMisspecCFA(TD=TD.Mis)
> 
> 
> 
> cleanEx()
> nameEx("simMisspecPath")
> ### * simMisspecPath
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: simMisspecPath
> ### Title: Set of model misspecification for Path analysis model.
> ### Aliases: simMisspecPath
> 
> ### ** Examples
> 
> u1 <- simUnif(-0.1, 0.1)
> mis.path.GA <- matrix(0, 2, 2)
> mis.path.GA[2, 1:2] <- NA
> mis.GA <- simMatrix(mis.path.GA, "u1")
> Path.Mis.Model <- simMisspecPath(GA = mis.GA, exo=TRUE)
> 
> 
> 
> cleanEx()
> nameEx("simMisspecSEM")
> ### * simMisspecSEM
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: simMisspecSEM
> ### Title: Set of model misspecification for SEM model.
> ### Aliases: simMisspecSEM
> 
> ### ** Examples
> 
> u2 <- simUnif(-0.2, 0.2)
> n1 <- simNorm(0, 0.1)
> loading.X.trivial <- matrix(NA, 6, 2)
> loading.X.trivial[is.na(loading.X.trivial)] <- 0
> LX.trivial <- simMatrix(loading.X.trivial, "u2")
> error.cor.X.trivial <- matrix(NA, 6, 6)
> diag(error.cor.X.trivial) <- 0
> TD.trivial <- symMatrix(error.cor.X.trivial, "n1")
> error.cor.Y.trivial <- matrix(NA, 2, 2)
> diag(error.cor.Y.trivial) <- 0
> TE.trivial <- symMatrix(error.cor.Y.trivial, "n1")
> TH.trivial <- simMatrix(matrix(NA, 6, 2), "n1")
> SEM.Mis.Model <- simMisspecSEM(LX = LX.trivial, TE = TE.trivial, TD = TD.trivial, TH = TH.trivial, exo=TRUE)
> 
> 
> 
> cleanEx()
> nameEx("simModel")
> ### * simModel
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: simModel
> ### Title: Create simModel from model specification and be ready for data
> ###   analysis.
> ### Aliases: simModel simModel-methods simModel,ANY-method
> ###   simModel,SimSet-method simModel,SimFreeParam-method
> 
> ### ** Examples
> 
> loading <- matrix(0, 6, 2)
> loading[1:3, 1] <- NA
> loading[4:6, 2] <- NA
> loadingValues <- matrix(0, 6, 2)
> loadingValues[1:3, 1] <- 0.7
> loadingValues[4:6, 2] <- 0.7
> LX <- simMatrix(loading, loadingValues)
> latent.cor <- matrix(NA, 2, 2)
> diag(latent.cor) <- 1
> PH <- symMatrix(latent.cor, 0.5)
> error.cor <- matrix(0, 6, 6)
> diag(error.cor) <- 1
> TD <- symMatrix(error.cor)
> CFA.Model <- simSetCFA(LX = LX, PH = PH, TD = TD)
> SimModel <- simModel(CFA.Model)
> 
> 
> 
> cleanEx()
> nameEx("simNorm")
> ### * simNorm
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: simNorm
> ### Title: Create random normal distribution object
> ### Aliases: simNorm
> 
> ### ** Examples
> 
>     n02 <- simNorm(0, 0.2)
>     run(n02)
[1] -0.1252908
> 
> 
> 
> cleanEx()
> nameEx("simResult")
> ### * simResult
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: simResult
> ### Title: Create simResult.
> ### Aliases: simResult
> 
> ### ** Examples
> 
> loading <- matrix(0, 6, 1)
> loading[1:6, 1] <- NA
> LX <- simMatrix(loading, 0.7)
> PH <- symMatrix(diag(1))
> TD <- symMatrix(diag(6))
> CFA.Model <- simSetCFA(LY = LX, PS = PH, TE = TD)
> SimData <- simData(500, CFA.Model)
> SimModel <- simModel(CFA.Model)
> # We make the examples running only 50 replications to save time.
> # In reality, more replications are needed.
> Output <- simResult(50, SimData, SimModel)
> #summary(Output)
> 
> 
> 
> cleanEx()
> nameEx("simSetCFA")
> ### * simSetCFA
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: simSetCFA
> ### Title: Create a set of matrix that belongs to CFA model.
> ### Aliases: simSetCFA
> 
> ### ** Examples
> 
> loading <- matrix(0, 6, 2)
> loading[1:3, 1] <- NA
> loading[4:6, 2] <- NA
> loadingValues <- matrix(0, 6, 2)
> loadingValues[1:3, 1] <- 0.7
> loadingValues[4:6, 2] <- 0.7
> LX <- simMatrix(loading, loadingValues)
> summary(LX)
[1] "Random Full Matrix Object."
[1] "Free/Fixed Parameters:"
     [,1] [,2]
[1,]   NA    0
[2,]   NA    0
[3,]   NA    0
[4,]    0   NA
[5,]    0   NA
[6,]    0   NA
[1] "Parameter/Starting Values:"
     [,1]  [,2] 
[1,] "0.7" ""   
[2,] "0.7" ""   
[3,] "0.7" ""   
[4,] ""    "0.7"
[5,] ""    "0.7"
[6,] ""    "0.7"
> 
> latent.cor <- matrix(NA, 2, 2)
> diag(latent.cor) <- 1
> PH <- symMatrix(latent.cor, 0.5)
> 
> error.cor <- matrix(0, 6, 6)
> diag(error.cor) <- 1
> TD <- symMatrix(error.cor)
> 
> CFA.Model <- simSetCFA(LX = LX, PH = PH, TD = TD)
> 
> 
> 
> cleanEx()
> nameEx("simSetPath")
> ### * simSetPath
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: simSetPath
> ### Title: Create a set of matrix belongs to Path analysis model
> ### Aliases: simSetPath
> 
> ### ** Examples
>  
> u35 <- simUnif(0.3, 0.5)
> u57 <- simUnif(0.5, 0.7)
> u1 <- simUnif(-0.1, 0.1)
> n31 <- simNorm(0.3, 0.1)
> 
> path.BE <- matrix(0, 4, 4)
> path.BE[3, 1:2] <- NA
> path.BE[4, 3] <- NA
> starting.BE <- matrix("", 4, 4)
> starting.BE[3, 1:2] <- "u35"
> starting.BE[4, 3] <- "u57"
> BE <- simMatrix(path.BE, starting.BE)
> 
> residual.error <- diag(4)
> residual.error[1,2] <- residual.error[2,1] <- NA
> PS <- symMatrix(residual.error, "n31")
> 
> Path.Model <- simSetPath(PS = PS, BE = BE)
> 
> u35 <- simUnif(0.3, 0.5)
> u57 <- simUnif(0.5, 0.7)
> u1 <- simUnif(-0.1, 0.1)
> n31 <- simNorm(0.3, 0.1)
> 
> path.GA <- matrix(0, 2, 2)
> path.GA[1, 1:2] <- NA
> GA <- simMatrix(path.GA, "u35")
> 
> path.BE <- matrix(0, 2, 2)
> path.BE[2, 1] <- NA
> BE <- simMatrix(path.BE, "u57")
> 
> exo.cor <- matrix(NA, 2, 2)
> diag(exo.cor) <- 1
> PH <- symMatrix(exo.cor, "n31")
> 
> PS <- symMatrix(diag(2))
> 
> Path.Exo.Model <- simSetPath(PS = PS, BE = BE, PH = PH, GA = GA, exo=TRUE)
> 
> 
> 
> cleanEx()
> nameEx("simSetSEM")
> ### * simSetSEM
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: simSetSEM
> ### Title: Create a set of matrix belongs to SEM model
> ### Aliases: simSetSEM
> 
> ### ** Examples
> 
> u68 <- simUnif(0.6, 0.8)
> loading <- matrix(0, 8, 3)
> loading[1:3, 1] <- NA
> loading[4:6, 2] <- NA
> loading[7:8, 3] <- NA
> loading.start <- matrix("", 8, 3)
> loading.start[1:3, 1] <- 0.7
> loading.start[4:6, 2] <- 0.7
> loading.start[7:8, 3] <- "u68"
> LY <- simMatrix(loading, loading.start)
> 
> TE <- symMatrix(diag(8))
> 
> factor.cor <- diag(3)
> factor.cor[1, 2] <- factor.cor[2, 1] <- NA
> PS <- symMatrix(factor.cor, 0.5)
> 
> path <- matrix(0, 3, 3)
> path[3, 1:2] <- NA
> path.start <- matrix(0, 3, 3)
> path.start[3, 1] <- "n65"
> path.start[3, 2] <- "u35"
> BE <- simMatrix(path, path.start)
> 
> SEM.model <- simSetSEM(BE=BE, LY=LY, PS=PS, TE=TE)
> 
> loading.X <- matrix(0, 6, 2)
> loading.X[1:3, 1] <- NA
> loading.X[4:6, 2] <- NA
> LX <- simMatrix(loading.X, 0.7)
> 
> loading.Y <- matrix(NA, 2, 1)
> LY <- simMatrix(loading.Y, "u68")
> 
> TD <- symMatrix(diag(6))
> 
> TE <- symMatrix(diag(2))
> 
> factor.K.cor <- matrix(NA, 2, 2)
> diag(factor.K.cor) <- 1
> PH <- symMatrix(factor.K.cor, 0.5)
> 
> PS <- symMatrix(as.matrix(1))
> 
> path.GA <- matrix(NA, 1, 2)
> path.GA.start <- matrix(c("n65", "u35"), ncol=2)
> GA <- simMatrix(path.GA, path.GA.start)
> 
> BE <- simMatrix(as.matrix(0))
> 
> SEM.Exo.model <- simSetSEM(GA=GA, BE=BE, LX=LX, LY=LY, PH=PH, PS=PS, TD=TD, TE=TE, exo=TRUE)
> 
> 
> 
> cleanEx()
> nameEx("simUnif")
> ### * simUnif
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: simUnif
> ### Title: Create random uniform distribution object
> ### Aliases: simUnif
> 
> ### ** Examples
> 
> u1 <- simUnif(-0.1, 0.1)
> run(u1)
[1] -0.04689827
> 
> 
> 
> cleanEx()
> nameEx("simVector")
> ### * simVector
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: simVector
> ### Title: Create simVector that save free parameters and starting values,
> ###   as well as fixed values
> ### Aliases: simVector
> 
> ### ** Examples
> 
> factor.mean <- rep(NA, 4)
> AL <- simVector(factor.mean, 0)
> 
> n02 <- simNorm(0, 0.2)
> factor.start <- rep("n02", 4)
> KA <- simVector(factor.mean, factor.start)
> 
> 
> 
> cleanEx()
> nameEx("summaryParam")
> ### * summaryParam
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: summaryParam
> ### Title: Provide summary of parameter estimates and standard error across
> ###   replications
> ### Aliases: summaryParam summaryParam-methods summaryParam,ANY-method
> ###   summaryParam,SimResult-method summaryParam,SimModelOut-method
> ###   summaryParam,SimModelMIOut-method
> 
> ### ** Examples
> 
> showClass("SimResult")
Class "SimResult" [package "simsem"]

Slots:
                                                                        
Name:   modelType       nRep       coef         se        fit  converged
Class:  character    numeric data.frame data.frame data.frame     vector
                            
Name:  paramValue       seed
Class: data.frame    numeric
> loading <- matrix(0, 6, 1)
> loading[1:6, 1] <- NA
> LX <- simMatrix(loading, 0.7)
> PH <- symMatrix(diag(1))
> TD <- symMatrix(diag(6))
> CFA.Model <- simSetCFA(LY = LX, PS = PH, TE = TD)
> SimData <- simData(500, CFA.Model)
> SimModel <- simModel(CFA.Model)
> # We make the examples running only 50 replications to save time.
> # In reality, more replications are needed.
> Output <- simResult(50, SimData, SimModel)
> summaryParam(Output)
      Estimate.Average Estimate.SD Average.SE Power..Not.equal.0. Average.Param
LY1_1     0.6987208308  0.03662475 0.04166285                1.00          0.70
LY2_1     0.6992890235  0.03879634 0.04143943                1.00          0.70
LY3_1     0.6911651213  0.03931740 0.04151331                1.00          0.70
LY4_1     0.7000988977  0.04450588 0.04158715                1.00          0.70
LY5_1     0.6874597596  0.04591153 0.04166237                1.00          0.70
LY6_1     0.6996311395  0.03842986 0.04165609                1.00          0.70
TE1_1     0.5058795207  0.03596587 0.03851617                1.00          0.51
TE2_2     0.4974056235  0.04085267 0.03803219                1.00          0.51
TE3_3     0.5054854290  0.04053321 0.03834738                1.00          0.51
TE4_4     0.5019295667  0.04173831 0.03833704                1.00          0.51
TE5_5     0.5133116099  0.05016361 0.03875122                1.00          0.51
TE6_6     0.5047686442  0.04308396 0.03850665                1.00          0.51
TY1       0.0011882815  0.04405939 0.04459888                0.08          0.00
TY2      -0.0019316303  0.04390733 0.04442694                0.06          0.00
TY3      -0.0010193095  0.03810069 0.04435987                0.04          0.00
TY4       0.0007947424  0.04728266 0.04455990                0.04          0.00
TY5       0.0004424934  0.03530702 0.04442965                0.02          0.00
TY6       0.0023901076  0.04422891 0.04460613                0.02          0.00
       Average.Bias Coverage
LY1_1 -1.279169e-03     0.98
LY2_1 -7.109765e-04     0.98
LY3_1 -8.834879e-03     0.96
LY4_1  9.889772e-05     0.94
LY5_1 -1.254024e-02     0.92
LY6_1 -3.688605e-04     0.98
TE1_1 -4.120479e-03     0.96
TE2_2 -1.259438e-02     0.92
TE3_3 -4.514571e-03     0.94
TE4_4 -8.070433e-03     0.92
TE5_5  3.311610e-03     0.90
TE6_6 -5.231356e-03     0.94
TY1    1.188281e-03     0.92
TY2   -1.931630e-03     0.94
TY3   -1.019309e-03     0.96
TY4    7.947424e-04     0.96
TY5    4.424934e-04     0.98
TY6    2.390108e-03     0.98
> summaryParam(Output, detail=TRUE)
      Estimate.Average Estimate.SD Average.SE Power..Not.equal.0. Average.Param
LY1_1     0.6987208308  0.03662475 0.04166285                1.00          0.70
LY2_1     0.6992890235  0.03879634 0.04143943                1.00          0.70
LY3_1     0.6911651213  0.03931740 0.04151331                1.00          0.70
LY4_1     0.7000988977  0.04450588 0.04158715                1.00          0.70
LY5_1     0.6874597596  0.04591153 0.04166237                1.00          0.70
LY6_1     0.6996311395  0.03842986 0.04165609                1.00          0.70
TE1_1     0.5058795207  0.03596587 0.03851617                1.00          0.51
TE2_2     0.4974056235  0.04085267 0.03803219                1.00          0.51
TE3_3     0.5054854290  0.04053321 0.03834738                1.00          0.51
TE4_4     0.5019295667  0.04173831 0.03833704                1.00          0.51
TE5_5     0.5133116099  0.05016361 0.03875122                1.00          0.51
TE6_6     0.5047686442  0.04308396 0.03850665                1.00          0.51
TY1       0.0011882815  0.04405939 0.04459888                0.08          0.00
TY2      -0.0019316303  0.04390733 0.04442694                0.06          0.00
TY3      -0.0010193095  0.03810069 0.04435987                0.04          0.00
TY4       0.0007947424  0.04728266 0.04455990                0.04          0.00
TY5       0.0004424934  0.03530702 0.04442965                0.02          0.00
TY6       0.0023901076  0.04422891 0.04460613                0.02          0.00
       Average.Bias Coverage      Rel.Bias     Std.Bias Rel.SE.Bias
LY1_1 -1.279169e-03     0.98 -0.0018273846 -0.034926359  0.13755986
LY2_1 -7.109765e-04     0.98 -0.0010156807 -0.018325865  0.06812731
LY3_1 -8.834879e-03     0.96 -0.0126212553 -0.224706603  0.05585104
LY4_1  9.889772e-05     0.94  0.0001412825  0.002222127 -0.06558085
LY5_1 -1.254024e-02     0.92 -0.0179146291 -0.273139233 -0.09255102
LY6_1 -3.688605e-04     0.98 -0.0005269436 -0.009598278  0.08395119
TE1_1 -4.120479e-03     0.96 -0.0080793712 -0.114566384  0.07090910
TE2_2 -1.259438e-02     0.92 -0.0246948558 -0.308287706 -0.06904028
TE3_3 -4.514571e-03     0.94 -0.0088521000 -0.111379565 -0.05392673
TE4_4 -8.070433e-03     0.92 -0.0158243791 -0.193357942 -0.08149026
TE5_5  3.311610e-03     0.90  0.0064933527  0.066016184 -0.22750336
TE6_6 -5.231356e-03     0.94 -0.0102575604 -0.121422346 -0.10624159
TY1    1.188281e-03     0.92            NA  0.026969992  0.01224442
TY2   -1.931630e-03     0.94            NA -0.043993344  0.01183434
TY3   -1.019309e-03     0.96            NA -0.026753041  0.16427987
TY4    7.947424e-04     0.96            NA  0.016808327 -0.05758485
TY5    4.424934e-04     0.98            NA  0.012532729  0.25837995
TY6    2.390108e-03     0.98            NA  0.054039482  0.00852871
> 
> 
> 
> cleanEx()
> nameEx("summaryShort")
> ### * summaryShort
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: summaryShort
> ### Title: Provide short summary of an object.
> ### Aliases: summaryShort summaryShort-methods summaryShort,ANY-method
> ###   summaryShort,vector-method summaryShort,matrix-method
> ###   summary,SimFreeParam-method summary,SimLabels-method
> ###   summary,MatrixSet-method summary,SimRSet-method
> 
> ### ** Examples
> 
> u89 <- simUnif(0.8, 0.9)
> loading <- matrix(0, 6, 2)
> loading[1:3, 1] <- NA
> loading[4:6, 2] <- NA
> loadingValues <- matrix(0, 6, 2)
> LX <- simMatrix(loading, "u89")
> summaryShort(LX)
     [,1]     [,2]    
[1,] "NA:u89" "0"     
[2,] "NA:u89" "0"     
[3,] "NA:u89" "0"     
[4,] "0"      "NA:u89"
[5,] "0"      "NA:u89"
[6,] "0"      "NA:u89"
> 
> 
> 
> cleanEx()
> nameEx("symMatrix")
> ### * symMatrix
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: symMatrix
> ### Title: Create symmetric simMatrix that save free parameters and
> ###   starting values, as well as fixed values
> ### Aliases: symMatrix
> 
> ### ** Examples
> 
> latent.cor <- matrix(NA, 3, 3)
> diag(latent.cor) <- 1
> PH <- symMatrix(latent.cor, 0.5)
> 
> u46 <- simUnif(0.4, 0.6)
> factor.cor <- matrix(NA, 4, 4)
> diag(factor.cor) <- 1
> factor.cor.start <- matrix("u46", 4, 4)
> factor.cor.start[1, 2] <- factor.cor.start[2, 1] <- "0.5"
> PS <- symMatrix(factor.cor, factor.cor.start)
> 
> 
> 
> ### * <FOOTER>
> ###
> cat("Time elapsed: ", proc.time() - get("ptime", pos = 'CheckExEnv'),"\n")
Time elapsed:  43.63 0.17 43.93 NA NA 
> grDevices::dev.off()
null device 
          1 
> ###
> ### Local variables: ***
> ### mode: outline-minor ***
> ### outline-regexp: "\\(> \\)?### [*]+" ***
> ### End: ***
> quit('no')
