simsem, Version 0.0-1.7 10/11/11

- Write all documents of public functions and public classes, including all links within the help files.
- Write comments on some functions about the purposes, arguments, and return values.
- Write comments on all classes about the purposes, constructor, and its arguments.
- Delete visualize method and write plot.cutoff instead.
- Add find.power and plot.power methods.
- Add summary of simModel and simResult
- Update the vignette (the introduction manual), including the example of power analysis, add sections on help files and give us feedback. Update object diagram.

simsem, Version 0.0-1.8 10/12/11

- Add simAnalysis.c into the package
- debug constrain.matrices(list, simConstraint) when constrained LX matrix
- Add vectorize functions
- Add combine.object(freeParamSet, list) where list is the lavaan object
- Change simResult.c to save parameter estimates and SE
- Change find.cutoff, find.power, plot.cutoff, plot.power according to the change in simResult
- Add new function summary.parameters for simResult
- Add documentation for simAnalysis.c and summary.parameters function
- Update the vignette on the summary.parameters function

simsem, Version 0.0-2.0 11/15/11

- Change all public function names and public function arguments to camelCase (private functions still have bad naming)
- Change the names and attributes of all public and private classes.
- Change file names according to the name changes.
*All names changes details are in the simsemNameChangeToV0.0-2.xls
- All documentation are changed according to the name changes.
- Use \itemize and \enumerate appropriate to the context in documentation files
- simResult.f can take list of data frame
- Make silent argument in simResult.f to be better (some error messages still appear)
- Update the vignette according to the name changes and comments from Maurico
- Add the function recap section in each example in the vignette.

simsem, Version 0.0-2.1 11/16/11

- Add SimDataOut class. The constructor of this class is run(simData, dataOnly=FALSE). 
	*The attributes of this class are data, free parameters, parameter value underlying the data, parameter value + misspecification underlying the data, and equality constraint.
- run-simModel.c can take objects from SimDataOut class and analyze bias in parameter estimates and whether confidence intervals cover the underlying parameter values.
- All summary methods are improved to be more readable and more informative.
- summary-SimDataOut.c is added
- summaryParam-SimModelOut.c is added.
- summaryParam-SimResult.c is modified to provide average parameter values, standard deviation of parameter values, average bias, standard deviation of bias, percentage coverage, relative bias, relative bias of SE, and standardized bias. Last three is provided if setting detail=TRUE.
- summaryParam documentation file is modified accordingly.
- SimModelOut.c and SimResult.c are changed to have paramValue attributes.
- subtractObject.f is written to subtract two sets of parameter values. 
- Update the vignette by explaining the output from summary.f 
- Bug fixes in create.free.parameters.f, simSetCFA.f, simSetPath.f, simSetSEM.f that did not free error variances and measurement intercepts when using default.
- Change the name of constant.vector.f --> constantVector.f
- Add freeVector.f to create vector of free parameters with starting values.
% Existing Problem: In SEM model, total endogenous factor variances are fixed as 1 in data model but, instead, residual factor variances are fixed as 1 in the estimation. Therefore, high bias in factor loading and measurement error variances in endogenous side. Change in parameter values are needed.


Note
*.f = function
*.c = class

simsem, Version 0.0-3.0 11/17/11
- Patrick builds simsem and haphazardly increases the version number without
  documenting the additional functionality.

simsem, Version 0.0-4.0 11/17/11
- Add imposeMissing.R to package for imposing missing data.
- Add runMI.R to package for running multiple imputation on missing data sets
  and managing the result pooling
- Add miPool.R: pools MI results

simsem, Version 0.0-5.0 02/09/12
- Handle warnings from the summaryParam function
- Handle warnings and errors from the examples of imposeMissing function
- Change the way to run simResult function to facilitate Rmpi in the future (using the runRep function)
- Change miPool to pool the SimModelOut class
- Change the order of the simResult function from (simData, simModel, simMissing, nRep) to (nRep, simData, simModel, simMissing). The examples and manual are changed accordingly.
- Add the SimModelMIOut (with NullSimModelOut) class which is the child class of the SimModelOut class
- Change the is.null.object and summaryParam functions for the SimModelMIOut class


